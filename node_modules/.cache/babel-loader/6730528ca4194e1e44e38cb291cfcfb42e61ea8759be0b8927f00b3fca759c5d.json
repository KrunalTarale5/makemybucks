{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\makemybucks\\\\src\\\\views\\\\admin\\\\sales-executive\\\\update\\\\AddressDetailsForm.tsx\",\n  _s = $RefreshSig$();\nimport InputField from '@components/InputField';\nimport { PoppinsTypography } from '@components/Typography';\nimport { AddressDetailsFormFields, UpdateSalesExecutiveContext, validateAddressDetailsFields, validateAddressDetailsForm } from '@hooks/admin-update-sales-executive';\nimport { Checkbox, FormControlLabel, Grid, Stack, useTheme } from '@mui/material';\nimport { memo, useContext, useEffect, useState } from 'react';\nimport NavigateButtons from '../NavigateButtons';\nimport { validateIsNumber } from '@utils/validator';\nimport { useGetStateApi } from '@hooks/admin-add-sales-executive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localAddIntialFormData = formData => ({\n  local_flat_no: formData === null || formData === void 0 ? void 0 : formData.local_flat_no,\n  local_street_name: formData === null || formData === void 0 ? void 0 : formData.local_street_name,\n  local_city: formData === null || formData === void 0 ? void 0 : formData.local_city,\n  local_pin_code: formData === null || formData === void 0 ? void 0 : formData.local_pin_code,\n  local_state: formData === null || formData === void 0 ? void 0 : formData.local_state\n});\nconst localAddIntialFormError = {\n  local_flat_no: '',\n  local_street_name: '',\n  local_city: '',\n  local_pin_code: '',\n  local_state: ''\n};\nconst permanentAddIntialFormData = formData => ({\n  permanent_flat_no: formData === null || formData === void 0 ? void 0 : formData.permanent_flat_no,\n  permanent_street_name: formData === null || formData === void 0 ? void 0 : formData.local_street_name,\n  permanent_city: formData === null || formData === void 0 ? void 0 : formData.permanent_city,\n  permanent_pin_code: formData === null || formData === void 0 ? void 0 : formData.permanent_pin_code,\n  permanent_state: formData === null || formData === void 0 ? void 0 : formData.permanent_state\n});\nconst permanaentAddIntialFormError = {\n  permanent_flat_no: '',\n  permanent_street_name: '',\n  permanent_city: '',\n  permanent_pin_code: '',\n  permanent_state: ''\n};\nconst AddressDetailsForm = () => {\n  _s();\n  const theme = useTheme();\n  const formContext = useContext(UpdateSalesExecutiveContext);\n  const GetStateApi = useGetStateApi();\n  const [localAddformData, setLocalAddFormData] = useState(localAddIntialFormData(formContext.formData));\n  const [permanentAddformData, setPermanentAddFormData] = useState(permanentAddIntialFormData(formContext.formData));\n  const [localAddformError, setLocalAddFormError] = useState(localAddIntialFormError);\n  const [permanentAddFormError, setPermanentAddFormError] = useState(permanaentAddIntialFormError);\n  useEffect(() => {\n    var _GetStateApi$data, _formContext$formData2, _formContext$formData3, _formContext$formData4, _formContext$formData5, _GetStateApi$data2;\n    setLocalAddFormData({\n      ...formContext.formData,\n      local_state: (_GetStateApi$data = GetStateApi.data) === null || _GetStateApi$data === void 0 ? void 0 : _GetStateApi$data.data.state_data.map(r => ({\n        label: r.state_name,\n        value: r.id\n      })).filter(f => {\n        var _formContext$formData;\n        return f.label === ((_formContext$formData = formContext.formData) === null || _formContext$formData === void 0 ? void 0 : _formContext$formData.local_state);\n      })[0]\n    });\n    const permanent_state = typeof ((_formContext$formData2 = formContext.formData) === null || _formContext$formData2 === void 0 ? void 0 : _formContext$formData2.permanent_state) === 'string' ? (_formContext$formData3 = formContext.formData) === null || _formContext$formData3 === void 0 ? void 0 : _formContext$formData3.permanent_state : (_formContext$formData4 = formContext.formData) === null || _formContext$formData4 === void 0 ? void 0 : (_formContext$formData5 = _formContext$formData4.permanent_state) === null || _formContext$formData5 === void 0 ? void 0 : _formContext$formData5.label;\n    setPermanentAddFormData({\n      ...formContext.formData,\n      permanent_state: (_GetStateApi$data2 = GetStateApi.data) === null || _GetStateApi$data2 === void 0 ? void 0 : _GetStateApi$data2.data.state_data.map(r => ({\n        label: r.state_name,\n        value: r.id\n      })).filter(f => f.label === permanent_state)[0]\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formContext.formData, GetStateApi.dataUpdatedAt]);\n  const onLocalAddChange = (fieldName, value, fieldType) => {\n    let _formData = {};\n    if (fieldType === 'number') {\n      const isNumber = validateIsNumber(String(value));\n      _formData = {\n        ...localAddformData,\n        [fieldName]: isNumber ? value : localAddformData[fieldName]\n      };\n    } else {\n      _formData = {\n        ...localAddformData,\n        [fieldName]: value\n      };\n    }\n    setLocalAddFormData(_formData);\n    setLocalAddFormError({\n      ...localAddformError,\n      [fieldName]: validateAddressDetailsFields(fieldName, _formData)\n    });\n  };\n  const onPermanentAddChange = (fieldName, value, fieldType) => {\n    let _formData = {};\n    if (fieldType === 'number') {\n      const isNumber = validateIsNumber(String(value));\n      _formData = {\n        ...permanentAddformData,\n        [fieldName]: isNumber ? value : permanentAddformData[fieldName]\n      };\n    } else {\n      _formData = {\n        ...permanentAddformData,\n        [fieldName]: value\n      };\n    }\n    setPermanentAddFormData(_formData);\n    setPermanentAddFormError({\n      ...permanentAddFormError,\n      [fieldName]: validateAddressDetailsFields(fieldName, _formData)\n    });\n  };\n  const handleNextClick = () => {\n    const validatation = validateAddressDetailsForm({\n      ...localAddformData,\n      ...permanentAddformData\n    });\n    if (validatation.hasError) {\n      setLocalAddFormError(validatation.errors);\n      setPermanentAddFormError(validatation.errors);\n      return;\n    }\n    formContext.setFormData({\n      ...formContext.formData,\n      ...localAddformData,\n      ...permanentAddformData\n    });\n    formContext.setActiveStep(formContext.activeStep + 1);\n  };\n  const handlePreviousClick = () => {\n    formContext.setActiveStep(formContext.activeStep - 1);\n  };\n  const onSameAsClick = e => {\n    const data = {\n      permanent_city: localAddformData.local_city,\n      permanent_flat_no: localAddformData.local_flat_no,\n      permanent_pin_code: localAddformData.local_pin_code,\n      permanent_state: localAddformData.local_state,\n      permanent_street_name: localAddformData.local_street_name\n    };\n    setPermanentAddFormData(e.target.checked ? {\n      permanent_city: localAddformData.local_city,\n      permanent_flat_no: localAddformData.local_flat_no,\n      permanent_pin_code: localAddformData.local_pin_code,\n      permanent_state: localAddformData.local_state,\n      permanent_street_name: localAddformData.local_street_name\n    } : {});\n    if (e.target.checked) {\n      const errors = permanentAddFormError;\n      Object.keys(errors).forEach(fieldName => {\n        errors[fieldName] = validateAddressDetailsFields(fieldName, {\n          ...permanentAddformData,\n          ...data\n        });\n      });\n      setPermanentAddFormError({\n        ...permanentAddFormError,\n        ...errors\n      });\n    }\n  };\n  const getOptions = fieldName => {\n    var _GetStateApi$data3;\n    switch (fieldName) {\n      case 'permanent_state':\n      case 'local_state':\n        return (_GetStateApi$data3 = GetStateApi.data) === null || _GetStateApi$data3 === void 0 ? void 0 : _GetStateApi$data3.data.state_data.map(r => ({\n          label: r.state_name,\n          value: r.id\n        }));\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 6,\n    alignItems: 'flex-start',\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      width: `100%`,\n      flexDirection: 'row',\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        flexBasis: `50%`,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: '466px !important'\n          },\n          gap: 3,\n          children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"body1\",\n            fontWeight: 600,\n            textTransform: 'uppercase',\n            sx: {\n              color: theme.palette.common.secondaryGreyText\n            },\n            children: \"Local Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n            var _ref;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return (fieldName === 'local_flat_no' || fieldName === 'local_street_name') && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref = localAddformData === null || localAddformData === void 0 ? void 0 : localAddformData[fieldName]) !== null && _ref !== void 0 ? _ref : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(localAddformError[fieldName]),\n                helperText: localAddformError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onLocalAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 10\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              display: 'inline-grid',\n              gridTemplateColumns: `1.5fr 1fr`,\n              rowGap: 3,\n              columnGap: 1,\n              children: Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n                var _ref2;\n                const fieldName = v[0];\n                const fieldProps = v[1];\n                return (fieldName === 'local_city' || fieldName === 'local_pin_code') && /*#__PURE__*/_jsxDEV(InputField, {\n                  fieldName: fieldName,\n                  value: (_ref2 = localAddformData === null || localAddformData === void 0 ? void 0 : localAddformData[fieldName]) !== null && _ref2 !== void 0 ? _ref2 : '',\n                  fieldProps: {\n                    ...fieldProps,\n                    color: 'secondary',\n                    fullWidth: true,\n                    sx: {\n                      gap: 0,\n                      '.MuiTypography-subtitle1': {\n                        fontFamily: 'Poppins',\n                        fontSize: `14px`\n                      }\n                    },\n                    options: getOptions(fieldName),\n                    autoComplete: 'off',\n                    error: Boolean(localAddformError[fieldName]),\n                    helperText: localAddformError[fieldName]\n                  },\n                  fieldType: fieldProps.fieldType,\n                  onChange: onLocalAddChange\n                }, fieldName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 12\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n            var _ref3;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return fieldName === 'local_state' && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref3 = localAddformData === null || localAddformData === void 0 ? void 0 : localAddformData[fieldName]) !== null && _ref3 !== void 0 ? _ref3 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(localAddformError[fieldName]),\n                helperText: localAddformError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onLocalAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 10\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        flexBasis: `50%`,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: '466px !important'\n          },\n          gap: 3,\n          children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"body1\",\n            fontWeight: 600,\n            textTransform: 'uppercase',\n            sx: {\n              color: theme.palette.common.secondaryGreyText\n            },\n            children: \"Permanent Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n            var _ref4;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return (fieldName === 'permanent_flat_no' || fieldName === 'permanent_street_name') && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref4 = permanentAddformData === null || permanentAddformData === void 0 ? void 0 : permanentAddformData[fieldName]) !== null && _ref4 !== void 0 ? _ref4 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(permanentAddFormError[fieldName]),\n                helperText: permanentAddFormError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onPermanentAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 10\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              display: 'inline-grid',\n              gridTemplateColumns: `1.5fr 1fr`,\n              rowGap: 3,\n              columnGap: 1,\n              children: Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n                var _ref5;\n                const fieldName = v[0];\n                const fieldProps = v[1];\n                return (fieldName === 'permanent_city' || fieldName === 'permanent_pin_code') && /*#__PURE__*/_jsxDEV(InputField, {\n                  fieldName: fieldName,\n                  value: (_ref5 = permanentAddformData === null || permanentAddformData === void 0 ? void 0 : permanentAddformData[fieldName]) !== null && _ref5 !== void 0 ? _ref5 : '',\n                  fieldProps: {\n                    ...fieldProps,\n                    color: 'secondary',\n                    fullWidth: true,\n                    sx: {\n                      gap: 0,\n                      '.MuiTypography-subtitle1': {\n                        fontFamily: 'Poppins',\n                        fontSize: `14px`\n                      }\n                    },\n                    options: getOptions(fieldName),\n                    autoComplete: 'off',\n                    error: Boolean(permanentAddFormError[fieldName]),\n                    helperText: permanentAddFormError[fieldName]\n                  },\n                  fieldType: fieldProps.fieldType,\n                  onChange: onPermanentAddChange\n                }, fieldName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 12\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n            var _ref6;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return fieldName === 'permanent_state' && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref6 = permanentAddformData === null || permanentAddformData === void 0 ? void 0 : permanentAddformData[fieldName]) !== null && _ref6 !== void 0 ? _ref6 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(permanentAddFormError[fieldName]),\n                helperText: permanentAddFormError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onLocalAddChange,\n              addons: fieldName === 'permanent_state' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onChange: onSameAsClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 15\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n                  variant: \"subtitle1\",\n                  children: \"Same as Local Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 13\n              }, this)\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 10\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NavigateButtons, {\n      onNextClick: handleNextClick,\n      onPreviousClick: handlePreviousClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 3\n  }, this);\n};\n_s(AddressDetailsForm, \"Bxg29FFTZlZukAvLEbnYQftRYho=\", false, function () {\n  return [useTheme, useGetStateApi];\n});\n_c = AddressDetailsForm;\nexport default _c2 = /*#__PURE__*/memo(AddressDetailsForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"AddressDetailsForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["InputField","PoppinsTypography","AddressDetailsFormFields","UpdateSalesExecutiveContext","validateAddressDetailsFields","validateAddressDetailsForm","Checkbox","FormControlLabel","Grid","Stack","useTheme","memo","useContext","useEffect","useState","NavigateButtons","validateIsNumber","useGetStateApi","jsxDEV","_jsxDEV","localAddIntialFormData","formData","local_flat_no","local_street_name","local_city","local_pin_code","local_state","localAddIntialFormError","permanentAddIntialFormData","permanent_flat_no","permanent_street_name","permanent_city","permanent_pin_code","permanent_state","permanaentAddIntialFormError","AddressDetailsForm","_s","theme","formContext","GetStateApi","localAddformData","setLocalAddFormData","permanentAddformData","setPermanentAddFormData","localAddformError","setLocalAddFormError","permanentAddFormError","setPermanentAddFormError","_GetStateApi$data","_formContext$formData2","_formContext$formData3","_formContext$formData4","_formContext$formData5","_GetStateApi$data2","data","state_data","map","r","label","state_name","value","id","filter","f","_formContext$formData","dataUpdatedAt","onLocalAddChange","fieldName","fieldType","_formData","isNumber","String","onPermanentAddChange","handleNextClick","validatation","hasError","errors","setFormData","setActiveStep","activeStep","handlePreviousClick","onSameAsClick","e","target","checked","Object","keys","forEach","getOptions","_GetStateApi$data3","gap","alignItems","children","width","flexDirection","flexBasis","sx","variant","fontWeight","textTransform","color","palette","common","secondaryGreyText","fileName","_jsxFileName","lineNumber","columnNumber","entries","localAddress","v","_ref","fieldProps","fullWidth","fontFamily","fontSize","options","autoComplete","error","Boolean","helperText","onChange","container","spacing","item","display","gridTemplateColumns","rowGap","columnGap","_ref2","_ref3","permanentAddress","_ref4","_ref5","_ref6","addons","control","size","onNextClick","onPreviousClick","_c","_c2","$RefreshReg$"],"sources":["D:/Krunal/makemybucks/src/views/admin/sales-executive/update/AddressDetailsForm.tsx"],"sourcesContent":["import InputField, { InputFieldProps, InputFieldValue } from '@components/InputField';\r\nimport { PoppinsTypography } from '@components/Typography';\r\nimport {\r\n\tAddressDetailsFormFields,\r\n\tAddressDetailsFormRequest,\r\n\tAddressDetailsFormType,\r\n\tUpdateSalesExecutiveContext,\r\n\tUpdateSalesExecutiveRequest,\r\n\tvalidateAddressDetailsFields,\r\n\tvalidateAddressDetailsForm,\r\n} from '@hooks/admin-update-sales-executive';\r\nimport { FormErrorMessage, Option } from '@interfaces/common';\r\nimport { Checkbox, FormControlLabel, Grid, Stack, useTheme } from '@mui/material';\r\nimport { memo, useContext, useEffect, useState } from 'react';\r\nimport NavigateButtons from '../NavigateButtons';\r\nimport { validateIsNumber } from '@utils/validator';\r\nimport { useGetStateApi } from '@hooks/admin-add-sales-executive';\r\n\r\nconst localAddIntialFormData = (\r\n\tformData: UpdateSalesExecutiveRequest\r\n): AddressDetailsFormRequest['localAddress'] => ({\r\n\tlocal_flat_no: formData?.local_flat_no,\r\n\tlocal_street_name: formData?.local_street_name,\r\n\tlocal_city: formData?.local_city,\r\n\tlocal_pin_code: formData?.local_pin_code,\r\n\tlocal_state: formData?.local_state,\r\n});\r\n\r\nconst localAddIntialFormError: FormErrorMessage<AddressDetailsFormRequest['localAddress']> = {\r\n\tlocal_flat_no: '',\r\n\tlocal_street_name: '',\r\n\tlocal_city: '',\r\n\tlocal_pin_code: '',\r\n\tlocal_state: '',\r\n};\r\n\r\nconst permanentAddIntialFormData = (\r\n\tformData: UpdateSalesExecutiveRequest\r\n): AddressDetailsFormRequest['permanentAddress'] => ({\r\n\tpermanent_flat_no: formData?.permanent_flat_no,\r\n\tpermanent_street_name: formData?.local_street_name,\r\n\tpermanent_city: formData?.permanent_city,\r\n\tpermanent_pin_code: formData?.permanent_pin_code,\r\n\tpermanent_state: formData?.permanent_state,\r\n});\r\n\r\nconst permanaentAddIntialFormError: FormErrorMessage<\r\n\tAddressDetailsFormRequest['permanentAddress']\r\n> = {\r\n\tpermanent_flat_no: '',\r\n\tpermanent_street_name: '',\r\n\tpermanent_city: '',\r\n\tpermanent_pin_code: '',\r\n\tpermanent_state: '',\r\n};\r\n\r\nconst AddressDetailsForm = () => {\r\n\tconst theme = useTheme();\r\n\tconst formContext = useContext(UpdateSalesExecutiveContext);\r\n\tconst GetStateApi = useGetStateApi();\r\n\r\n\tconst [localAddformData, setLocalAddFormData] = useState(\r\n\t\tlocalAddIntialFormData(formContext.formData)\r\n\t);\r\n\tconst [permanentAddformData, setPermanentAddFormData] = useState(\r\n\t\tpermanentAddIntialFormData(formContext.formData)\r\n\t);\r\n\tconst [localAddformError, setLocalAddFormError] = useState(localAddIntialFormError);\r\n\tconst [permanentAddFormError, setPermanentAddFormError] = useState(permanaentAddIntialFormError);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetLocalAddFormData({\r\n\t\t\t...formContext.formData,\r\n\t\t\tlocal_state: GetStateApi.data?.data.state_data\r\n\t\t\t\t.map((r) => ({\r\n\t\t\t\t\tlabel: r.state_name,\r\n\t\t\t\t\tvalue: r.id,\r\n\t\t\t\t}))\r\n\t\t\t\t.filter((f) => f.label === formContext.formData?.local_state)[0],\r\n\t\t} as unknown as AddressDetailsFormRequest['localAddress']);\r\n\t\tconst permanent_state =\r\n\t\t\ttypeof formContext.formData?.permanent_state === 'string'\r\n\t\t\t\t? formContext.formData?.permanent_state\r\n\t\t\t\t: formContext.formData?.permanent_state?.label;\r\n\r\n\t\tsetPermanentAddFormData({\r\n\t\t\t...formContext.formData,\r\n\t\t\tpermanent_state: GetStateApi.data?.data.state_data\r\n\t\t\t\t.map((r) => ({\r\n\t\t\t\t\tlabel: r.state_name,\r\n\t\t\t\t\tvalue: r.id,\r\n\t\t\t\t}))\r\n\t\t\t\t.filter((f) => f.label === permanent_state)[0],\r\n\t\t} as unknown as AddressDetailsFormRequest['permanentAddress']);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [formContext.formData, GetStateApi.dataUpdatedAt]);\r\n\r\n\tconst onLocalAddChange = (\r\n\t\tfieldName: string,\r\n\t\tvalue: InputFieldValue,\r\n\t\tfieldType: InputFieldProps['fieldType']\r\n\t) => {\r\n\t\tlet _formData: AddressDetailsFormRequest['localAddress'] =\r\n\t\t\t{} as AddressDetailsFormRequest['localAddress'];\r\n\t\tif (fieldType === 'number') {\r\n\t\t\tconst isNumber = validateIsNumber(String(value));\r\n\t\t\t_formData = {\r\n\t\t\t\t...localAddformData,\r\n\t\t\t\t[fieldName]: isNumber\r\n\t\t\t\t\t? value\r\n\t\t\t\t\t: localAddformData[fieldName as keyof AddressDetailsFormRequest['localAddress']],\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_formData = { ...localAddformData, [fieldName]: value };\r\n\t\t}\r\n\t\tsetLocalAddFormData(_formData);\r\n\t\tsetLocalAddFormError({\r\n\t\t\t...localAddformError,\r\n\t\t\t[fieldName]: validateAddressDetailsFields(\r\n\t\t\t\tfieldName as keyof AddressDetailsFormType,\r\n\t\t\t\t_formData\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\r\n\tconst onPermanentAddChange = (\r\n\t\tfieldName: string,\r\n\t\tvalue: InputFieldValue,\r\n\t\tfieldType: InputFieldProps['fieldType']\r\n\t) => {\r\n\t\tlet _formData: AddressDetailsFormRequest['permanentAddress'] =\r\n\t\t\t{} as AddressDetailsFormRequest['permanentAddress'];\r\n\t\tif (fieldType === 'number') {\r\n\t\t\tconst isNumber = validateIsNumber(String(value));\r\n\t\t\t_formData = {\r\n\t\t\t\t...permanentAddformData,\r\n\t\t\t\t[fieldName]: isNumber\r\n\t\t\t\t\t? value\r\n\t\t\t\t\t: permanentAddformData[fieldName as keyof AddressDetailsFormRequest['permanentAddress']],\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_formData = { ...permanentAddformData, [fieldName]: value };\r\n\t\t}\r\n\t\tsetPermanentAddFormData(_formData);\r\n\t\tsetPermanentAddFormError({\r\n\t\t\t...permanentAddFormError,\r\n\t\t\t[fieldName]: validateAddressDetailsFields(\r\n\t\t\t\tfieldName as keyof AddressDetailsFormType,\r\n\t\t\t\t_formData\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\tconst handleNextClick = () => {\r\n\t\tconst validatation = validateAddressDetailsForm({\r\n\t\t\t...localAddformData,\r\n\t\t\t...permanentAddformData,\r\n\t\t});\r\n\t\tif (validatation.hasError) {\r\n\t\t\tsetLocalAddFormError(\r\n\t\t\t\tvalidatation.errors as FormErrorMessage<AddressDetailsFormRequest['localAddress']>\r\n\t\t\t);\r\n\t\t\tsetPermanentAddFormError(\r\n\t\t\t\tvalidatation.errors as FormErrorMessage<AddressDetailsFormRequest['permanentAddress']>\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tformContext.setFormData({\r\n\t\t\t...formContext.formData,\r\n\t\t\t...localAddformData,\r\n\t\t\t...permanentAddformData,\r\n\t\t});\r\n\t\tformContext.setActiveStep(formContext.activeStep + 1);\r\n\t};\r\n\r\n\tconst handlePreviousClick = () => {\r\n\t\tformContext.setActiveStep(formContext.activeStep - 1);\r\n\t};\r\n\r\n\tconst onSameAsClick = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst data = {\r\n\t\t\tpermanent_city: localAddformData.local_city,\r\n\t\t\tpermanent_flat_no: localAddformData.local_flat_no,\r\n\t\t\tpermanent_pin_code: localAddformData.local_pin_code,\r\n\t\t\tpermanent_state: localAddformData.local_state,\r\n\t\t\tpermanent_street_name: localAddformData.local_street_name,\r\n\t\t};\r\n\t\tsetPermanentAddFormData(\r\n\t\t\te.target.checked\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tpermanent_city: localAddformData.local_city,\r\n\t\t\t\t\t\tpermanent_flat_no: localAddformData.local_flat_no,\r\n\t\t\t\t\t\tpermanent_pin_code: localAddformData.local_pin_code,\r\n\t\t\t\t\t\tpermanent_state: localAddformData.local_state,\r\n\t\t\t\t\t\tpermanent_street_name: localAddformData.local_street_name,\r\n\t\t\t\t  }\r\n\t\t\t\t: ({} as AddressDetailsFormRequest['permanentAddress'])\r\n\t\t);\r\n\t\tif (e.target.checked) {\r\n\t\t\tconst errors: FormErrorMessage<AddressDetailsFormRequest['permanentAddress']> =\r\n\t\t\t\tpermanentAddFormError;\r\n\r\n\t\t\tObject.keys(errors).forEach((fieldName) => {\r\n\t\t\t\terrors[fieldName as keyof FormErrorMessage<AddressDetailsFormRequest['permanentAddress']>] =\r\n\t\t\t\t\tvalidateAddressDetailsFields(fieldName as keyof AddressDetailsFormType, {\r\n\t\t\t\t\t\t...permanentAddformData,\r\n\t\t\t\t\t\t...data,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetPermanentAddFormError({\r\n\t\t\t\t...permanentAddFormError,\r\n\t\t\t\t...errors,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst getOptions = (\r\n\t\tfieldName:\r\n\t\t\t| keyof AddressDetailsFormRequest['permanentAddress']\r\n\t\t\t| keyof AddressDetailsFormRequest['localAddress']\r\n\t): Option[] | undefined => {\r\n\t\tswitch (fieldName) {\r\n\t\t\tcase 'permanent_state':\r\n\t\t\tcase 'local_state':\r\n\t\t\t\treturn GetStateApi.data?.data.state_data.map((r) => ({\r\n\t\t\t\t\tlabel: r.state_name,\r\n\t\t\t\t\tvalue: r.id,\r\n\t\t\t\t}));\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\tgap={6}\r\n\t\t\talignItems={'flex-start'}\r\n\t\t>\r\n\t\t\t<Stack\r\n\t\t\t\twidth={`100%`}\r\n\t\t\t\tflexDirection={'row'}\r\n\t\t\t>\r\n\t\t\t\t<Stack flexBasis={`50%`}>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tsx={{ width: '466px !important' }}\r\n\t\t\t\t\t\tgap={3}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\ttextTransform={'uppercase'}\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLocal Address\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t(fieldName === 'local_flat_no' || fieldName === 'local_street_name') && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tspacing={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tdisplay={'inline-grid'}\r\n\t\t\t\t\t\t\t\tgridTemplateColumns={`1.5fr 1fr`}\r\n\t\t\t\t\t\t\t\trowGap={3}\r\n\t\t\t\t\t\t\t\tcolumnGap={1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t(fieldName === 'local_city' || fieldName === 'local_pin_code') && (\r\n\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tfieldName === 'local_state' && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Stack flexBasis={`50%`}>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tsx={{ width: '466px !important' }}\r\n\t\t\t\t\t\tgap={3}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\ttextTransform={'uppercase'}\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPermanent Address\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t(fieldName === 'permanent_flat_no' || fieldName === 'permanent_street_name') && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onPermanentAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tspacing={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tdisplay={'inline-grid'}\r\n\t\t\t\t\t\t\t\tgridTemplateColumns={`1.5fr 1fr`}\r\n\t\t\t\t\t\t\t\trowGap={3}\r\n\t\t\t\t\t\t\t\tcolumnGap={1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t(fieldName === 'permanent_city' || fieldName === 'permanent_pin_code') && (\r\n\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onPermanentAddChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tfieldName === 'permanent_state' && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData?.[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t\taddons={\r\n\t\t\t\t\t\t\t\t\t\t\tfieldName === 'permanent_state' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onSameAsClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSame as Local Address\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\r\n\t\t\t<NavigateButtons\r\n\t\t\t\tonNextClick={handleNextClick}\r\n\t\t\t\tonPreviousClick={handlePreviousClick}\r\n\t\t\t/>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nexport default memo(AddressDetailsForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}