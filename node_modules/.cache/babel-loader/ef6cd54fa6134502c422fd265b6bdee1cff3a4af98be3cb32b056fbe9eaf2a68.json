{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\Novabite\\\\makemybucks\\\\src\\\\@components\\\\protectedRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Navigate, useNavigate } from 'react-router-dom';\nimport { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAlertDialog } from './AlertDialog';\nimport { setBannerInfo, setDirty, setToken, setUserInfo } from '_store/actions/ui-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  navigateTo\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    showAlertDialog,\n    hideAlertDialog\n  } = useAlertDialog();\n  const {\n    userInfo,\n    token,\n    isDirty\n  } = useSelector(state => state.richPenny);\n  useEffect(() => {\n    if (isDirty) {\n      showAlertDialog({\n        title: `Session expired`,\n        content: 'Session expired',\n        buttons: [{\n          children: 'ok',\n          variant: 'outlined',\n          callback: () => {\n            hideAlertDialog();\n            dispatch(setDirty(false));\n            dispatch(setToken(null));\n            dispatch(setUserInfo(null));\n            dispatch(setBannerInfo(null));\n            navigate(navigateTo);\n          }\n        }]\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDirty]);\n  return userInfo && token ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: navigateTo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 40\n  }, this);\n};\n_s(ProtectedRoute, \"hKGqfSddy1RChxcLxTpYLCKTBiw=\", false, function () {\n  return [useNavigate, useDispatch, useAlertDialog, useSelector];\n});\n_c = ProtectedRoute;\nexport default _c2 = /*#__PURE__*/memo(ProtectedRoute);\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["Navigate","useNavigate","memo","useEffect","useDispatch","useSelector","useAlertDialog","setBannerInfo","setDirty","setToken","setUserInfo","jsxDEV","_jsxDEV","ProtectedRoute","children","navigateTo","_s","navigate","dispatch","showAlertDialog","hideAlertDialog","userInfo","token","isDirty","state","richPenny","title","content","buttons","variant","callback","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","_c2","$RefreshReg$"],"sources":["D:/Krunal/Novabite/makemybucks/src/@components/protectedRoute.tsx"],"sourcesContent":["import { Navigate, useNavigate } from 'react-router-dom';\r\nimport { FC, memo, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '_store/reducers';\r\nimport { useAlertDialog } from './AlertDialog';\r\nimport { setBannerInfo, setDirty, setToken, setUserInfo } from '_store/actions/ui-actions';\r\n\r\ninterface ProtectedRouteProps {\r\n\tchildren: JSX.Element;\r\n\tnavigateTo: string;\r\n}\r\n\r\nconst ProtectedRoute: FC<ProtectedRouteProps> = ({ children, navigateTo }): JSX.Element => {\r\n\tconst navigate = useNavigate();\r\n\tconst dispatch = useDispatch();\r\n\tconst { showAlertDialog, hideAlertDialog } = useAlertDialog();\r\n\tconst { userInfo, token, isDirty } = useSelector((state: RootState) => state.richPenny);\r\n\tuseEffect(() => {\r\n\t\tif (isDirty) {\r\n\t\t\tshowAlertDialog({\r\n\t\t\t\ttitle: `Session expired`,\r\n\t\t\t\tcontent: 'Session expired',\r\n\t\t\t\tbuttons: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchildren: 'ok',\r\n\t\t\t\t\t\tvariant: 'outlined',\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t\t\tdispatch(setDirty(false));\r\n\t\t\t\t\t\t\tdispatch(setToken(null));\r\n\t\t\t\t\t\t\tdispatch(setUserInfo(null));\r\n\t\t\t\t\t\t\tdispatch(setBannerInfo(null));\r\n\t\t\t\t\t\t\tnavigate(navigateTo);\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t});\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [isDirty]);\r\n\r\n\treturn userInfo && token ? children : <Navigate to={navigateTo} />;\r\n};\r\n\r\nexport default memo(ProtectedRoute);\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAAaC,IAAI,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,aAAa,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3F,MAAMC,cAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,KAAkB;EAAAC,EAAA;EAC1F,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEe,eAAe;IAAEC;EAAgB,CAAC,GAAGd,cAAc,CAAC,CAAC;EAC7D,MAAM;IAAEe,QAAQ;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGlB,WAAW,CAAEmB,KAAgB,IAAKA,KAAK,CAACC,SAAS,CAAC;EACvFtB,SAAS,CAAC,MAAM;IACf,IAAIoB,OAAO,EAAE;MACZJ,eAAe,CAAC;QACfO,KAAK,EAAG,iBAAgB;QACxBC,OAAO,EAAE,iBAAiB;QAC1BC,OAAO,EAAE,CACR;UACCd,QAAQ,EAAE,IAAI;UACde,OAAO,EAAE,UAAU;UACnBC,QAAQ,EAAEA,CAAA,KAAM;YACfV,eAAe,CAAC,CAAC;YACjBF,QAAQ,CAACV,QAAQ,CAAC,KAAK,CAAC,CAAC;YACzBU,QAAQ,CAACT,QAAQ,CAAC,IAAI,CAAC,CAAC;YACxBS,QAAQ,CAACR,WAAW,CAAC,IAAI,CAAC,CAAC;YAC3BQ,QAAQ,CAACX,aAAa,CAAC,IAAI,CAAC,CAAC;YAC7BU,QAAQ,CAACF,UAAU,CAAC;UACrB;QACD,CAAC;MAEH,CAAC,CAAC;IACH;IACA;EACD,CAAC,EAAE,CAACQ,OAAO,CAAC,CAAC;EAEb,OAAOF,QAAQ,IAAIC,KAAK,GAAGR,QAAQ,gBAAGF,OAAA,CAACZ,QAAQ;IAAC+B,EAAE,EAAEhB;EAAW;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE,CAAC;AAACnB,EAAA,CA9BIH,cAAuC;EAAA,QAC3BZ,WAAW,EACXG,WAAW,EACiBE,cAAc,EACtBD,WAAW;AAAA;AAAA+B,EAAA,GAJ3CvB,cAAuC;AAgC7C,eAAAwB,GAAA,gBAAenC,IAAI,CAACW,cAAc,CAAC;AAAC,IAAAuB,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}