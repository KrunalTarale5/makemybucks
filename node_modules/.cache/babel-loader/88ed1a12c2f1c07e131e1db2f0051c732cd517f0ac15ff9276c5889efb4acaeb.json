{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\Novabite\\\\makemybucks\\\\src\\\\views\\\\admin\\\\qr-codes\\\\DownloadQrCode.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import { useSnackbar } from '@components/Snackbar';\n// import { PoppinsTypography } from '@components/Typography';\n// import { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\n// import { Option } from '@interfaces/common';\n// import { LoadingButton } from '@mui/lab';\n// import {\n// \tButton,\n// \tDialog,\n// \tDialogContent,\n// \tDialogTitle,\n// \tFormControl,\n// \tFormControlLabel,\n// \tRadio,\n// \tRadioGroup,\n// \tStack,\n// \tuseTheme,\n// } from '@mui/material';\n// import { FC, memo, useState } from 'react';\n// import { useAlertDialog } from '@components/AlertDialog';\n// import JSZip from 'jszip';\n// import { generateQrOnBanner } from 'qr-on-banner';\n\n// const BUTTONS = [500, 1000, 2000, 3000, 4000, 5000, 6000];\n// const IMAGES: Option[] = [\n// \t{ label: 'Image1', value: 'bg_url_1' },\n// \t{ label: 'Image2', value: 'bg_url_2' },\n// \t{ label: 'Image3', value: 'bg_url_3' },\n// ];\n\n// interface DownloadQrCodeProps {\n// \trefetch: () => void;\n// }\n\n// const DownloadQrCode: FC<DownloadQrCodeProps> = (props) => {\n// \tconst theme = useTheme();\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\n// \tconst { showAlertDialog, hideAlertDialog } = useAlertDialog();\n\n// \tconst GetQRBgUrlsApi = useGetQRBgUrlsApi();\n// \tconst DownloadQRApi = useDownloadQRApi();\n\n// \tconst [selectedButton, setSelectedButton] = useState<number | null>(null);\n// \tconst [selectedImage, setSelectedImage] = useState<Option | null>(null);\n// \tconst [openQRBgDialog, setOpenQRBgDialog] = useState<Option | null>(null);\n// \tconst [isDownloading, setIsDownloading] = useState<boolean>(false);\n\n// \tconst zip = new JSZip();\n\n// \tconst OnDownloadClick = () => {\n// \t\tconst selectedImgUrl =\n// \t\t\tGetQRBgUrlsApi.data?.data.bg_urls[\n// \t\t\t\tIMAGES.findIndex((i) => i.value === selectedImage?.value)\n// \t\t\t] ?? '';\n\n// \t\tif (!selectedImgUrl) {\n// \t\t\tshowAlertDialog({\n// \t\t\t\ttitle: `Download QR Code`,\n// \t\t\t\tcontent: 'No image associated with the selected image.',\n// \t\t\t\tbuttons: [\n// \t\t\t\t\t{\n// \t\t\t\t\t\tchildren: 'ok',\n// \t\t\t\t\t\tvariant: 'outlined',\n// \t\t\t\t\t\tcallback: () => {\n// \t\t\t\t\t\t\thideAlertDialog();\n// \t\t\t\t\t\t},\n// \t\t\t\t\t},\n// \t\t\t\t],\n// \t\t\t});\n// \t\t\treturn;\n// \t\t}\n// \t\tsetIsDownloading(true);\n// \t\tshowAlertDialog({\n// \t\t\ttitle: `Download QR Code`,\n// \t\t\tcontent: 'Are Your sure you want to download QR Code?',\n// \t\t\tbuttons: [\n// \t\t\t\t{\n// \t\t\t\t\tchildren: 'Cancel',\n// \t\t\t\t\tvariant: 'outlined',\n// \t\t\t\t\tcallback: () => {\n// \t\t\t\t\t\thideAlertDialog();\n// \t\t\t\t\t},\n// \t\t\t\t},\n// \t\t\t\t{\n// \t\t\t\t\tchildren: 'Download',\n// \t\t\t\t\tvariant: 'contained',\n// \t\t\t\t\tcallback: () => {\n// \t\t\t\t\t\thideAlertDialog();\n// \t\t\t\t\t\tvoid DownloadQRApi.mutateAsync({\n// \t\t\t\t\t\t\trequest: {\n// \t\t\t\t\t\t\t\tnumber: selectedButton as number,\n// \t\t\t\t\t\t\t},\n// \t\t\t\t\t\t})\n// \t\t\t\t\t\t\t.then((response) => {\n// \t\t\t\t\t\t\t\tPromise.all(\n// \t\t\t\t\t\t\t\t\tresponse.data.download_list.map((code) =>\n// \t\t\t\t\t\t\t\t\t\tgenerateQrOnBanner({\n// \t\t\t\t\t\t\t\t\t\t\tstringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\n// \t\t\t\t\t\t\t\t\t\t\tbannerImg: selectedImgUrl,\n// \t\t\t\t\t\t\t\t\t\t\tbannerText: code.qr_id,\n// \t\t\t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t\t\t.then((a) => {\n// \t\t\t\t\t\t\t\t\t\ta.map((x) => {\n// \t\t\t\t\t\t\t\t\t\t\tzip.file(`${x.bannerText}.png`, x.blob as Blob, { binary: true });\n// \t\t\t\t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\t\t\t\tzip\n// \t\t\t\t\t\t\t\t\t\t\t.generateAsync({ type: 'blob' })\n// \t\t\t\t\t\t\t\t\t\t\t.then((blobdata) => {\n// \t\t\t\t\t\t\t\t\t\t\t\tconst elem = window.document.createElement('a');\n// \t\t\t\t\t\t\t\t\t\t\t\telem.href = window.URL.createObjectURL(new Blob([blobdata]));\n// \t\t\t\t\t\t\t\t\t\t\t\telem.download = 'qrcodes.zip';\n// \t\t\t\t\t\t\t\t\t\t\t\telem.click();\n// \t\t\t\t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t\t\t\t.then(() => {\n// \t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\n// \t\t\t\t\t\t\t\t\t\t\t\tprops.refetch();\n// \t\t\t\t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t\t\t\t.catch(() => {\n// \t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\n// \t\t\t\t\t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t\t\t.catch(() => {\n// \t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\n// \t\t\t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\t})\n// \t\t\t\t\t\t\t.catch((error) => {\n// \t\t\t\t\t\t\t\tsetIsDownloading(false);\n// \t\t\t\t\t\t\t\tshowSnackbar({\n// \t\t\t\t\t\t\t\t\ttitle: 'Error!',\n// \t\t\t\t\t\t\t\t\tvariant: 'error',\n// \t\t\t\t\t\t\t\t\tcontent: error.response?.data?.message,\n// \t\t\t\t\t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t\t\t\t\t});\n// \t\t\t\t\t\t\t});\n// \t\t\t\t\t},\n// \t\t\t\t},\n// \t\t\t],\n// \t\t});\n// \t};\n\n// \treturn (\n// \t\t<Stack gap={1}>\n// \t\t\t<PoppinsTypography\n// \t\t\t\tvariant='subtitle1'\n// \t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\n// \t\t\t>\n// \t\t\t\tSelect Number\n// \t\t\t</PoppinsTypography>\n// \t\t\t<Stack gap={5}>\n// \t\t\t\t<Stack\n// \t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t\tgap={1}\n// \t\t\t\t>\n// \t\t\t\t\t{BUTTONS.map((l, index) => (\n// \t\t\t\t\t\t<Button\n// \t\t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\t\tvariant={selectedButton === l ? 'contained' : 'outlined'}\n// \t\t\t\t\t\t\tcolor='primary'\n// \t\t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\t\t...(selectedButton === l && { borderColor: '#DFE3ED' }),\n// \t\t\t\t\t\t\t\twidth: 100,\n// \t\t\t\t\t\t\t\theight: 40,\n// \t\t\t\t\t\t\t\tborderRadius: '8px',\n// \t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\tonClick={() => setSelectedButton(l)}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{l}\n// \t\t\t\t\t\t</Button>\n// \t\t\t\t\t))}\n// \t\t\t\t</Stack>\n// \t\t\t\t<Stack>\n// \t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\tvariant='subtitle1'\n// \t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\n// \t\t\t\t\t>\n// \t\t\t\t\t\tSelect Image\n// \t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t<FormControl>\n// \t\t\t\t\t\t<RadioGroup\n// \t\t\t\t\t\t\trow\n// \t\t\t\t\t\t\tvalue={selectedImage?.value}\n// \t\t\t\t\t\t\tonChange={(e) =>\n// \t\t\t\t\t\t\t\tsetSelectedImage(IMAGES.find((i) => i.value === e.target.value) ?? null)\n// \t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\tsx={{ gap: 2 }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t{IMAGES.map((l, index) => (\n// \t\t\t\t\t\t\t\t<FormControlLabel\n// \t\t\t\t\t\t\t\t\tkey={index}\n// \t\t\t\t\t\t\t\t\tvalue={l.value}\n// \t\t\t\t\t\t\t\t\tcontrol={<Radio size='medium' />}\n// \t\t\t\t\t\t\t\t\tlabel={\n// \t\t\t\t\t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\t\t\t\t\tvariant='h6'\n// \t\t\t\t\t\t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\t\t\t\t\t\tcolor: GetQRBgUrlsApi.data?.data.bg_urls[index]\n// \t\t\t\t\t\t\t\t\t\t\t\t\t? theme.palette.success.main\n// \t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.common.secondaryGreyText,\n// \t\t\t\t\t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\t\t\t\t\tonClick={() => setOpenQRBgDialog({ label: l.label, value: String(index) })}\n// \t\t\t\t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\t\t\t\t{l.label}\n// \t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t\t\t\t}\n// \t\t\t\t\t\t\t\t/>\n// \t\t\t\t\t\t\t))}\n// \t\t\t\t\t\t</RadioGroup>\n// \t\t\t\t\t</FormControl>\n// \t\t\t\t</Stack>\n\n// \t\t\t\t<LoadingButton\n// \t\t\t\t\tsize='large'\n// \t\t\t\t\tvariant='contained'\n// \t\t\t\t\tcolor='primary'\n// \t\t\t\t\tsx={{\n// \t\t\t\t\t\twidth: 209,\n// \t\t\t\t\t\theight: 51,\n// \t\t\t\t\t\tborderRadius: '8px',\n// \t\t\t\t\t}}\n// \t\t\t\t\tdisabled={selectedButton === null || selectedImage === null}\n// \t\t\t\t\tloading={isDownloading}\n// \t\t\t\t\tonClick={OnDownloadClick}\n// \t\t\t\t>\n// \t\t\t\t\t<PoppinsTypography variant='subtitle1'>Download QR</PoppinsTypography>\n// \t\t\t\t</LoadingButton>\n// \t\t\t</Stack>\n// \t\t\t<HandleQRBgImageDialog\n// \t\t\t\timageUrl={GetQRBgUrlsApi.data?.data.bg_urls[Number(openQRBgDialog?.value)] ?? ''}\n// \t\t\t\topenQRBgDialog={openQRBgDialog}\n// \t\t\t\thandleClose={() => setOpenQRBgDialog(null)}\n// \t\t\t\trefetch={() => void GetQRBgUrlsApi.refetch()}\n// \t\t\t/>\n// \t\t</Stack>\n// \t);\n// };\n\n// export default memo(DownloadQrCode);\n\n// interface HandleQRBgImageProps {\n// \topenQRBgDialog: Option | null;\n// \timageUrl: string;\n// \thandleClose?: () => void;\n// \trefetch: () => void;\n// }\n\n// const HandleQRBgImageDialog = (props: HandleQRBgImageProps) => {\n// \tconst theme = useTheme();\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\n// \tconst UpdateQRBgApi = useUpdateQRBgApi();\n\n// \tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n// \t\tUpdateQRBgApi.mutateAsync({\n// \t\t\trequest: { [`bg_url_${Number(props.openQRBgDialog?.value) + 1}`]: event.target.files },\n// \t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Success!',\n// \t\t\t\t\tvariant: 'sucess',\n// \t\t\t\t\tcontent: response.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t\tprops.refetch();\n// \t\t\t\tprops.handleClose?.();\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Error!',\n// \t\t\t\t\tvariant: 'error',\n// \t\t\t\t\tcontent: error.response?.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t});\n// \t};\n\n// \treturn (\n// \t\t<Dialog\n// \t\t\tonClose={props.handleClose}\n// \t\t\topen={Boolean(props.openQRBgDialog)}\n// \t\t\tmaxWidth='sm'\n// \t\t\tsx={{ '.MuiPaper-root': { width: `100%` } }}\n// \t\t>\n// \t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\n// \t\t\t\t<PoppinsTypography\n// \t\t\t\t\tvariant='h5'\n// \t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t>\n// \t\t\t\t\tQR Background {props.openQRBgDialog?.label}\n// \t\t\t\t</PoppinsTypography>\n// \t\t\t</DialogTitle>\n// \t\t\t<DialogContent\n// \t\t\t\tsx={{ display: 'flex', alignItems: 'center', flexDirection: 'column', gap: 6, padding: 4 }}\n// \t\t\t>\n// \t\t\t\t{props.imageUrl ? (\n// \t\t\t\t\t<img\n// \t\t\t\t\t\twidth={206}\n// \t\t\t\t\t\theight={333}\n// \t\t\t\t\t\tsrc={props.imageUrl}\n// \t\t\t\t\t/>\n// \t\t\t\t) : (\n// \t\t\t\t\t<Stack\n// \t\t\t\t\t\twidth={206}\n// \t\t\t\t\t\theight={333}\n// \t\t\t\t\t\tsx={{ backgroundColor: '#DFE3ED' }}\n// \t\t\t\t\t\tjustifyContent={'center'}\n// \t\t\t\t\t\talignItems={'center'}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>No Image Found</PoppinsTypography>\n// \t\t\t\t\t</Stack>\n// \t\t\t\t)}\n// \t\t\t\t<Stack\n// \t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t\tgap={2}\n// \t\t\t\t\talignSelf={'self-end'}\n// \t\t\t\t>\n// \t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\tvariant='outlined'\n// \t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\tsx={{ width: 245 }}\n// \t\t\t\t\t\tonClick={props.handleClose}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='h5'\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tBack\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t</LoadingButton>\n\n// \t\t\t\t\t<label htmlFor={`upoload-qr-bg`}>\n// \t\t\t\t\t\t<input\n// \t\t\t\t\t\t\tid={`upoload-qr-bg`}\n// \t\t\t\t\t\t\tname={`upoload-qr-bg`}\n// \t\t\t\t\t\t\tstyle={{\n// \t\t\t\t\t\t\t\topacity: 0,\n// \t\t\t\t\t\t\t\tposition: 'absolute',\n// \t\t\t\t\t\t\t\twidth: 'inherit',\n// \t\t\t\t\t\t\t\theight: 'inherit',\n// \t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t\ttype='file'\n// \t\t\t\t\t\t\tonChange={onChange}\n// \t\t\t\t\t\t\tonClick={(event) => (event.currentTarget.value = '')}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\t\tcomponent='span'\n// \t\t\t\t\t\t\tvariant='contained'\n// \t\t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\t\tsx={{ width: 245 }}\n// \t\t\t\t\t\t\tloading={UpdateQRBgApi.isLoading}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\t<PoppinsTypography variant='h5'>\n// \t\t\t\t\t\t\t\t{props.imageUrl ? 'Update Image' : 'Upload Image'}\n// \t\t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t</LoadingButton>\n// \t\t\t\t\t</label>\n// \t\t\t\t</Stack>\n// \t\t\t</DialogContent>\n// \t\t</Dialog>\n// \t);\n// };\n\nimport { useSnackbar } from '@components/Snackbar';\nimport { PoppinsTypography } from '@components/Typography';\nimport { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\nimport { LoadingButton } from '@mui/lab';\nimport { Button, Dialog, DialogContent, DialogTitle, FormControl, FormControlLabel, Radio, RadioGroup, Stack, useTheme } from '@mui/material';\nimport { memo, useState } from 'react';\nimport { useAlertDialog } from '@components/AlertDialog';\nimport JSZip from 'jszip';\nimport QRCode from 'qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = [5, 500, 1000, 2000, 3000, 4000, 5000, 6000];\nconst IMAGES = [{\n  label: 'Image1',\n  value: 'bg_url_1'\n}, {\n  label: 'Image2',\n  value: 'bg_url_2'\n}, {\n  label: 'Image3',\n  value: 'bg_url_3'\n}];\nconst QR_CONFIG = {\n  x: 80,\n  // X position of QR code on banner (in pixels)\n  y: 30,\n  // Y position of QR code on banner (in pixels)\n  size: 300,\n  // Size of QR code (in pixels)\n  margin: 0 // Margin around QR code\n};\nconst generateCustomQrOnBanner = async ({\n  stringToCreateQR,\n  bannerImg,\n  bannerText\n}) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Canvas context not available');\n  const backgroundImage = await new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = bannerImg;\n  });\n  canvas.width = backgroundImage.width;\n  canvas.height = backgroundImage.height;\n  ctx.drawImage(backgroundImage, 0, 0);\n  const qrCodeDataURL = await QRCode.toDataURL(stringToCreateQR, {\n    width: QR_CONFIG.size,\n    margin: QR_CONFIG.margin,\n    color: {\n      dark: '#000000',\n      light: '#ffffff'\n    }\n  });\n  const qrImage = await new Promise((resolve, reject) => {\n    const img = new Image();\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = qrCodeDataURL;\n  });\n  ctx.drawImage(qrImage, QR_CONFIG.x, QR_CONFIG.y, QR_CONFIG.size, QR_CONFIG.size);\n  const blob = await new Promise(resolve => {\n    canvas.toBlob(blob => {\n      if (blob) resolve(blob);\n    }, 'image/png');\n  });\n  return {\n    blob,\n    bannerText\n  };\n};\nconst DownloadQrCode = props => {\n  _s();\n  var _GetQRBgUrlsApi$data$2, _GetQRBgUrlsApi$data3;\n  const theme = useTheme();\n  const {\n    showSnackbar,\n    hideSnackbar\n  } = useSnackbar();\n  const {\n    showAlertDialog,\n    hideAlertDialog\n  } = useAlertDialog();\n  const GetQRBgUrlsApi = useGetQRBgUrlsApi();\n  const DownloadQRApi = useDownloadQRApi();\n  const [selectedButton, setSelectedButton] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [openQRBgDialog, setOpenQRBgDialog] = useState(null);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const zip = new JSZip();\n  const OnDownloadClick = () => {\n    var _GetQRBgUrlsApi$data$, _GetQRBgUrlsApi$data;\n    const selectedImgUrl = (_GetQRBgUrlsApi$data$ = (_GetQRBgUrlsApi$data = GetQRBgUrlsApi.data) === null || _GetQRBgUrlsApi$data === void 0 ? void 0 : _GetQRBgUrlsApi$data.data.bg_urls[IMAGES.findIndex(i => i.value === (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.value))]) !== null && _GetQRBgUrlsApi$data$ !== void 0 ? _GetQRBgUrlsApi$data$ : '';\n    if (!selectedImgUrl) {\n      showAlertDialog({\n        title: `Download QR Code`,\n        content: 'No image associated with the selected image.',\n        buttons: [{\n          children: 'ok',\n          variant: 'outlined',\n          callback: () => {\n            hideAlertDialog();\n          }\n        }]\n      });\n      return;\n    }\n    setIsDownloading(true);\n    showAlertDialog({\n      title: `Download QR Code`,\n      content: 'Are Your sure you want to download QR Code?',\n      buttons: [{\n        children: 'Cancel',\n        variant: 'outlined',\n        callback: () => {\n          hideAlertDialog();\n        }\n      }, {\n        children: 'Download',\n        variant: 'contained',\n        callback: () => {\n          hideAlertDialog();\n          void DownloadQRApi.mutateAsync({\n            request: {\n              number: selectedButton\n            }\n          }).then(response => {\n            Promise.all(response.data.download_list.map(code => generateCustomQrOnBanner({\n              stringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\n              bannerImg: selectedImgUrl,\n              bannerText: code.qr_id\n            }))).then(a => {\n              a.map(x => {\n                zip.file(`${x.bannerText}.png`, x.blob, {\n                  binary: true\n                });\n              });\n              zip.generateAsync({\n                type: 'blob'\n              }).then(blobdata => {\n                const elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(new Blob([blobdata]));\n                elem.download = 'qrcodes.zip';\n                elem.click();\n              }).then(() => {\n                setIsDownloading(false);\n                props.refetch();\n              }).catch(() => {\n                setIsDownloading(false);\n              });\n            }).catch(() => {\n              setIsDownloading(false);\n            });\n          }).catch(error => {\n            var _error$response, _error$response$data;\n            setIsDownloading(false);\n            showSnackbar({\n              title: 'Error!',\n              variant: 'error',\n              content: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message,\n              onCancel: () => hideSnackbar()\n            });\n          });\n        }\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 1,\n    children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n      variant: \"subtitle1\",\n      sx: {\n        color: theme.palette.common.secondaryGreyText\n      },\n      children: \"Select Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      gap: 5,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        flexDirection: 'row',\n        gap: 1,\n        children: BUTTONS.map((l, index) => /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: selectedButton === l ? 'contained' : 'outlined',\n          color: \"primary\",\n          sx: {\n            ...(selectedButton === l && {\n              borderColor: '#DFE3ED'\n            }),\n            width: 100,\n            height: 40,\n            borderRadius: '8px'\n          },\n          onClick: () => setSelectedButton(l),\n          children: l\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: theme.palette.common.secondaryGreyText\n          },\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.value,\n            onChange: e => {\n              var _IMAGES$find;\n              return setSelectedImage((_IMAGES$find = IMAGES.find(i => i.value === e.target.value)) !== null && _IMAGES$find !== void 0 ? _IMAGES$find : null);\n            },\n            sx: {\n              gap: 2\n            },\n            children: IMAGES.map((l, index) => {\n              var _GetQRBgUrlsApi$data2;\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: l.value,\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  size: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 19\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: (_GetQRBgUrlsApi$data2 = GetQRBgUrlsApi.data) !== null && _GetQRBgUrlsApi$data2 !== void 0 && _GetQRBgUrlsApi$data2.data.bg_urls[index] ? theme.palette.success.main : theme.palette.common.secondaryGreyText\n                  },\n                  onClick: () => setOpenQRBgDialog({\n                    label: l.label,\n                    value: String(index)\n                  }),\n                  children: l.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 11\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 612,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          width: 209,\n          height: 51,\n          borderRadius: '8px'\n        },\n        disabled: selectedButton === null || selectedImage === null,\n        loading: isDownloading,\n        onClick: OnDownloadClick,\n        children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          children: \"Download QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(HandleQRBgImageDialog, {\n      imageUrl: (_GetQRBgUrlsApi$data$2 = (_GetQRBgUrlsApi$data3 = GetQRBgUrlsApi.data) === null || _GetQRBgUrlsApi$data3 === void 0 ? void 0 : _GetQRBgUrlsApi$data3.data.bg_urls[Number(openQRBgDialog === null || openQRBgDialog === void 0 ? void 0 : openQRBgDialog.value)]) !== null && _GetQRBgUrlsApi$data$2 !== void 0 ? _GetQRBgUrlsApi$data$2 : '',\n      openQRBgDialog: openQRBgDialog,\n      handleClose: () => setOpenQRBgDialog(null),\n      refetch: () => void GetQRBgUrlsApi.refetch()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 3\n  }, this);\n};\n_s(DownloadQrCode, \"xfT07FbJB1YAo5vkrqggE2fQLOA=\", false, function () {\n  return [useTheme, useSnackbar, useAlertDialog, useGetQRBgUrlsApi, useDownloadQRApi];\n});\n_c = DownloadQrCode;\nexport default _c2 = /*#__PURE__*/memo(DownloadQrCode);\nconst HandleQRBgImageDialog = props => {\n  _s2();\n  var _props$openQRBgDialog2;\n  const theme = useTheme();\n  const {\n    showSnackbar,\n    hideSnackbar\n  } = useSnackbar();\n  const UpdateQRBgApi = useUpdateQRBgApi();\n  const onChange = event => {\n    var _props$openQRBgDialog;\n    UpdateQRBgApi.mutateAsync({\n      request: {\n        [`bg_url_${Number((_props$openQRBgDialog = props.openQRBgDialog) === null || _props$openQRBgDialog === void 0 ? void 0 : _props$openQRBgDialog.value) + 1}`]: event.target.files\n      }\n    }).then(response => {\n      var _response$data, _props$handleClose;\n      showSnackbar({\n        title: 'Success!',\n        variant: 'sucess',\n        content: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message,\n        onCancel: () => hideSnackbar()\n      });\n      props.refetch();\n      (_props$handleClose = props.handleClose) === null || _props$handleClose === void 0 ? void 0 : _props$handleClose.call(props);\n    }).catch(error => {\n      var _error$response2, _error$response2$data;\n      showSnackbar({\n        title: 'Error!',\n        variant: 'error',\n        content: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message,\n        onCancel: () => hideSnackbar()\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: props.handleClose,\n    open: Boolean(props.openQRBgDialog),\n    maxWidth: \"sm\",\n    sx: {\n      '.MuiPaper-root': {\n        width: `100%`\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        padding: 4,\n        paddingBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n        variant: \"h5\",\n        sx: {\n          color: theme.palette.common.primaryGreyText\n        },\n        children: [\"QR Background \", (_props$openQRBgDialog2 = props.openQRBgDialog) === null || _props$openQRBgDialog2 === void 0 ? void 0 : _props$openQRBgDialog2.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 6,\n        padding: 4\n      },\n      children: [props.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 206,\n        height: 333,\n        src: props.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        width: 206,\n        height: 333,\n        sx: {\n          backgroundColor: '#DFE3ED'\n        },\n        justifyContent: 'center',\n        alignItems: 'center',\n        children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          children: \"No Image Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        flexDirection: 'row',\n        gap: 2,\n        alignSelf: 'self-end',\n        children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n          variant: \"outlined\",\n          size: \"large\",\n          sx: {\n            width: 245\n          },\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"h5\",\n            sx: {\n              color: theme.palette.common.primaryGreyText\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `upoload-qr-bg`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `upoload-qr-bg`,\n            name: `upoload-qr-bg`,\n            style: {\n              opacity: 0,\n              position: 'absolute',\n              width: 'inherit',\n              height: 'inherit'\n            },\n            type: \"file\",\n            onChange: onChange,\n            onClick: event => event.currentTarget.value = ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            component: \"span\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              width: 245\n            },\n            loading: UpdateQRBgApi.isLoading,\n            children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n              variant: \"h5\",\n              children: props.imageUrl ? 'Update Image' : 'Upload Image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 767,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 700,\n    columnNumber: 3\n  }, this);\n};\n_s2(HandleQRBgImageDialog, \"o98RjPFTMlaN2IhrXMX13zYjlgw=\", false, function () {\n  return [useTheme, useSnackbar, useUpdateQRBgApi];\n});\n_c3 = HandleQRBgImageDialog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DownloadQrCode\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"HandleQRBgImageDialog\");","map":{"version":3,"names":["useSnackbar","PoppinsTypography","useDownloadQRApi","useGetQRBgUrlsApi","useUpdateQRBgApi","LoadingButton","Button","Dialog","DialogContent","DialogTitle","FormControl","FormControlLabel","Radio","RadioGroup","Stack","useTheme","memo","useState","useAlertDialog","JSZip","QRCode","jsxDEV","_jsxDEV","BUTTONS","IMAGES","label","value","QR_CONFIG","x","y","size","margin","generateCustomQrOnBanner","stringToCreateQR","bannerImg","bannerText","canvas","document","createElement","ctx","getContext","Error","backgroundImage","Promise","resolve","reject","img","Image","crossOrigin","onload","onerror","src","width","height","drawImage","qrCodeDataURL","toDataURL","color","dark","light","qrImage","blob","toBlob","DownloadQrCode","props","_s","_GetQRBgUrlsApi$data$2","_GetQRBgUrlsApi$data3","theme","showSnackbar","hideSnackbar","showAlertDialog","hideAlertDialog","GetQRBgUrlsApi","DownloadQRApi","selectedButton","setSelectedButton","selectedImage","setSelectedImage","openQRBgDialog","setOpenQRBgDialog","isDownloading","setIsDownloading","zip","OnDownloadClick","_GetQRBgUrlsApi$data$","_GetQRBgUrlsApi$data","selectedImgUrl","data","bg_urls","findIndex","i","title","content","buttons","children","variant","callback","mutateAsync","request","number","then","response","all","download_list","map","code","String","process","env","REACT_APP_PAYMENT_URL","qr_id","a","file","binary","generateAsync","type","blobdata","elem","window","href","URL","createObjectURL","Blob","download","click","refetch","catch","error","_error$response","_error$response$data","message","onCancel","gap","sx","palette","common","secondaryGreyText","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","l","index","borderColor","borderRadius","onClick","row","onChange","e","_IMAGES$find","find","target","_GetQRBgUrlsApi$data2","control","success","main","disabled","loading","HandleQRBgImageDialog","imageUrl","Number","handleClose","_c","_c2","_s2","_props$openQRBgDialog2","UpdateQRBgApi","event","_props$openQRBgDialog","files","_response$data","_props$handleClose","call","_error$response2","_error$response2$data","onClose","open","Boolean","maxWidth","padding","paddingBottom","primaryGreyText","display","alignItems","backgroundColor","justifyContent","alignSelf","htmlFor","id","name","style","opacity","position","currentTarget","component","isLoading","_c3","$RefreshReg$"],"sources":["D:/Krunal/Novabite/makemybucks/src/views/admin/qr-codes/DownloadQrCode.tsx"],"sourcesContent":["// import { useSnackbar } from '@components/Snackbar';\r\n// import { PoppinsTypography } from '@components/Typography';\r\n// import { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\r\n// import { Option } from '@interfaces/common';\r\n// import { LoadingButton } from '@mui/lab';\r\n// import {\r\n// \tButton,\r\n// \tDialog,\r\n// \tDialogContent,\r\n// \tDialogTitle,\r\n// \tFormControl,\r\n// \tFormControlLabel,\r\n// \tRadio,\r\n// \tRadioGroup,\r\n// \tStack,\r\n// \tuseTheme,\r\n// } from '@mui/material';\r\n// import { FC, memo, useState } from 'react';\r\n// import { useAlertDialog } from '@components/AlertDialog';\r\n// import JSZip from 'jszip';\r\n// import { generateQrOnBanner } from 'qr-on-banner';\r\n\r\n// const BUTTONS = [500, 1000, 2000, 3000, 4000, 5000, 6000];\r\n// const IMAGES: Option[] = [\r\n// \t{ label: 'Image1', value: 'bg_url_1' },\r\n// \t{ label: 'Image2', value: 'bg_url_2' },\r\n// \t{ label: 'Image3', value: 'bg_url_3' },\r\n// ];\r\n\r\n// interface DownloadQrCodeProps {\r\n// \trefetch: () => void;\r\n// }\r\n\r\n// const DownloadQrCode: FC<DownloadQrCodeProps> = (props) => {\r\n// \tconst theme = useTheme();\r\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n// \tconst { showAlertDialog, hideAlertDialog } = useAlertDialog();\r\n\r\n// \tconst GetQRBgUrlsApi = useGetQRBgUrlsApi();\r\n// \tconst DownloadQRApi = useDownloadQRApi();\r\n\r\n// \tconst [selectedButton, setSelectedButton] = useState<number | null>(null);\r\n// \tconst [selectedImage, setSelectedImage] = useState<Option | null>(null);\r\n// \tconst [openQRBgDialog, setOpenQRBgDialog] = useState<Option | null>(null);\r\n// \tconst [isDownloading, setIsDownloading] = useState<boolean>(false);\r\n\r\n// \tconst zip = new JSZip();\r\n\r\n// \tconst OnDownloadClick = () => {\r\n// \t\tconst selectedImgUrl =\r\n// \t\t\tGetQRBgUrlsApi.data?.data.bg_urls[\r\n// \t\t\t\tIMAGES.findIndex((i) => i.value === selectedImage?.value)\r\n// \t\t\t] ?? '';\r\n\r\n// \t\tif (!selectedImgUrl) {\r\n// \t\t\tshowAlertDialog({\r\n// \t\t\t\ttitle: `Download QR Code`,\r\n// \t\t\t\tcontent: 'No image associated with the selected image.',\r\n// \t\t\t\tbuttons: [\r\n// \t\t\t\t\t{\r\n// \t\t\t\t\t\tchildren: 'ok',\r\n// \t\t\t\t\t\tvariant: 'outlined',\r\n// \t\t\t\t\t\tcallback: () => {\r\n// \t\t\t\t\t\t\thideAlertDialog();\r\n// \t\t\t\t\t\t},\r\n// \t\t\t\t\t},\r\n// \t\t\t\t],\r\n// \t\t\t});\r\n// \t\t\treturn;\r\n// \t\t}\r\n// \t\tsetIsDownloading(true);\r\n// \t\tshowAlertDialog({\r\n// \t\t\ttitle: `Download QR Code`,\r\n// \t\t\tcontent: 'Are Your sure you want to download QR Code?',\r\n// \t\t\tbuttons: [\r\n// \t\t\t\t{\r\n// \t\t\t\t\tchildren: 'Cancel',\r\n// \t\t\t\t\tvariant: 'outlined',\r\n// \t\t\t\t\tcallback: () => {\r\n// \t\t\t\t\t\thideAlertDialog();\r\n// \t\t\t\t\t},\r\n// \t\t\t\t},\r\n// \t\t\t\t{\r\n// \t\t\t\t\tchildren: 'Download',\r\n// \t\t\t\t\tvariant: 'contained',\r\n// \t\t\t\t\tcallback: () => {\r\n// \t\t\t\t\t\thideAlertDialog();\r\n// \t\t\t\t\t\tvoid DownloadQRApi.mutateAsync({\r\n// \t\t\t\t\t\t\trequest: {\r\n// \t\t\t\t\t\t\t\tnumber: selectedButton as number,\r\n// \t\t\t\t\t\t\t},\r\n// \t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t.then((response) => {\r\n// \t\t\t\t\t\t\t\tPromise.all(\r\n// \t\t\t\t\t\t\t\t\tresponse.data.download_list.map((code) =>\r\n// \t\t\t\t\t\t\t\t\t\tgenerateQrOnBanner({\r\n// \t\t\t\t\t\t\t\t\t\t\tstringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\r\n// \t\t\t\t\t\t\t\t\t\t\tbannerImg: selectedImgUrl,\r\n// \t\t\t\t\t\t\t\t\t\t\tbannerText: code.qr_id,\r\n// \t\t\t\t\t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t\t\t)\r\n// \t\t\t\t\t\t\t\t)\r\n// \t\t\t\t\t\t\t\t\t.then((a) => {\r\n// \t\t\t\t\t\t\t\t\t\ta.map((x) => {\r\n// \t\t\t\t\t\t\t\t\t\t\tzip.file(`${x.bannerText}.png`, x.blob as Blob, { binary: true });\r\n// \t\t\t\t\t\t\t\t\t\t});\r\n// \t\t\t\t\t\t\t\t\t\tzip\r\n// \t\t\t\t\t\t\t\t\t\t\t.generateAsync({ type: 'blob' })\r\n// \t\t\t\t\t\t\t\t\t\t\t.then((blobdata) => {\r\n// \t\t\t\t\t\t\t\t\t\t\t\tconst elem = window.document.createElement('a');\r\n// \t\t\t\t\t\t\t\t\t\t\t\telem.href = window.URL.createObjectURL(new Blob([blobdata]));\r\n// \t\t\t\t\t\t\t\t\t\t\t\telem.download = 'qrcodes.zip';\r\n// \t\t\t\t\t\t\t\t\t\t\t\telem.click();\r\n// \t\t\t\t\t\t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n// \t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n// \t\t\t\t\t\t\t\t\t\t\t\tprops.refetch();\r\n// \t\t\t\t\t\t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t\t\t\t\t.catch(() => {\r\n// \t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n// \t\t\t\t\t\t\t\t\t\t\t});\r\n// \t\t\t\t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t\t\t.catch(() => {\r\n// \t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n// \t\t\t\t\t\t\t\t\t});\r\n// \t\t\t\t\t\t\t})\r\n// \t\t\t\t\t\t\t.catch((error) => {\r\n// \t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n// \t\t\t\t\t\t\t\tshowSnackbar({\r\n// \t\t\t\t\t\t\t\t\ttitle: 'Error!',\r\n// \t\t\t\t\t\t\t\t\tvariant: 'error',\r\n// \t\t\t\t\t\t\t\t\tcontent: error.response?.data?.message,\r\n// \t\t\t\t\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n// \t\t\t\t\t\t\t\t});\r\n// \t\t\t\t\t\t\t});\r\n// \t\t\t\t\t},\r\n// \t\t\t\t},\r\n// \t\t\t],\r\n// \t\t});\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Stack gap={1}>\r\n// \t\t\t<PoppinsTypography\r\n// \t\t\t\tvariant='subtitle1'\r\n// \t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n// \t\t\t>\r\n// \t\t\t\tSelect Number\r\n// \t\t\t</PoppinsTypography>\r\n// \t\t\t<Stack gap={5}>\r\n// \t\t\t\t<Stack\r\n// \t\t\t\t\tflexDirection={'row'}\r\n// \t\t\t\t\tgap={1}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t{BUTTONS.map((l, index) => (\r\n// \t\t\t\t\t\t<Button\r\n// \t\t\t\t\t\t\tkey={index}\r\n// \t\t\t\t\t\t\tsize='large'\r\n// \t\t\t\t\t\t\tvariant={selectedButton === l ? 'contained' : 'outlined'}\r\n// \t\t\t\t\t\t\tcolor='primary'\r\n// \t\t\t\t\t\t\tsx={{\r\n// \t\t\t\t\t\t\t\t...(selectedButton === l && { borderColor: '#DFE3ED' }),\r\n// \t\t\t\t\t\t\t\twidth: 100,\r\n// \t\t\t\t\t\t\t\theight: 40,\r\n// \t\t\t\t\t\t\t\tborderRadius: '8px',\r\n// \t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t\tonClick={() => setSelectedButton(l)}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t{l}\r\n// \t\t\t\t\t\t</Button>\r\n// \t\t\t\t\t))}\r\n// \t\t\t\t</Stack>\r\n// \t\t\t\t<Stack>\r\n// \t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\tvariant='subtitle1'\r\n// \t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\tSelect Image\r\n// \t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t<FormControl>\r\n// \t\t\t\t\t\t<RadioGroup\r\n// \t\t\t\t\t\t\trow\r\n// \t\t\t\t\t\t\tvalue={selectedImage?.value}\r\n// \t\t\t\t\t\t\tonChange={(e) =>\r\n// \t\t\t\t\t\t\t\tsetSelectedImage(IMAGES.find((i) => i.value === e.target.value) ?? null)\r\n// \t\t\t\t\t\t\t}\r\n// \t\t\t\t\t\t\tsx={{ gap: 2 }}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t{IMAGES.map((l, index) => (\r\n// \t\t\t\t\t\t\t\t<FormControlLabel\r\n// \t\t\t\t\t\t\t\t\tkey={index}\r\n// \t\t\t\t\t\t\t\t\tvalue={l.value}\r\n// \t\t\t\t\t\t\t\t\tcontrol={<Radio size='medium' />}\r\n// \t\t\t\t\t\t\t\t\tlabel={\r\n// \t\t\t\t\t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n// \t\t\t\t\t\t\t\t\t\t\tsx={{\r\n// \t\t\t\t\t\t\t\t\t\t\t\tcolor: GetQRBgUrlsApi.data?.data.bg_urls[index]\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t? theme.palette.success.main\r\n// \t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.common.secondaryGreyText,\r\n// \t\t\t\t\t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t\t\t\t\t\tonClick={() => setOpenQRBgDialog({ label: l.label, value: String(index) })}\r\n// \t\t\t\t\t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t\t\t\t\t{l.label}\r\n// \t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t\t\t\t\t}\r\n// \t\t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t))}\r\n// \t\t\t\t\t\t</RadioGroup>\r\n// \t\t\t\t\t</FormControl>\r\n// \t\t\t\t</Stack>\r\n\r\n// \t\t\t\t<LoadingButton\r\n// \t\t\t\t\tsize='large'\r\n// \t\t\t\t\tvariant='contained'\r\n// \t\t\t\t\tcolor='primary'\r\n// \t\t\t\t\tsx={{\r\n// \t\t\t\t\t\twidth: 209,\r\n// \t\t\t\t\t\theight: 51,\r\n// \t\t\t\t\t\tborderRadius: '8px',\r\n// \t\t\t\t\t}}\r\n// \t\t\t\t\tdisabled={selectedButton === null || selectedImage === null}\r\n// \t\t\t\t\tloading={isDownloading}\r\n// \t\t\t\t\tonClick={OnDownloadClick}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t<PoppinsTypography variant='subtitle1'>Download QR</PoppinsTypography>\r\n// \t\t\t\t</LoadingButton>\r\n// \t\t\t</Stack>\r\n// \t\t\t<HandleQRBgImageDialog\r\n// \t\t\t\timageUrl={GetQRBgUrlsApi.data?.data.bg_urls[Number(openQRBgDialog?.value)] ?? ''}\r\n// \t\t\t\topenQRBgDialog={openQRBgDialog}\r\n// \t\t\t\thandleClose={() => setOpenQRBgDialog(null)}\r\n// \t\t\t\trefetch={() => void GetQRBgUrlsApi.refetch()}\r\n// \t\t\t/>\r\n// \t\t</Stack>\r\n// \t);\r\n// };\r\n\r\n// export default memo(DownloadQrCode);\r\n\r\n// interface HandleQRBgImageProps {\r\n// \topenQRBgDialog: Option | null;\r\n// \timageUrl: string;\r\n// \thandleClose?: () => void;\r\n// \trefetch: () => void;\r\n// }\r\n\r\n// const HandleQRBgImageDialog = (props: HandleQRBgImageProps) => {\r\n// \tconst theme = useTheme();\r\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n// \tconst UpdateQRBgApi = useUpdateQRBgApi();\r\n\r\n// \tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n// \t\tUpdateQRBgApi.mutateAsync({\r\n// \t\t\trequest: { [`bg_url_${Number(props.openQRBgDialog?.value) + 1}`]: event.target.files },\r\n// \t\t})\r\n// \t\t\t.then((response) => {\r\n// \t\t\t\tshowSnackbar({\r\n// \t\t\t\t\ttitle: 'Success!',\r\n// \t\t\t\t\tvariant: 'sucess',\r\n// \t\t\t\t\tcontent: response.data?.message,\r\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\r\n// \t\t\t\t});\r\n// \t\t\t\tprops.refetch();\r\n// \t\t\t\tprops.handleClose?.();\r\n// \t\t\t})\r\n// \t\t\t.catch((error) => {\r\n// \t\t\t\tshowSnackbar({\r\n// \t\t\t\t\ttitle: 'Error!',\r\n// \t\t\t\t\tvariant: 'error',\r\n// \t\t\t\t\tcontent: error.response?.data?.message,\r\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\r\n// \t\t\t\t});\r\n// \t\t\t});\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Dialog\r\n// \t\t\tonClose={props.handleClose}\r\n// \t\t\topen={Boolean(props.openQRBgDialog)}\r\n// \t\t\tmaxWidth='sm'\r\n// \t\t\tsx={{ '.MuiPaper-root': { width: `100%` } }}\r\n// \t\t>\r\n// \t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\r\n// \t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\tvariant='h5'\r\n// \t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n// \t\t\t\t>\r\n// \t\t\t\t\tQR Background {props.openQRBgDialog?.label}\r\n// \t\t\t\t</PoppinsTypography>\r\n// \t\t\t</DialogTitle>\r\n// \t\t\t<DialogContent\r\n// \t\t\t\tsx={{ display: 'flex', alignItems: 'center', flexDirection: 'column', gap: 6, padding: 4 }}\r\n// \t\t\t>\r\n// \t\t\t\t{props.imageUrl ? (\r\n// \t\t\t\t\t<img\r\n// \t\t\t\t\t\twidth={206}\r\n// \t\t\t\t\t\theight={333}\r\n// \t\t\t\t\t\tsrc={props.imageUrl}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t) : (\r\n// \t\t\t\t\t<Stack\r\n// \t\t\t\t\t\twidth={206}\r\n// \t\t\t\t\t\theight={333}\r\n// \t\t\t\t\t\tsx={{ backgroundColor: '#DFE3ED' }}\r\n// \t\t\t\t\t\tjustifyContent={'center'}\r\n// \t\t\t\t\t\talignItems={'center'}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>No Image Found</PoppinsTypography>\r\n// \t\t\t\t\t</Stack>\r\n// \t\t\t\t)}\r\n// \t\t\t\t<Stack\r\n// \t\t\t\t\tflexDirection={'row'}\r\n// \t\t\t\t\tgap={2}\r\n// \t\t\t\t\talignSelf={'self-end'}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t<LoadingButton\r\n// \t\t\t\t\t\tvariant='outlined'\r\n// \t\t\t\t\t\tsize='large'\r\n// \t\t\t\t\t\tsx={{ width: 245 }}\r\n// \t\t\t\t\t\tonClick={props.handleClose}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\tvariant='h5'\r\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tBack\r\n// \t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t</LoadingButton>\r\n\r\n// \t\t\t\t\t<label htmlFor={`upoload-qr-bg`}>\r\n// \t\t\t\t\t\t<input\r\n// \t\t\t\t\t\t\tid={`upoload-qr-bg`}\r\n// \t\t\t\t\t\t\tname={`upoload-qr-bg`}\r\n// \t\t\t\t\t\t\tstyle={{\r\n// \t\t\t\t\t\t\t\topacity: 0,\r\n// \t\t\t\t\t\t\t\tposition: 'absolute',\r\n// \t\t\t\t\t\t\t\twidth: 'inherit',\r\n// \t\t\t\t\t\t\t\theight: 'inherit',\r\n// \t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t\ttype='file'\r\n// \t\t\t\t\t\t\tonChange={onChange}\r\n// \t\t\t\t\t\t\tonClick={(event) => (event.currentTarget.value = '')}\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t<LoadingButton\r\n// \t\t\t\t\t\t\tcomponent='span'\r\n// \t\t\t\t\t\t\tvariant='contained'\r\n// \t\t\t\t\t\t\tsize='large'\r\n// \t\t\t\t\t\t\tsx={{ width: 245 }}\r\n// \t\t\t\t\t\t\tloading={UpdateQRBgApi.isLoading}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t<PoppinsTypography variant='h5'>\r\n// \t\t\t\t\t\t\t\t{props.imageUrl ? 'Update Image' : 'Upload Image'}\r\n// \t\t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t\t</LoadingButton>\r\n// \t\t\t\t\t</label>\r\n// \t\t\t\t</Stack>\r\n// \t\t\t</DialogContent>\r\n// \t\t</Dialog>\r\n// \t);\r\n// };\r\n\r\nimport { useSnackbar } from '@components/Snackbar';\r\nimport { PoppinsTypography } from '@components/Typography';\r\nimport { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\r\nimport { Option } from '@interfaces/common';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n\tButton,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tStack,\r\n\tuseTheme,\r\n} from '@mui/material';\r\nimport { FC, memo, useState } from 'react';\r\nimport { useAlertDialog } from '@components/AlertDialog';\r\nimport JSZip from 'jszip';\r\nimport QRCode from 'qrcode';\r\n\r\nconst BUTTONS = [5,500, 1000, 2000, 3000, 4000, 5000, 6000];\r\nconst IMAGES: Option[] = [\r\n\t{ label: 'Image1', value: 'bg_url_1' },\r\n\t{ label: 'Image2', value: 'bg_url_2' },\r\n\t{ label: 'Image3', value: 'bg_url_3' },\r\n];\r\n\r\nconst QR_CONFIG = {\r\n    x: 80,  // X position of QR code on banner (in pixels)\r\n    y: 30,  // Y position of QR code on banner (in pixels)\r\n    size: 300,  // Size of QR code (in pixels)\r\n    margin: 0,  // Margin around QR code\r\n};\r\n\r\nconst generateCustomQrOnBanner = async ({\r\n    stringToCreateQR,\r\n    bannerImg,\r\n    bannerText,\r\n}: {\r\n    stringToCreateQR: string;\r\n    bannerImg: string;\r\n    bannerText: string;\r\n}): Promise<{ blob: Blob; bannerText: string }> => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) throw new Error('Canvas context not available');\r\n\r\n    const backgroundImage = await new Promise<HTMLImageElement>((resolve, reject) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'anonymous';\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = bannerImg;\r\n    });\r\n\r\n    canvas.width = backgroundImage.width;\r\n    canvas.height = backgroundImage.height;\r\n\r\n    ctx.drawImage(backgroundImage, 0, 0);\r\n\r\n    const qrCodeDataURL = await QRCode.toDataURL(stringToCreateQR, {\r\n        width: QR_CONFIG.size,\r\n        margin: QR_CONFIG.margin,\r\n        color: {\r\n            dark: '#000000',\r\n            light: '#ffffff'\r\n        }\r\n    });\r\n\r\n    const qrImage = await new Promise<HTMLImageElement>((resolve, reject) => {\r\n        const img = new Image();\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = qrCodeDataURL;\r\n    });\r\n\r\n    ctx.drawImage(qrImage, QR_CONFIG.x, QR_CONFIG.y, QR_CONFIG.size, QR_CONFIG.size);\r\n\r\n    const blob = await new Promise<Blob>((resolve) => {\r\n        canvas.toBlob((blob) => {\r\n            if (blob) resolve(blob);\r\n        }, 'image/png');\r\n    });\r\n\r\n    return { blob, bannerText };\r\n};\r\n\r\ninterface DownloadQrCodeProps {\r\n\trefetch: () => void;\r\n}\r\n\r\nconst DownloadQrCode: FC<DownloadQrCodeProps> = (props) => {\r\n\tconst theme = useTheme();\r\n\tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n\tconst { showAlertDialog, hideAlertDialog } = useAlertDialog();\r\n\r\n\tconst GetQRBgUrlsApi = useGetQRBgUrlsApi();\r\n\tconst DownloadQRApi = useDownloadQRApi();\r\n\r\n\tconst [selectedButton, setSelectedButton] = useState<number | null>(null);\r\n\tconst [selectedImage, setSelectedImage] = useState<Option | null>(null);\r\n\tconst [openQRBgDialog, setOpenQRBgDialog] = useState<Option | null>(null);\r\n\tconst [isDownloading, setIsDownloading] = useState<boolean>(false);\r\n\r\n\tconst zip = new JSZip();\r\n\r\n\tconst OnDownloadClick = () => {\r\n\t\tconst selectedImgUrl =\r\n\t\t\tGetQRBgUrlsApi.data?.data.bg_urls[\r\n\t\t\t\tIMAGES.findIndex((i) => i.value === selectedImage?.value)\r\n\t\t\t] ?? '';\r\n\r\n\t\tif (!selectedImgUrl) {\r\n\t\t\tshowAlertDialog({\r\n\t\t\t\ttitle: `Download QR Code`,\r\n\t\t\t\tcontent: 'No image associated with the selected image.',\r\n\t\t\t\tbuttons: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchildren: 'ok',\r\n\t\t\t\t\t\tvariant: 'outlined',\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetIsDownloading(true);\r\n\t\tshowAlertDialog({\r\n\t\t\ttitle: `Download QR Code`,\r\n\t\t\tcontent: 'Are Your sure you want to download QR Code?',\r\n\t\t\tbuttons: [\r\n\t\t\t\t{\r\n\t\t\t\t\tchildren: 'Cancel',\r\n\t\t\t\t\tvariant: 'outlined',\r\n\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tchildren: 'Download',\r\n\t\t\t\t\tvariant: 'contained',\r\n\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t\tvoid DownloadQRApi.mutateAsync({\r\n\t\t\t\t\t\t\trequest: {\r\n\t\t\t\t\t\t\t\tnumber: selectedButton as number,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tPromise.all(\r\n\t\t\t\t\t\t\t\t\tresponse.data.download_list.map((code) =>\r\n\t\t\t\t\t\t\t\t\t\tgenerateCustomQrOnBanner({\r\n\t\t\t\t\t\t\t\t\t\t\tstringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\r\n\t\t\t\t\t\t\t\t\t\t\tbannerImg: selectedImgUrl,\r\n\t\t\t\t\t\t\t\t\t\t\tbannerText: code.qr_id,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.then((a) => {\r\n\t\t\t\t\t\t\t\t\t\ta.map((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tzip.file(`${x.bannerText}.png`, x.blob as Blob, { binary: true });\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tzip\r\n\t\t\t\t\t\t\t\t\t\t\t.generateAsync({ type: 'blob' })\r\n\t\t\t\t\t\t\t\t\t\t\t.then((blobdata) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = window.document.createElement('a');\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.href = window.URL.createObjectURL(new Blob([blobdata]));\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.download = 'qrcodes.zip';\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.click();\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.refetch();\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\tshowSnackbar({\r\n\t\t\t\t\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\t\t\t\t\tvariant: 'error',\r\n\t\t\t\t\t\t\t\t\tcontent: error.response?.data?.message,\r\n\t\t\t\t\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Stack gap={1}>\r\n\t\t\t<PoppinsTypography\r\n\t\t\t\tvariant='subtitle1'\r\n\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t>\r\n\t\t\t\tSelect Number\r\n\t\t\t</PoppinsTypography>\r\n\t\t\t<Stack gap={5}>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection={'row'}\r\n\t\t\t\t\tgap={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t{BUTTONS.map((l, index) => (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\tvariant={selectedButton === l ? 'contained' : 'outlined'}\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t...(selectedButton === l && { borderColor: '#DFE3ED' }),\r\n\t\t\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\t\t\theight: 40,\r\n\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => setSelectedButton(l)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{l}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Stack>\r\n\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSelect Image\r\n\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\trow\r\n\t\t\t\t\t\t\tvalue={selectedImage?.value}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetSelectedImage(IMAGES.find((i) => i.value === e.target.value) ?? null)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsx={{ gap: 2 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{IMAGES.map((l, index) => (\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tvalue={l.value}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio size='medium' />}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: GetQRBgUrlsApi.data?.data.bg_urls[index]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? theme.palette.success.main\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.common.secondaryGreyText,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOpenQRBgDialog({ label: l.label, value: String(index) })}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{l.label}\r\n\t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Stack>\r\n\r\n\t\t\t\t<LoadingButton\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: 209,\r\n\t\t\t\t\t\theight: 51,\r\n\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={selectedButton === null || selectedImage === null}\r\n\t\t\t\t\tloading={isDownloading}\r\n\t\t\t\t\tonClick={OnDownloadClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PoppinsTypography variant='subtitle1'>Download QR</PoppinsTypography>\r\n\t\t\t\t</LoadingButton>\r\n\t\t\t</Stack>\r\n\t\t\t<HandleQRBgImageDialog\r\n\t\t\t\timageUrl={GetQRBgUrlsApi.data?.data.bg_urls[Number(openQRBgDialog?.value)] ?? ''}\r\n\t\t\t\topenQRBgDialog={openQRBgDialog}\r\n\t\t\t\thandleClose={() => setOpenQRBgDialog(null)}\r\n\t\t\t\trefetch={() => void GetQRBgUrlsApi.refetch()}\r\n\t\t\t/>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nexport default memo(DownloadQrCode);\r\n\r\ninterface HandleQRBgImageProps {\r\n\topenQRBgDialog: Option | null;\r\n\timageUrl: string;\r\n\thandleClose?: () => void;\r\n\trefetch: () => void;\r\n}\r\n\r\nconst HandleQRBgImageDialog = (props: HandleQRBgImageProps) => {\r\n\tconst theme = useTheme();\r\n\tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n\tconst UpdateQRBgApi = useUpdateQRBgApi();\r\n\r\n\tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tUpdateQRBgApi.mutateAsync({\r\n\t\t\trequest: { [`bg_url_${Number(props.openQRBgDialog?.value) + 1}`]: event.target.files },\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\ttitle: 'Success!',\r\n\t\t\t\t\tvariant: 'sucess',\r\n\t\t\t\t\tcontent: response.data?.message,\r\n\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t});\r\n\t\t\t\tprops.refetch();\r\n\t\t\t\tprops.handleClose?.();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\tvariant: 'error',\r\n\t\t\t\t\tcontent: error.response?.data?.message,\r\n\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={props.handleClose}\r\n\t\t\topen={Boolean(props.openQRBgDialog)}\r\n\t\t\tmaxWidth='sm'\r\n\t\t\tsx={{ '.MuiPaper-root': { width: `100%` } }}\r\n\t\t>\r\n\t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\r\n\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n\t\t\t\t>\r\n\t\t\t\t\tQR Background {props.openQRBgDialog?.label}\r\n\t\t\t\t</PoppinsTypography>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent\r\n\t\t\t\tsx={{ display: 'flex', alignItems: 'center', flexDirection: 'column', gap: 6, padding: 4 }}\r\n\t\t\t>\r\n\t\t\t\t{props.imageUrl ? (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\twidth={206}\r\n\t\t\t\t\t\theight={333}\r\n\t\t\t\t\t\tsrc={props.imageUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\twidth={206}\r\n\t\t\t\t\t\theight={333}\r\n\t\t\t\t\t\tsx={{ backgroundColor: '#DFE3ED' }}\r\n\t\t\t\t\t\tjustifyContent={'center'}\r\n\t\t\t\t\t\talignItems={'center'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>No Image Found</PoppinsTypography>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t)}\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection={'row'}\r\n\t\t\t\t\tgap={2}\r\n\t\t\t\t\talignSelf={'self-end'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LoadingButton\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\tsx={{ width: 245 }}\r\n\t\t\t\t\t\tonClick={props.handleClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t</LoadingButton>\r\n\r\n\t\t\t\t\t<label htmlFor={`upoload-qr-bg`}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid={`upoload-qr-bg`}\r\n\t\t\t\t\t\t\tname={`upoload-qr-bg`}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\twidth: 'inherit',\r\n\t\t\t\t\t\t\t\theight: 'inherit',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tonClick={(event) => (event.currentTarget.value = '')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LoadingButton\r\n\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\tsx={{ width: 245 }}\r\n\t\t\t\t\t\t\tloading={UpdateQRBgApi.isLoading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PoppinsTypography variant='h5'>\r\n\t\t\t\t\t\t\t\t{props.imageUrl ? 'Update Image' : 'Upload Image'}\r\n\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t</LoadingButton>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</Stack>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n};\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,iBAAiB,QAAQ,wBAAwB;AAC1D,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,gBAAgB,QAAQ,qBAAqB;AAE3F,SAASC,aAAa,QAAQ,UAAU;AACxC,SACCC,MAAM,EACNC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,WAAW,EACXC,gBAAgB,EAChBC,KAAK,EACLC,UAAU,EACVC,KAAK,EACLC,QAAQ,QACF,eAAe;AACtB,SAAaC,IAAI,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,SAASC,cAAc,QAAQ,yBAAyB;AACxD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAG,CAAC,CAAC,EAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;AAC3D,MAAMC,MAAgB,GAAG,CACxB;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAW,CAAC,EACtC;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAW,CAAC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"},"metadata":{},"sourceType":"module","externalDependencies":[]}