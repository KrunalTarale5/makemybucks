{"ast":null,"code":"// import IconFinder from '@components/Icon';\n// import Pagination from '@components/Pagination';\n// import { useSnackbar } from '@components/Snackbar';\n// import Table, { ColumnDef } from '@components/Table';\n// import { PoppinsTypography } from '@components/Typography';\n// import Uploader from '@components/Uploader';\n// import {\n// \tuseGetSettlementUserResponseApi,\n// \tuploadCustomerDisbusmentExcelApi,\n// } from '@hooks/admin-settlement';\n// import { PageRequest, PaginationResponse, SortRequest } from '@interfaces/common';\n// import { LoadingButton } from '@mui/lab';\n// import {\n// \tButton,\n// \tDialog,\n// \tDialogContent,\n// \tDialogTitle,\n// \tLinearProgress,\n// \tStack,\n// \tuseTheme,\n// } from '@mui/material';\n// import { generateSerialNumber } from '@utils/common';\n// import { memo, useRef, useState, useEffect } from 'react';\n// import moment from 'moment';\n// import axios from 'axios';\n// const UserTab = () => {\n// \tconst theme = useTheme();\n// \tconst searchInputRef = useRef<HTMLInputElement | null>(null);\n// \tconst [openUploadDialog, setOpenUploadDialog] = useState(false);\n// \tconst [pageRequest, setPageRequest] = useState<PageRequest>({\n// \t\tpage: 1,\n// \t\tsize: 10,\n// \t});\n// \tconst [sortRequest, setSortRequest] = useState<SortRequest>({});\n// \tconst GetSettlementUserResponseApi = useGetSettlementUserResponseApi();\n// \tconst handlePage = (page: number) => {\n// \t\tsetPageRequest({ ...pageRequest, page });\n// \t};\n// \t// useEffect(() => {\n// \t// \twindow.location.reload();\n// \t// }, [openUploadDialog]);\n// \t//const rows: PaginationResponse<SettlementUserResponse>['transaction_data'] = [];\n// \tconst rows = GetSettlementUserResponseApi.data?.data.data.transaction_data ?? [];\n// \ttype Row = (typeof rows)[number];\n// \tconst columns: ColumnDef<Row>[] = [\n// \t\t{\n// \t\t\tfield: 'SL No',\n// \t\t\trenderHeader: () => `Date`,\n// \t\t\trenderCell: ({ row }) => moment(row.Date).utc().format('DD MMM YY'),\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t},\n// \t\t{\n// \t\t\tfield: 'action',\n// \t\t\trenderHeader: () => `Total Amount (â‚¹)`,\n// \t\t\trenderCell: ({ row }) => row.Total_amount,\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\tsortable: true,\n// \t\t},\n// \t\t{\n// \t\t\tfield: 'action',\n// \t\t\trenderHeader: () => `Number of users`,\n// \t\t\trenderCell: ({ row }) => row.Number_of_user,\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\tsortable: true,\n// \t\t},\n// \t];\n// \treturn (\n// \t\t<Stack\n// \t\t\tgap={2}\n// \t\t\tflexGrow={'inherit'}\n// \t\t>\n// \t\t\t<Stack alignSelf={'flex-end'}>\n// \t\t\t\t<Button\n// \t\t\t\t\tvariant='contained'\n// \t\t\t\t\tonClick={() => setOpenUploadDialog(true)}\n// \t\t\t\t\tsx={{ height: 40, width: 144 }}\n// \t\t\t\t>\n// \t\t\t\t\t<PoppinsTypography variant='caption'>Upload</PoppinsTypography>\n// \t\t\t\t</Button>\n// \t\t\t</Stack>\n// \t\t\t<Table\n// \t\t\t\trows={rows}\n// \t\t\t\tcolumns={columns as any}\n// \t\t\t\trowId={(row) => row.id as string}\n// \t\t\t\ttableProps={{ size: 'small', stickyHeader: false }}\n// \t\t\t\ttableRowProps={{ hover: true }}\n// \t\t\t\tloading={GetSettlementUserResponseApi.isLoading}\n// \t\t\t/>\n// \t\t\t{/* <Pagination\n// \t\t\t\tpage={pageRequest.page}\n// \t\t\t\tsize={(getSettlementUserResponseApi.data?.data.size as number) ?? 0}\n// \t\t\t\ttotalPages={(getSettlementUserResponseApi.data?.data.pagesTotal as number) ?? 0}\n// \t\t\t\tonPageChange={handlePage}\n// \t\t\t/> */}\n// \t\t\t<UploadExcelDialog\n// \t\t\t\topen={openUploadDialog}\n// \t\t\t\thandleClose={() => setOpenUploadDialog(false)}\n// \t\t\t/>\n// \t\t</Stack>\n// \t);\n// };\n// export default memo(UserTab);\n// interface UploadExcelDialogProps {\n// \topen: boolean;\n// \thandleClose?: () => void;\n// }\n// const UploadExcelDialog = memo((props: UploadExcelDialogProps) => {\n// \tconst theme = useTheme();\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\n// \tconst [file, setFile] = useState<FileList | null>(null);\n// \tconst [progress, setProgress] = useState<number>(0);\n// \tconst [isSucessful, setIsSucessful] = useState<boolean>(false);\n// \tconst onUploadClick = () => {\n// \t\taxios\n// \t\t\t.request({\n// \t\t\t\t...uploadCustomerDisbusmentExcelApi(file as FileList),\n// \t\t\t\tonUploadProgress: (progress: any) => {\n// \t\t\t\t\tconst { loaded, total } = progress;\n// \t\t\t\t\tconst percentageProgress = Math.floor((loaded / total) * 100);\n// \t\t\t\t\tsetProgress(percentageProgress);\n// \t\t\t\t},\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tsetProgress(0);\n// \t\t\t\tsetIsSucessful(true);\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Success!',\n// \t\t\t\t\tvariant: 'sucess',\n// \t\t\t\t\tcontent: response.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tsetIsSucessful(false);\n// \t\t\t\tsetProgress(0);\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Error!',\n// \t\t\t\t\tvariant: 'error',\n// \t\t\t\t\tcontent: error.response?.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t});\n// \t};\n// \treturn (\n// \t\t<Dialog\n// \t\t\tonClose={props.handleClose}\n// \t\t\topen={props.open}\n// \t\t\tmaxWidth='md'\n// \t\t\tsx={{ '.MuiPaper-root': { minWidth: 507 } }}\n// \t\t>\n// \t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\n// \t\t\t\t<PoppinsTypography\n// \t\t\t\t\tfontSize={20}\n// \t\t\t\t\tfontWeight={600}\n// \t\t\t\t\ttextAlign={'center'}\n// \t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t>\n// \t\t\t\t\t{isSucessful\n// \t\t\t\t\t\t? 'Uploaded Successfully !'\n// \t\t\t\t\t\t: progress !== 0 && file !== null\n// \t\t\t\t\t\t  ? 'Uploading'\n// \t\t\t\t\t\t  : `Upload excel`}\n// \t\t\t\t</PoppinsTypography>\n// \t\t\t</DialogTitle>\n// \t\t\t<DialogContent\n// \t\t\t\tsx={{ display: 'flex', flexDirection: 'column', gap: 6, padding: 4, alignItems: 'center' }}\n// \t\t\t>\n// \t\t\t\t{file !== null && progress !== 0 ? (\n// \t\t\t\t\t<Stack\n// \t\t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t\t\tgap={1}\n// \t\t\t\t\t\talignItems={'center'}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\n// \t\t\t\t\t\t<PoppinsTypography>{file[0].name}</PoppinsTypography>\n// \t\t\t\t\t\t<LinearProgress\n// \t\t\t\t\t\t\tvariant='determinate'\n// \t\t\t\t\t\t\tvalue={progress}\n// \t\t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\t\tminWidth: 200,\n// \t\t\t\t\t\t\t\theight: 8,\n// \t\t\t\t\t\t\t\tbackgroundColor: '#DFE3ED',\n// \t\t\t\t\t\t\t\tborderRadius: `8px`,\n// \t\t\t\t\t\t\t\t'.MuiLinearProgress-bar': {\n// \t\t\t\t\t\t\t\t\tbackgroundColor: '#5DC5FF',\n// \t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</Stack>\n// \t\t\t\t) : isSucessful ? (\n// \t\t\t\t\t<IconFinder\n// \t\t\t\t\t\ticonName='Checked'\n// \t\t\t\t\t\ticonProps={{ fill: theme.palette.success.main, height: 40, width: 40 }}\n// \t\t\t\t\t/>\n// \t\t\t\t) : (\n// \t\t\t\t\t<Uploader\n// \t\t\t\t\t\tfieldName='drag'\n// \t\t\t\t\t\tacceptFiles='.xlsx'\n// \t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\tplaceContent: 'flex-end',\n// \t\t\t\t\t\t\theight: 138,\n// \t\t\t\t\t\t\twidth: 359,\n// \t\t\t\t\t\t\tborderWidth: 1,\n// \t\t\t\t\t\t\tborderStyle: 'dashed',\n// \t\t\t\t\t\t\tborderColor: '#8A92A6',\n// \t\t\t\t\t\t\tborderRadius: `12px`,\n// \t\t\t\t\t\t\tjustifyContent: 'center',\n// \t\t\t\t\t\t\talignItems: 'center',\n// \t\t\t\t\t\t\tflexDirection: 'column',\n// \t\t\t\t\t\t}}\n// \t\t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\t\tsetFile(e.target?.files as FileList);\n// \t\t\t\t\t\t}}\n// \t\t\t\t\t\tfile={''}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, paddingTop: 1 }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tDrag a file here\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, display: 'flex' }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tor\n// \t\t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\t\tsx={{ color: '#18ACFF', textDecoration: 'underline', paddingX: 0.5 }}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tbrowse\n// \t\t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t\ta file to upload\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t</Uploader>\n// \t\t\t\t)}\n// \t\t\t\t<Stack\n// \t\t\t\t\tgap={1}\n// \t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t>\n// \t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\tvariant='text'\n// \t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\n// \t\t\t\t\t\tonClick={props.handleClose}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle1'\n// \t\t\t\t\t\t\tfontSize={20}\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tOk\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t</LoadingButton>\n// \t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\tvariant='contained'\n// \t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\n// \t\t\t\t\t\tonClick={onUploadClick}\n// \t\t\t\t\t\tdisabled={file === null || progress !== 0}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle1'\n// \t\t\t\t\t\t\tfontSize={20}\n// \t\t\t\t\t\t>{`Upload File`}</PoppinsTypography>\n// \t\t\t\t\t</LoadingButton>\n// \t\t\t\t</Stack>\n// \t\t\t</DialogContent>\n// \t\t</Dialog>\n// \t);\n// });\nimport IconFinder from'@components/Icon';import{useSnackbar}from'@components/Snackbar';import Table from'@components/Table';import{PoppinsTypography}from'@components/Typography';import Uploader from'@components/Uploader';import{useGetSettlementUserResponseApi,uploadCustomerDisbusmentExcelApi}from'@hooks/admin-settlement';import{LoadingButton}from'@mui/lab';import{Button,Dialog,DialogContent,DialogTitle,LinearProgress,Stack,useTheme}from'@mui/material';import{memo,useRef,useState}from'react';import moment from'moment';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const UserTab=()=>{var _GetSettlementUserRes,_GetSettlementUserRes2;const theme=useTheme();const searchInputRef=useRef(null);const[openUploadDialog,setOpenUploadDialog]=useState(false);const[pageRequest,setPageRequest]=useState({page:1,size:10});const[sortRequest,setSortRequest]=useState({});const GetSettlementUserResponseApi=useGetSettlementUserResponseApi();const handlePage=page=>{setPageRequest({...pageRequest,page});};const rows=(_GetSettlementUserRes=(_GetSettlementUserRes2=GetSettlementUserResponseApi.data)===null||_GetSettlementUserRes2===void 0?void 0:_GetSettlementUserRes2.data.data.transaction_data)!==null&&_GetSettlementUserRes!==void 0?_GetSettlementUserRes:[];const columns=[{field:'SL No',renderHeader:()=>\"Date\",renderCell:_ref=>{let{row}=_ref;return moment(row.Date).utc().format('DD MMM YY');},tableCellProps:{sx:{width:500}},tableHeaderProps:{sx:{width:500}}},{field:'action',renderHeader:()=>\"Total Amount (\\u20B9)\",renderCell:_ref2=>{let{row}=_ref2;return row.Total_amount;},tableCellProps:{sx:{width:500}},tableHeaderProps:{sx:{width:500}},sortable:true},{field:'action',renderHeader:()=>\"Number of users\",renderCell:_ref3=>{let{row}=_ref3;return row.Number_of_user;},tableCellProps:{sx:{width:500}},tableHeaderProps:{sx:{width:500}},sortable:true}];return/*#__PURE__*/_jsxs(Stack,{gap:2,flexGrow:'inherit',children:[/*#__PURE__*/_jsx(Stack,{alignSelf:'flex-end',children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>setOpenUploadDialog(true),sx:{height:40,width:144},children:/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"caption\",children:\"Upload\"})})}),/*#__PURE__*/_jsx(Table,{rows:rows,columns:columns,rowId:row=>row.id,tableProps:{size:'small',stickyHeader:false},tableRowProps:{hover:true},loading:GetSettlementUserResponseApi.isLoading}),/*#__PURE__*/_jsx(UploadExcelDialog,{open:openUploadDialog,handleClose:()=>setOpenUploadDialog(false)})]});};export default/*#__PURE__*/memo(UserTab);const UploadExcelDialog=/*#__PURE__*/memo(props=>{const theme=useTheme();const{showSnackbar,hideSnackbar}=useSnackbar();const[file,setFile]=useState(null);const[progress,setProgress]=useState(0);const[isSucessful,setIsSucessful]=useState(false);const onUploadClick=()=>{axios.request({...uploadCustomerDisbusmentExcelApi(file),onUploadProgress:progress=>{const{loaded,total}=progress;const percentageProgress=Math.floor(loaded/total*100);setProgress(percentageProgress);}}).then(response=>{var _response$data;setProgress(0);setIsSucessful(true);showSnackbar({title:'Success!',variant:'sucess',content:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.message,onCancel:()=>hideSnackbar()});}).catch(error=>{var _error$response,_error$response$data;setIsSucessful(false);setProgress(0);showSnackbar({title:'Error!',variant:'error',content:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message,onCancel:()=>hideSnackbar()});});};return/*#__PURE__*/_jsxs(Dialog,{onClose:props.handleClose,open:props.open,maxWidth:\"md\",sx:{'.MuiPaper-root':{minWidth:507}},children:[/*#__PURE__*/_jsx(DialogTitle,{sx:{padding:4,paddingBottom:3},children:/*#__PURE__*/_jsx(PoppinsTypography,{fontSize:20,fontWeight:600,textAlign:'center',sx:{color:theme.palette.common.primaryGreyText},children:isSucessful?'Uploaded Successfully !':progress!==0&&file!==null?'Uploading':\"Upload excel\"})}),/*#__PURE__*/_jsxs(DialogContent,{sx:{display:'flex',flexDirection:'column',gap:6,padding:4,alignItems:'center'},children:[file!==null&&progress!==0?/*#__PURE__*/_jsxs(Stack,{flexDirection:'row',gap:1,alignItems:'center',children:[/*#__PURE__*/_jsx(IconFinder,{iconName:\"UploadFile\"}),/*#__PURE__*/_jsx(PoppinsTypography,{children:file[0].name}),/*#__PURE__*/_jsx(LinearProgress,{variant:\"determinate\",value:progress,sx:{minWidth:200,height:8,backgroundColor:'#DFE3ED',borderRadius:\"8px\",'.MuiLinearProgress-bar':{backgroundColor:'#5DC5FF'}}})]}):isSucessful?/*#__PURE__*/_jsx(IconFinder,{iconName:\"Checked\",iconProps:{fill:theme.palette.success.main,height:40,width:40}}):/*#__PURE__*/_jsxs(Uploader,{fieldName:\"drag\",acceptFiles:\".xlsx\",sx:{placeContent:'flex-end',height:138,width:359,borderWidth:1,borderStyle:'dashed',borderColor:'#8A92A6',borderRadius:\"12px\",justifyContent:'center',alignItems:'center',flexDirection:'column'},onChange:e=>{var _e$target;setFile((_e$target=e.target)===null||_e$target===void 0?void 0:_e$target.files);},file:'',children:[/*#__PURE__*/_jsx(IconFinder,{iconName:\"UploadFile\"}),/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"subtitle2\",sx:{color:theme.palette.common.secondaryGreyText,paddingTop:1},children:\"Drag a file here\"}),/*#__PURE__*/_jsxs(PoppinsTypography,{variant:\"subtitle2\",sx:{color:theme.palette.common.secondaryGreyText,display:'flex'},children:[\"or\",/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"subtitle2\",sx:{color:'#18ACFF',textDecoration:'underline',paddingX:0.5},children:\"browse\"}),\"a file to upload\"]})]}),/*#__PURE__*/_jsxs(Stack,{gap:1,flexDirection:'row',children:[/*#__PURE__*/_jsx(LoadingButton,{variant:\"text\",size:\"large\",sx:{minWidth:166,height:46},onClick:props.handleClose,children:/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"subtitle1\",fontSize:20,sx:{color:theme.palette.common.primaryGreyText},children:\"Ok\"})}),!isSucessful&&/*#__PURE__*/_jsx(LoadingButton,{variant:\"contained\",size:\"large\",sx:{minWidth:166,height:46},onClick:onUploadClick,children:/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"subtitle1\",fontSize:20,sx:{color:theme.palette.common.white},children:\"Upload\"})})]})]})]});});UploadExcelDialog.displayName='UploadExcelDialog';","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}