{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\Novabite\\\\makemybucks\\\\src\\\\views\\\\admin\\\\qr-codes\\\\DownloadQrCode.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useSnackbar } from '@components/Snackbar';\nimport { PoppinsTypography } from '@components/Typography';\nimport { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\nimport { LoadingButton } from '@mui/lab';\nimport { Button, Dialog, DialogContent, DialogTitle, FormControl, FormControlLabel, Radio, RadioGroup, Stack, useTheme } from '@mui/material';\nimport { memo, useState } from 'react';\nimport { useAlertDialog } from '@components/AlertDialog';\nimport JSZip from 'jszip';\nimport QRCode from 'qrcode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTONS = [5, 500, 1000, 2000, 3000, 4000, 5000, 6000];\nconst IMAGES = [{\n  label: 'Image1',\n  value: 'bg_url_1'\n}, {\n  label: 'Image2',\n  value: 'bg_url_2'\n}, {\n  label: 'Image3',\n  value: 'bg_url_3'\n}];\nconst QR_CONFIG = {\n  x: 370,\n  // X position of QR code on banner (in pixels)\n  y: 900,\n  // Y position of QR code on banner (in pixels)\n  size: 500,\n  // Size of QR code (in pixels)\n  margin: 0,\n  // Margin around QR code\n  text: {\n    x: 250,\n    // X position of text\n    y: 500,\n    // Y position of text (middle of QR)\n    font: \"bold 38px Arial\",\n    // Font style\n    color: \"#70778b\" // Text color\n  }\n};\nconst generateCustomQrOnBanner = async ({\n  stringToCreateQR,\n  bannerImg,\n  bannerText\n}) => {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  if (!ctx) throw new Error('Canvas context not available');\n  const backgroundImage = await new Promise((resolve, reject) => {\n    const img = new Image();\n    img.crossOrigin = 'anonymous';\n    img.onload = () => resolve(img);\n    img.onerror = reject;\n    img.src = bannerImg;\n  });\n  canvas.width = backgroundImage.width;\n  canvas.height = backgroundImage.height;\n\n  // Draw background\n  ctx.drawImage(backgroundImage, 0, 0);\n\n  // Generate QR code with transparent background\n  const qrCanvas = document.createElement('canvas');\n  const qrCtx = qrCanvas.getContext('2d');\n  if (!qrCtx) throw new Error('QR Canvas context not available');\n\n  // Set QR canvas size\n  qrCanvas.width = QR_CONFIG.size;\n  qrCanvas.height = QR_CONFIG.size;\n\n  // Generate QR code\n  const qrCodeDataURL = await QRCode.toCanvas(qrCanvas, stringToCreateQR, {\n    width: QR_CONFIG.size,\n    margin: QR_CONFIG.margin,\n    color: {\n      dark: '#000000',\n      light: '#ffffff00' // Transparent background\n    }\n  });\n\n  // Draw QR code onto main canvas\n  ctx.drawImage(qrCanvas, QR_CONFIG.x, QR_CONFIG.y, QR_CONFIG.size, QR_CONFIG.size);\n\n  // Add text vertically\n  ctx.save();\n  ctx.translate(QR_CONFIG.x - 30, QR_CONFIG.y + QR_CONFIG.size - 145);\n  ctx.rotate(-Math.PI / 2);\n  ctx.font = QR_CONFIG.text.font;\n  ctx.fillStyle = QR_CONFIG.text.color;\n  ctx.textAlign = 'center';\n  ctx.textBaseline = 'middle';\n  ctx.fillText(bannerText, 0, 0);\n  ctx.restore();\n  const blob = await new Promise(resolve => {\n    canvas.toBlob(blob => {\n      if (blob) resolve(blob);\n    }, 'image/png');\n  });\n  return {\n    blob,\n    bannerText\n  };\n};\nconst DownloadQrCode = props => {\n  _s();\n  var _GetQRBgUrlsApi$data$2, _GetQRBgUrlsApi$data3;\n  const theme = useTheme();\n  const {\n    showSnackbar,\n    hideSnackbar\n  } = useSnackbar();\n  const {\n    showAlertDialog,\n    hideAlertDialog\n  } = useAlertDialog();\n  const GetQRBgUrlsApi = useGetQRBgUrlsApi();\n  const DownloadQRApi = useDownloadQRApi();\n  const [selectedButton, setSelectedButton] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [openQRBgDialog, setOpenQRBgDialog] = useState(null);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const zip = new JSZip();\n  const OnDownloadClick = () => {\n    var _GetQRBgUrlsApi$data$, _GetQRBgUrlsApi$data;\n    const selectedImgUrl = (_GetQRBgUrlsApi$data$ = (_GetQRBgUrlsApi$data = GetQRBgUrlsApi.data) === null || _GetQRBgUrlsApi$data === void 0 ? void 0 : _GetQRBgUrlsApi$data.data.bg_urls[IMAGES.findIndex(i => i.value === (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.value))]) !== null && _GetQRBgUrlsApi$data$ !== void 0 ? _GetQRBgUrlsApi$data$ : '';\n    if (!selectedImgUrl) {\n      showAlertDialog({\n        title: `Download QR Code`,\n        content: 'No image associated with the selected image.',\n        buttons: [{\n          children: 'ok',\n          variant: 'outlined',\n          callback: () => {\n            hideAlertDialog();\n          }\n        }]\n      });\n      return;\n    }\n    setIsDownloading(true);\n    showAlertDialog({\n      title: `Download QR Code`,\n      content: 'Are Your sure you want to download QR Code?',\n      buttons: [{\n        children: 'Cancel',\n        variant: 'outlined',\n        callback: () => {\n          hideAlertDialog();\n        }\n      }, {\n        children: 'Download',\n        variant: 'contained',\n        callback: () => {\n          hideAlertDialog();\n          void DownloadQRApi.mutateAsync({\n            request: {\n              number: selectedButton\n            }\n          }).then(response => {\n            Promise.all(response.data.download_list.map(code => generateCustomQrOnBanner({\n              stringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\n              bannerImg: selectedImgUrl,\n              bannerText: code.qr_id\n            }))).then(a => {\n              a.map(x => {\n                zip.file(`${x.bannerText}.png`, x.blob, {\n                  binary: true\n                });\n              });\n              zip.generateAsync({\n                type: 'blob'\n              }).then(blobdata => {\n                const elem = window.document.createElement('a');\n                elem.href = window.URL.createObjectURL(new Blob([blobdata]));\n                elem.download = 'qrcodes.zip';\n                elem.click();\n              }).then(() => {\n                setIsDownloading(false);\n                props.refetch();\n              }).catch(() => {\n                setIsDownloading(false);\n              });\n            }).catch(() => {\n              setIsDownloading(false);\n            });\n          }).catch(error => {\n            var _error$response, _error$response$data;\n            setIsDownloading(false);\n            showSnackbar({\n              title: 'Error!',\n              variant: 'error',\n              content: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message,\n              onCancel: () => hideSnackbar()\n            });\n          });\n        }\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 1,\n    children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n      variant: \"subtitle1\",\n      sx: {\n        color: theme.palette.common.secondaryGreyText\n      },\n      children: \"Select Number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      gap: 5,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        flexDirection: 'row',\n        gap: 1,\n        children: BUTTONS.map((l, index) => /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          variant: selectedButton === l ? 'contained' : 'outlined',\n          color: \"primary\",\n          sx: {\n            ...(selectedButton === l && {\n              borderColor: '#DFE3ED'\n            }),\n            width: 100,\n            height: 40,\n            borderRadius: '8px'\n          },\n          onClick: () => setSelectedButton(l),\n          children: l\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          sx: {\n            color: theme.palette.common.secondaryGreyText\n          },\n          children: \"Select Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            row: true,\n            value: selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.value,\n            onChange: e => {\n              var _IMAGES$find;\n              return setSelectedImage((_IMAGES$find = IMAGES.find(i => i.value === e.target.value)) !== null && _IMAGES$find !== void 0 ? _IMAGES$find : null);\n            },\n            sx: {\n              gap: 2\n            },\n            children: IMAGES.map((l, index) => {\n              var _GetQRBgUrlsApi$data2;\n              return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                value: l.value,\n                control: /*#__PURE__*/_jsxDEV(Radio, {\n                  size: \"medium\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: (_GetQRBgUrlsApi$data2 = GetQRBgUrlsApi.data) !== null && _GetQRBgUrlsApi$data2 !== void 0 && _GetQRBgUrlsApi$data2.data.bg_urls[index] ? theme.palette.success.main : theme.palette.common.secondaryGreyText\n                  },\n                  onClick: () => setOpenQRBgDialog({\n                    label: l.label,\n                    value: String(index)\n                  }),\n                  children: l.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 11\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 9\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        size: \"large\",\n        variant: \"contained\",\n        color: \"primary\",\n        sx: {\n          width: 209,\n          height: 51,\n          borderRadius: '8px'\n        },\n        disabled: selectedButton === null || selectedImage === null,\n        loading: isDownloading,\n        onClick: OnDownloadClick,\n        children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          children: \"Download QR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(HandleQRBgImageDialog, {\n      imageUrl: (_GetQRBgUrlsApi$data$2 = (_GetQRBgUrlsApi$data3 = GetQRBgUrlsApi.data) === null || _GetQRBgUrlsApi$data3 === void 0 ? void 0 : _GetQRBgUrlsApi$data3.data.bg_urls[Number(openQRBgDialog === null || openQRBgDialog === void 0 ? void 0 : openQRBgDialog.value)]) !== null && _GetQRBgUrlsApi$data$2 !== void 0 ? _GetQRBgUrlsApi$data$2 : '',\n      openQRBgDialog: openQRBgDialog,\n      handleClose: () => setOpenQRBgDialog(null),\n      refetch: () => void GetQRBgUrlsApi.refetch()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 3\n  }, this);\n};\n_s(DownloadQrCode, \"xfT07FbJB1YAo5vkrqggE2fQLOA=\", false, function () {\n  return [useTheme, useSnackbar, useAlertDialog, useGetQRBgUrlsApi, useDownloadQRApi];\n});\n_c = DownloadQrCode;\nexport default _c2 = /*#__PURE__*/memo(DownloadQrCode);\nconst HandleQRBgImageDialog = props => {\n  _s2();\n  var _props$openQRBgDialog2;\n  const theme = useTheme();\n  const {\n    showSnackbar,\n    hideSnackbar\n  } = useSnackbar();\n  const UpdateQRBgApi = useUpdateQRBgApi();\n  const onChange = event => {\n    var _props$openQRBgDialog;\n    UpdateQRBgApi.mutateAsync({\n      request: {\n        [`bg_url_${Number((_props$openQRBgDialog = props.openQRBgDialog) === null || _props$openQRBgDialog === void 0 ? void 0 : _props$openQRBgDialog.value) + 1}`]: event.target.files\n      }\n    }).then(response => {\n      var _response$data, _props$handleClose;\n      showSnackbar({\n        title: 'Success!',\n        variant: 'sucess',\n        content: (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message,\n        onCancel: () => hideSnackbar()\n      });\n      props.refetch();\n      (_props$handleClose = props.handleClose) === null || _props$handleClose === void 0 ? void 0 : _props$handleClose.call(props);\n    }).catch(error => {\n      var _error$response2, _error$response2$data;\n      showSnackbar({\n        title: 'Error!',\n        variant: 'error',\n        content: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message,\n        onCancel: () => hideSnackbar()\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    onClose: props.handleClose,\n    open: Boolean(props.openQRBgDialog),\n    maxWidth: \"sm\",\n    sx: {\n      '.MuiPaper-root': {\n        width: `100%`\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        padding: 4,\n        paddingBottom: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n        variant: \"h5\",\n        sx: {\n          color: theme.palette.common.primaryGreyText\n        },\n        children: [\"QR Background \", (_props$openQRBgDialog2 = props.openQRBgDialog) === null || _props$openQRBgDialog2 === void 0 ? void 0 : _props$openQRBgDialog2.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        gap: 6,\n        padding: 4\n      },\n      children: [props.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        width: 206,\n        height: 333,\n        src: props.imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(Stack, {\n        width: 206,\n        height: 333,\n        sx: {\n          backgroundColor: '#DFE3ED'\n        },\n        justifyContent: 'center',\n        alignItems: 'center',\n        children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n          variant: \"subtitle1\",\n          children: \"No Image Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        flexDirection: 'row',\n        gap: 2,\n        alignSelf: 'self-end',\n        children: [/*#__PURE__*/_jsxDEV(LoadingButton, {\n          variant: \"outlined\",\n          size: \"large\",\n          sx: {\n            width: 245\n          },\n          onClick: props.handleClose,\n          children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"h5\",\n            sx: {\n              color: theme.palette.common.primaryGreyText\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `upoload-qr-bg`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `upoload-qr-bg`,\n            name: `upoload-qr-bg`,\n            style: {\n              opacity: 0,\n              position: 'absolute',\n              width: 'inherit',\n              height: 'inherit'\n            },\n            type: \"file\",\n            onChange: onChange,\n            onClick: event => event.currentTarget.value = ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n            component: \"span\",\n            variant: \"contained\",\n            size: \"large\",\n            sx: {\n              width: 245\n            },\n            loading: UpdateQRBgApi.isLoading,\n            children: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n              variant: \"h5\",\n              children: props.imageUrl ? 'Update Image' : 'Upload Image'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 3\n  }, this);\n};\n_s2(HandleQRBgImageDialog, \"o98RjPFTMlaN2IhrXMX13zYjlgw=\", false, function () {\n  return [useTheme, useSnackbar, useUpdateQRBgApi];\n});\n_c3 = HandleQRBgImageDialog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DownloadQrCode\");\n$RefreshReg$(_c2, \"%default%\");\n$RefreshReg$(_c3, \"HandleQRBgImageDialog\");","map":{"version":3,"names":["useSnackbar","PoppinsTypography","useDownloadQRApi","useGetQRBgUrlsApi","useUpdateQRBgApi","LoadingButton","Button","Dialog","DialogContent","DialogTitle","FormControl","FormControlLabel","Radio","RadioGroup","Stack","useTheme","memo","useState","useAlertDialog","JSZip","QRCode","jsxDEV","_jsxDEV","BUTTONS","IMAGES","label","value","QR_CONFIG","x","y","size","margin","text","font","color","generateCustomQrOnBanner","stringToCreateQR","bannerImg","bannerText","canvas","document","createElement","ctx","getContext","Error","backgroundImage","Promise","resolve","reject","img","Image","crossOrigin","onload","onerror","src","width","height","drawImage","qrCanvas","qrCtx","qrCodeDataURL","toCanvas","dark","light","save","translate","rotate","Math","PI","fillStyle","textAlign","textBaseline","fillText","restore","blob","toBlob","DownloadQrCode","props","_s","_GetQRBgUrlsApi$data$2","_GetQRBgUrlsApi$data3","theme","showSnackbar","hideSnackbar","showAlertDialog","hideAlertDialog","GetQRBgUrlsApi","DownloadQRApi","selectedButton","setSelectedButton","selectedImage","setSelectedImage","openQRBgDialog","setOpenQRBgDialog","isDownloading","setIsDownloading","zip","OnDownloadClick","_GetQRBgUrlsApi$data$","_GetQRBgUrlsApi$data","selectedImgUrl","data","bg_urls","findIndex","i","title","content","buttons","children","variant","callback","mutateAsync","request","number","then","response","all","download_list","map","code","String","process","env","REACT_APP_PAYMENT_URL","qr_id","a","file","binary","generateAsync","type","blobdata","elem","window","href","URL","createObjectURL","Blob","download","click","refetch","catch","error","_error$response","_error$response$data","message","onCancel","gap","sx","palette","common","secondaryGreyText","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","l","index","borderColor","borderRadius","onClick","row","onChange","e","_IMAGES$find","find","target","_GetQRBgUrlsApi$data2","control","success","main","disabled","loading","HandleQRBgImageDialog","imageUrl","Number","handleClose","_c","_c2","_s2","_props$openQRBgDialog2","UpdateQRBgApi","event","_props$openQRBgDialog","files","_response$data","_props$handleClose","call","_error$response2","_error$response2$data","onClose","open","Boolean","maxWidth","padding","paddingBottom","primaryGreyText","display","alignItems","backgroundColor","justifyContent","alignSelf","htmlFor","id","name","style","opacity","position","currentTarget","component","isLoading","_c3","$RefreshReg$"],"sources":["D:/Krunal/Novabite/makemybucks/src/views/admin/qr-codes/DownloadQrCode.tsx"],"sourcesContent":["\r\nimport { useSnackbar } from '@components/Snackbar';\r\nimport { PoppinsTypography } from '@components/Typography';\r\nimport { useDownloadQRApi, useGetQRBgUrlsApi, useUpdateQRBgApi } from '@hooks/admin-qrcode';\r\nimport { Option } from '@interfaces/common';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {\r\n\tButton,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tFormControl,\r\n\tFormControlLabel,\r\n\tRadio,\r\n\tRadioGroup,\r\n\tStack,\r\n\tuseTheme,\r\n} from '@mui/material';\r\nimport { FC, memo, useState } from 'react';\r\nimport { useAlertDialog } from '@components/AlertDialog';\r\nimport JSZip from 'jszip';\r\nimport QRCode from 'qrcode';\r\n\r\nconst BUTTONS = [5,500, 1000, 2000, 3000, 4000, 5000, 6000];\r\nconst IMAGES: Option[] = [\r\n\t{ label: 'Image1', value: 'bg_url_1' },\r\n\t{ label: 'Image2', value: 'bg_url_2' },\r\n\t{ label: 'Image3', value: 'bg_url_3' },\r\n];\r\n\r\nconst QR_CONFIG = {\r\n    x: 370,  // X position of QR code on banner (in pixels)\r\n    y: 900,  // Y position of QR code on banner (in pixels)\r\n    size: 500,  // Size of QR code (in pixels)\r\n    margin: 0,  // Margin around QR code\r\n    text: {\r\n        x: 250,  // X position of text\r\n        y: 500, // Y position of text (middle of QR)\r\n        font: \"bold 38px Arial\",  // Font style\r\n        color: \"#70778b\"  // Text color\r\n    }\r\n};\r\n\r\nconst generateCustomQrOnBanner = async ({\r\n    stringToCreateQR,\r\n    bannerImg,\r\n    bannerText,\r\n}: {\r\n    stringToCreateQR: string;\r\n    bannerImg: string;\r\n    bannerText: string;\r\n}): Promise<{ blob: Blob; bannerText: string }> => {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) throw new Error('Canvas context not available');\r\n\r\n    const backgroundImage = await new Promise<HTMLImageElement>((resolve, reject) => {\r\n        const img = new Image();\r\n        img.crossOrigin = 'anonymous';\r\n        img.onload = () => resolve(img);\r\n        img.onerror = reject;\r\n        img.src = bannerImg;\r\n    });\r\n\r\n    canvas.width = backgroundImage.width;\r\n    canvas.height = backgroundImage.height;\r\n\r\n    // Draw background\r\n    ctx.drawImage(backgroundImage, 0, 0);\r\n\r\n    // Generate QR code with transparent background\r\n    const qrCanvas = document.createElement('canvas');\r\n    const qrCtx = qrCanvas.getContext('2d');\r\n    if (!qrCtx) throw new Error('QR Canvas context not available');\r\n\r\n    // Set QR canvas size\r\n    qrCanvas.width = QR_CONFIG.size;\r\n    qrCanvas.height = QR_CONFIG.size;\r\n\r\n    // Generate QR code\r\n    const qrCodeDataURL = await QRCode.toCanvas(qrCanvas, stringToCreateQR, {\r\n        width: QR_CONFIG.size,\r\n        margin: QR_CONFIG.margin,\r\n        color: {\r\n            dark: '#000000',\r\n            light: '#ffffff00'  // Transparent background\r\n        }\r\n    });\r\n\r\n    // Draw QR code onto main canvas\r\n    ctx.drawImage(qrCanvas, QR_CONFIG.x, QR_CONFIG.y, QR_CONFIG.size, QR_CONFIG.size);\r\n\r\n    // Add text vertically\r\n    ctx.save();\r\n\tctx.translate(QR_CONFIG.x - 30, QR_CONFIG.y + QR_CONFIG.size - 145); \r\n    ctx.rotate(-Math.PI / 2);\r\n    ctx.font = QR_CONFIG.text.font;\r\n    ctx.fillStyle = QR_CONFIG.text.color;\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText(bannerText, 0, 0);\r\n    ctx.restore();\r\n\r\n    const blob = await new Promise<Blob>((resolve) => {\r\n        canvas.toBlob((blob) => {\r\n            if (blob) resolve(blob);\r\n        }, 'image/png');\r\n    });\r\n\r\n    return { blob, bannerText };\r\n};\r\n\r\ninterface DownloadQrCodeProps {\r\n\trefetch: () => void;\r\n}\r\n\r\nconst DownloadQrCode: FC<DownloadQrCodeProps> = (props) => {\r\n\tconst theme = useTheme();\r\n\tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n\tconst { showAlertDialog, hideAlertDialog } = useAlertDialog();\r\n\r\n\tconst GetQRBgUrlsApi = useGetQRBgUrlsApi();\r\n\tconst DownloadQRApi = useDownloadQRApi();\r\n\r\n\tconst [selectedButton, setSelectedButton] = useState<number | null>(null);\r\n\tconst [selectedImage, setSelectedImage] = useState<Option | null>(null);\r\n\tconst [openQRBgDialog, setOpenQRBgDialog] = useState<Option | null>(null);\r\n\tconst [isDownloading, setIsDownloading] = useState<boolean>(false);\r\n\r\n\tconst zip = new JSZip();\r\n\r\n\tconst OnDownloadClick = () => {\r\n\t\tconst selectedImgUrl =\r\n\t\t\tGetQRBgUrlsApi.data?.data.bg_urls[\r\n\t\t\t\tIMAGES.findIndex((i) => i.value === selectedImage?.value)\r\n\t\t\t] ?? '';\r\n\r\n\t\tif (!selectedImgUrl) {\r\n\t\t\tshowAlertDialog({\r\n\t\t\t\ttitle: `Download QR Code`,\r\n\t\t\t\tcontent: 'No image associated with the selected image.',\r\n\t\t\t\tbuttons: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tchildren: 'ok',\r\n\t\t\t\t\t\tvariant: 'outlined',\r\n\t\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetIsDownloading(true);\r\n\t\tshowAlertDialog({\r\n\t\t\ttitle: `Download QR Code`,\r\n\t\t\tcontent: 'Are Your sure you want to download QR Code?',\r\n\t\t\tbuttons: [\r\n\t\t\t\t{\r\n\t\t\t\t\tchildren: 'Cancel',\r\n\t\t\t\t\tvariant: 'outlined',\r\n\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tchildren: 'Download',\r\n\t\t\t\t\tvariant: 'contained',\r\n\t\t\t\t\tcallback: () => {\r\n\t\t\t\t\t\thideAlertDialog();\r\n\t\t\t\t\t\tvoid DownloadQRApi.mutateAsync({\r\n\t\t\t\t\t\t\trequest: {\r\n\t\t\t\t\t\t\t\tnumber: selectedButton as number,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\t\t\tPromise.all(\r\n\t\t\t\t\t\t\t\t\tresponse.data.download_list.map((code) =>\r\n\t\t\t\t\t\t\t\t\t\tgenerateCustomQrOnBanner({\r\n\t\t\t\t\t\t\t\t\t\t\tstringToCreateQR: `${String(process.env.REACT_APP_PAYMENT_URL)}${code.qr_id}`,\r\n\t\t\t\t\t\t\t\t\t\t\tbannerImg: selectedImgUrl,\r\n\t\t\t\t\t\t\t\t\t\t\tbannerText: code.qr_id,\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t.then((a) => {\r\n\t\t\t\t\t\t\t\t\t\ta.map((x) => {\r\n\t\t\t\t\t\t\t\t\t\t\tzip.file(`${x.bannerText}.png`, x.blob as Blob, { binary: true });\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tzip\r\n\t\t\t\t\t\t\t\t\t\t\t.generateAsync({ type: 'blob' })\r\n\t\t\t\t\t\t\t\t\t\t\t.then((blobdata) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst elem = window.document.createElement('a');\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.href = window.URL.createObjectURL(new Blob([blobdata]));\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.download = 'qrcodes.zip';\r\n\t\t\t\t\t\t\t\t\t\t\t\telem.click();\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t.then(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\tprops.refetch();\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t.catch(() => {\r\n\t\t\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\t\t\tsetIsDownloading(false);\r\n\t\t\t\t\t\t\t\tshowSnackbar({\r\n\t\t\t\t\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\t\t\t\t\tvariant: 'error',\r\n\t\t\t\t\t\t\t\t\tcontent: error.response?.data?.message,\r\n\t\t\t\t\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Stack gap={1}>\r\n\t\t\t<PoppinsTypography\r\n\t\t\t\tvariant='subtitle1'\r\n\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t>\r\n\t\t\t\tSelect Number\r\n\t\t\t</PoppinsTypography>\r\n\t\t\t<Stack gap={5}>\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection={'row'}\r\n\t\t\t\t\tgap={1}\r\n\t\t\t\t>\r\n\t\t\t\t\t{BUTTONS.map((l, index) => (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\tvariant={selectedButton === l ? 'contained' : 'outlined'}\r\n\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t...(selectedButton === l && { borderColor: '#DFE3ED' }),\r\n\t\t\t\t\t\t\t\twidth: 100,\r\n\t\t\t\t\t\t\t\theight: 40,\r\n\t\t\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClick={() => setSelectedButton(l)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{l}\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Stack>\r\n\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\tvariant='subtitle1'\r\n\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSelect Image\r\n\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t<FormControl>\r\n\t\t\t\t\t\t<RadioGroup\r\n\t\t\t\t\t\t\trow\r\n\t\t\t\t\t\t\tvalue={selectedImage?.value}\r\n\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\tsetSelectedImage(IMAGES.find((i) => i.value === e.target.value) ?? null)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsx={{ gap: 2 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{IMAGES.map((l, index) => (\r\n\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tvalue={l.value}\r\n\t\t\t\t\t\t\t\t\tcontrol={<Radio size='medium' />}\r\n\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\t\t\t\t\tvariant='h6'\r\n\t\t\t\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor: GetQRBgUrlsApi.data?.data.bg_urls[index]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? theme.palette.success.main\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: theme.palette.common.secondaryGreyText,\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => setOpenQRBgDialog({ label: l.label, value: String(index) })}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{l.label}\r\n\t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</RadioGroup>\r\n\t\t\t\t\t</FormControl>\r\n\t\t\t\t</Stack>\r\n\r\n\t\t\t\t<LoadingButton\r\n\t\t\t\t\tsize='large'\r\n\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\tsx={{\r\n\t\t\t\t\t\twidth: 209,\r\n\t\t\t\t\t\theight: 51,\r\n\t\t\t\t\t\tborderRadius: '8px',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdisabled={selectedButton === null || selectedImage === null}\r\n\t\t\t\t\tloading={isDownloading}\r\n\t\t\t\t\tonClick={OnDownloadClick}\r\n\t\t\t\t>\r\n\t\t\t\t\t<PoppinsTypography variant='subtitle1'>Download QR</PoppinsTypography>\r\n\t\t\t\t</LoadingButton>\r\n\t\t\t</Stack>\r\n\t\t\t<HandleQRBgImageDialog\r\n\t\t\t\timageUrl={GetQRBgUrlsApi.data?.data.bg_urls[Number(openQRBgDialog?.value)] ?? ''}\r\n\t\t\t\topenQRBgDialog={openQRBgDialog}\r\n\t\t\t\thandleClose={() => setOpenQRBgDialog(null)}\r\n\t\t\t\trefetch={() => void GetQRBgUrlsApi.refetch()}\r\n\t\t\t/>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nexport default memo(DownloadQrCode);\r\n\r\ninterface HandleQRBgImageProps {\r\n\topenQRBgDialog: Option | null;\r\n\timageUrl: string;\r\n\thandleClose?: () => void;\r\n\trefetch: () => void;\r\n}\r\n\r\nconst HandleQRBgImageDialog = (props: HandleQRBgImageProps) => {\r\n\tconst theme = useTheme();\r\n\tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n\tconst UpdateQRBgApi = useUpdateQRBgApi();\r\n\r\n\tconst onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tUpdateQRBgApi.mutateAsync({\r\n\t\t\trequest: { [`bg_url_${Number(props.openQRBgDialog?.value) + 1}`]: event.target.files },\r\n\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\ttitle: 'Success!',\r\n\t\t\t\t\tvariant: 'sucess',\r\n\t\t\t\t\tcontent: response.data?.message,\r\n\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t});\r\n\t\t\t\tprops.refetch();\r\n\t\t\t\tprops.handleClose?.();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\ttitle: 'Error!',\r\n\t\t\t\t\tvariant: 'error',\r\n\t\t\t\t\tcontent: error.response?.data?.message,\r\n\t\t\t\t\tonCancel: () => hideSnackbar(),\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\tonClose={props.handleClose}\r\n\t\t\topen={Boolean(props.openQRBgDialog)}\r\n\t\t\tmaxWidth='sm'\r\n\t\t\tsx={{ '.MuiPaper-root': { width: `100%` } }}\r\n\t\t>\r\n\t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\r\n\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n\t\t\t\t>\r\n\t\t\t\t\tQR Background {props.openQRBgDialog?.label}\r\n\t\t\t\t</PoppinsTypography>\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent\r\n\t\t\t\tsx={{ display: 'flex', alignItems: 'center', flexDirection: 'column', gap: 6, padding: 4 }}\r\n\t\t\t>\r\n\t\t\t\t{props.imageUrl ? (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\twidth={206}\r\n\t\t\t\t\t\theight={333}\r\n\t\t\t\t\t\tsrc={props.imageUrl}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\twidth={206}\r\n\t\t\t\t\t\theight={333}\r\n\t\t\t\t\t\tsx={{ backgroundColor: '#DFE3ED' }}\r\n\t\t\t\t\t\tjustifyContent={'center'}\r\n\t\t\t\t\t\talignItems={'center'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>No Image Found</PoppinsTypography>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t)}\r\n\t\t\t\t<Stack\r\n\t\t\t\t\tflexDirection={'row'}\r\n\t\t\t\t\tgap={2}\r\n\t\t\t\t\talignSelf={'self-end'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<LoadingButton\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\tsx={{ width: 245 }}\r\n\t\t\t\t\t\tonClick={props.handleClose}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='h5'\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t</LoadingButton>\r\n\r\n\t\t\t\t\t<label htmlFor={`upoload-qr-bg`}>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid={`upoload-qr-bg`}\r\n\t\t\t\t\t\t\tname={`upoload-qr-bg`}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\topacity: 0,\r\n\t\t\t\t\t\t\t\tposition: 'absolute',\r\n\t\t\t\t\t\t\t\twidth: 'inherit',\r\n\t\t\t\t\t\t\t\theight: 'inherit',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\t\t\tonClick={(event) => (event.currentTarget.value = '')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<LoadingButton\r\n\t\t\t\t\t\t\tcomponent='span'\r\n\t\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\t\tsize='large'\r\n\t\t\t\t\t\t\tsx={{ width: 245 }}\r\n\t\t\t\t\t\t\tloading={UpdateQRBgApi.isLoading}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<PoppinsTypography variant='h5'>\r\n\t\t\t\t\t\t\t\t{props.imageUrl ? 'Update Image' : 'Upload Image'}\r\n\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t</LoadingButton>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</Stack>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}