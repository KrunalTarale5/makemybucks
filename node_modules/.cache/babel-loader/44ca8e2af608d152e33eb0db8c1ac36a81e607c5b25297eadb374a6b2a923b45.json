{"ast":null,"code":"// import IconFinder from '@components/Icon';\n// import Pagination from '@components/Pagination';\n// import { useSnackbar } from '@components/Snackbar';\n// import Table, { ColumnDef } from '@components/Table';\n// import { PoppinsTypography } from '@components/Typography';\n// import Uploader from '@components/Uploader';\n// import {\n// \tuseGetSettlementUserResponseApi,\n// \tuploadCustomerDisbusmentExcelApi,\n// } from '@hooks/admin-settlement';\n// import { PageRequest, PaginationResponse, SortRequest } from '@interfaces/common';\n// import { LoadingButton } from '@mui/lab';\n// import {\n// \tButton,\n// \tDialog,\n// \tDialogContent,\n// \tDialogTitle,\n// \tLinearProgress,\n// \tStack,\n// \tuseTheme,\n// } from '@mui/material';\n// import { generateSerialNumber } from '@utils/common';\n// import { memo, useRef, useState, useEffect } from 'react';\n// import moment from 'moment';\n// import axios from 'axios';\n// const UserTab = () => {\n// \tconst theme = useTheme();\n// \tconst searchInputRef = useRef<HTMLInputElement | null>(null);\n// \tconst [openUploadDialog, setOpenUploadDialog] = useState(false);\n// \tconst [pageRequest, setPageRequest] = useState<PageRequest>({\n// \t\tpage: 1,\n// \t\tsize: 10,\n// \t});\n// \tconst [sortRequest, setSortRequest] = useState<SortRequest>({});\n// \tconst GetSettlementUserResponseApi = useGetSettlementUserResponseApi();\n// \tconst handlePage = (page: number) => {\n// \t\tsetPageRequest({ ...pageRequest, page });\n// \t};\n// \t// useEffect(() => {\n// \t// \twindow.location.reload();\n// \t// }, [openUploadDialog]);\n// \t//const rows: PaginationResponse<SettlementUserResponse>['transaction_data'] = [];\n// \tconst rows = GetSettlementUserResponseApi.data?.data.data.transaction_data ?? [];\n// \ttype Row = (typeof rows)[number];\n// \tconst columns: ColumnDef<Row>[] = [\n// \t\t{\n// \t\t\tfield: 'SL No',\n// \t\t\trenderHeader: () => `Date`,\n// \t\t\trenderCell: ({ row }) => moment(row.Date).utc().format('DD MMM YY'),\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t},\n// \t\t{\n// \t\t\tfield: 'action',\n// \t\t\trenderHeader: () => `Total Amount (â‚¹)`,\n// \t\t\trenderCell: ({ row }) => row.Total_amount,\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\tsortable: true,\n// \t\t},\n// \t\t{\n// \t\t\tfield: 'action',\n// \t\t\trenderHeader: () => `Number of users`,\n// \t\t\trenderCell: ({ row }) => row.Number_of_user,\n// \t\t\ttableCellProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\ttableHeaderProps: {\n// \t\t\t\tsx: {\n// \t\t\t\t\twidth: 500,\n// \t\t\t\t},\n// \t\t\t},\n// \t\t\tsortable: true,\n// \t\t},\n// \t];\n\n// \treturn (\n// \t\t<Stack\n// \t\t\tgap={2}\n// \t\t\tflexGrow={'inherit'}\n// \t\t>\n// \t\t\t<Stack alignSelf={'flex-end'}>\n// \t\t\t\t<Button\n// \t\t\t\t\tvariant='contained'\n// \t\t\t\t\tonClick={() => setOpenUploadDialog(true)}\n// \t\t\t\t\tsx={{ height: 40, width: 144 }}\n// \t\t\t\t>\n// \t\t\t\t\t<PoppinsTypography variant='caption'>Upload</PoppinsTypography>\n// \t\t\t\t</Button>\n// \t\t\t</Stack>\n\n// \t\t\t<Table\n// \t\t\t\trows={rows}\n// \t\t\t\tcolumns={columns as any}\n// \t\t\t\trowId={(row) => row.id as string}\n// \t\t\t\ttableProps={{ size: 'small', stickyHeader: false }}\n// \t\t\t\ttableRowProps={{ hover: true }}\n// \t\t\t\tloading={GetSettlementUserResponseApi.isLoading}\n// \t\t\t/>\n// \t\t\t{/* <Pagination\n// \t\t\t\tpage={pageRequest.page}\n// \t\t\t\tsize={(getSettlementUserResponseApi.data?.data.size as number) ?? 0}\n// \t\t\t\ttotalPages={(getSettlementUserResponseApi.data?.data.pagesTotal as number) ?? 0}\n// \t\t\t\tonPageChange={handlePage}\n// \t\t\t/> */}\n// \t\t\t<UploadExcelDialog\n// \t\t\t\topen={openUploadDialog}\n// \t\t\t\thandleClose={() => setOpenUploadDialog(false)}\n// \t\t\t/>\n// \t\t</Stack>\n// \t);\n// };\n\n// export default memo(UserTab);\n\n// interface UploadExcelDialogProps {\n// \topen: boolean;\n// \thandleClose?: () => void;\n// }\n\n// const UploadExcelDialog = memo((props: UploadExcelDialogProps) => {\n// \tconst theme = useTheme();\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\n// \tconst [file, setFile] = useState<FileList | null>(null);\n// \tconst [progress, setProgress] = useState<number>(0);\n// \tconst [isSucessful, setIsSucessful] = useState<boolean>(false);\n\n// \tconst onUploadClick = () => {\n// \t\taxios\n// \t\t\t.request({\n// \t\t\t\t...uploadCustomerDisbusmentExcelApi(file as FileList),\n// \t\t\t\tonUploadProgress: (progress: any) => {\n// \t\t\t\t\tconst { loaded, total } = progress;\n// \t\t\t\t\tconst percentageProgress = Math.floor((loaded / total) * 100);\n// \t\t\t\t\tsetProgress(percentageProgress);\n// \t\t\t\t},\n// \t\t\t})\n// \t\t\t.then((response) => {\n// \t\t\t\tsetProgress(0);\n// \t\t\t\tsetIsSucessful(true);\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Success!',\n// \t\t\t\t\tvariant: 'sucess',\n// \t\t\t\t\tcontent: response.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t})\n// \t\t\t.catch((error) => {\n// \t\t\t\tsetIsSucessful(false);\n// \t\t\t\tsetProgress(0);\n// \t\t\t\tshowSnackbar({\n// \t\t\t\t\ttitle: 'Error!',\n// \t\t\t\t\tvariant: 'error',\n// \t\t\t\t\tcontent: error.response?.data?.message,\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\n// \t\t\t\t});\n// \t\t\t});\n// \t};\n\n// \treturn (\n// \t\t<Dialog\n// \t\t\tonClose={props.handleClose}\n// \t\t\topen={props.open}\n// \t\t\tmaxWidth='md'\n// \t\t\tsx={{ '.MuiPaper-root': { minWidth: 507 } }}\n// \t\t>\n// \t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\n// \t\t\t\t<PoppinsTypography\n// \t\t\t\t\tfontSize={20}\n// \t\t\t\t\tfontWeight={600}\n// \t\t\t\t\ttextAlign={'center'}\n// \t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t>\n// \t\t\t\t\t{isSucessful\n// \t\t\t\t\t\t? 'Uploaded Successfully !'\n// \t\t\t\t\t\t: progress !== 0 && file !== null\n// \t\t\t\t\t\t  ? 'Uploading'\n// \t\t\t\t\t\t  : `Upload excel`}\n// \t\t\t\t</PoppinsTypography>\n// \t\t\t</DialogTitle>\n// \t\t\t<DialogContent\n// \t\t\t\tsx={{ display: 'flex', flexDirection: 'column', gap: 6, padding: 4, alignItems: 'center' }}\n// \t\t\t>\n// \t\t\t\t{file !== null && progress !== 0 ? (\n// \t\t\t\t\t<Stack\n// \t\t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t\t\tgap={1}\n// \t\t\t\t\t\talignItems={'center'}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\n// \t\t\t\t\t\t<PoppinsTypography>{file[0].name}</PoppinsTypography>\n// \t\t\t\t\t\t<LinearProgress\n// \t\t\t\t\t\t\tvariant='determinate'\n// \t\t\t\t\t\t\tvalue={progress}\n// \t\t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\t\tminWidth: 200,\n// \t\t\t\t\t\t\t\theight: 8,\n// \t\t\t\t\t\t\t\tbackgroundColor: '#DFE3ED',\n// \t\t\t\t\t\t\t\tborderRadius: `8px`,\n// \t\t\t\t\t\t\t\t'.MuiLinearProgress-bar': {\n// \t\t\t\t\t\t\t\t\tbackgroundColor: '#5DC5FF',\n// \t\t\t\t\t\t\t\t},\n// \t\t\t\t\t\t\t}}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t</Stack>\n// \t\t\t\t) : isSucessful ? (\n// \t\t\t\t\t<IconFinder\n// \t\t\t\t\t\ticonName='Checked'\n// \t\t\t\t\t\ticonProps={{ fill: theme.palette.success.main, height: 40, width: 40 }}\n// \t\t\t\t\t/>\n// \t\t\t\t) : (\n// \t\t\t\t\t<Uploader\n// \t\t\t\t\t\tfieldName='drag'\n// \t\t\t\t\t\tacceptFiles='.xlsx'\n// \t\t\t\t\t\tsx={{\n// \t\t\t\t\t\t\tplaceContent: 'flex-end',\n// \t\t\t\t\t\t\theight: 138,\n// \t\t\t\t\t\t\twidth: 359,\n// \t\t\t\t\t\t\tborderWidth: 1,\n// \t\t\t\t\t\t\tborderStyle: 'dashed',\n// \t\t\t\t\t\t\tborderColor: '#8A92A6',\n// \t\t\t\t\t\t\tborderRadius: `12px`,\n// \t\t\t\t\t\t\tjustifyContent: 'center',\n// \t\t\t\t\t\t\talignItems: 'center',\n// \t\t\t\t\t\t\tflexDirection: 'column',\n// \t\t\t\t\t\t}}\n// \t\t\t\t\t\tonChange={(e) => {\n// \t\t\t\t\t\t\tsetFile(e.target?.files as FileList);\n// \t\t\t\t\t\t}}\n// \t\t\t\t\t\tfile={''}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, paddingTop: 1 }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tDrag a file here\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, display: 'flex' }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tor\n// \t\t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\t\tvariant='subtitle2'\n// \t\t\t\t\t\t\t\tsx={{ color: '#18ACFF', textDecoration: 'underline', paddingX: 0.5 }}\n// \t\t\t\t\t\t\t>\n// \t\t\t\t\t\t\t\tbrowse\n// \t\t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t\t\ta file to upload\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t</Uploader>\n// \t\t\t\t)}\n// \t\t\t\t<Stack\n// \t\t\t\t\tgap={1}\n// \t\t\t\t\tflexDirection={'row'}\n// \t\t\t\t>\n// \t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\tvariant='text'\n// \t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\n// \t\t\t\t\t\tonClick={props.handleClose}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle1'\n// \t\t\t\t\t\t\tfontSize={20}\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\n// \t\t\t\t\t\t>\n// \t\t\t\t\t\t\tOk\n// \t\t\t\t\t\t</PoppinsTypography>\n// \t\t\t\t\t</LoadingButton>\n\n// \t\t\t\t\t<LoadingButton\n// \t\t\t\t\t\tvariant='contained'\n// \t\t\t\t\t\tsize='large'\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\n// \t\t\t\t\t\tonClick={onUploadClick}\n// \t\t\t\t\t\tdisabled={file === null || progress !== 0}\n// \t\t\t\t\t>\n// \t\t\t\t\t\t<PoppinsTypography\n// \t\t\t\t\t\t\tvariant='subtitle1'\n// \t\t\t\t\t\t\tfontSize={20}\n// \t\t\t\t\t\t>{`Upload File`}</PoppinsTypography>\n// \t\t\t\t\t</LoadingButton>\n// \t\t\t\t</Stack>\n// \t\t\t</DialogContent>\n// \t\t</Dialog>\n// \t);\n// });","map":{"version":3,"names":[],"sources":["D:/Krunal/makemybucks/src/views/admin/Settlement/UserTab.tsx"],"sourcesContent":["// import IconFinder from '@components/Icon';\r\n// import Pagination from '@components/Pagination';\r\n// import { useSnackbar } from '@components/Snackbar';\r\n// import Table, { ColumnDef } from '@components/Table';\r\n// import { PoppinsTypography } from '@components/Typography';\r\n// import Uploader from '@components/Uploader';\r\n// import {\r\n// \tuseGetSettlementUserResponseApi,\r\n// \tuploadCustomerDisbusmentExcelApi,\r\n// } from '@hooks/admin-settlement';\r\n// import { PageRequest, PaginationResponse, SortRequest } from '@interfaces/common';\r\n// import { LoadingButton } from '@mui/lab';\r\n// import {\r\n// \tButton,\r\n// \tDialog,\r\n// \tDialogContent,\r\n// \tDialogTitle,\r\n// \tLinearProgress,\r\n// \tStack,\r\n// \tuseTheme,\r\n// } from '@mui/material';\r\n// import { generateSerialNumber } from '@utils/common';\r\n// import { memo, useRef, useState, useEffect } from 'react';\r\n// import moment from 'moment';\r\n// import axios from 'axios';\r\n// const UserTab = () => {\r\n// \tconst theme = useTheme();\r\n// \tconst searchInputRef = useRef<HTMLInputElement | null>(null);\r\n// \tconst [openUploadDialog, setOpenUploadDialog] = useState(false);\r\n// \tconst [pageRequest, setPageRequest] = useState<PageRequest>({\r\n// \t\tpage: 1,\r\n// \t\tsize: 10,\r\n// \t});\r\n// \tconst [sortRequest, setSortRequest] = useState<SortRequest>({});\r\n// \tconst GetSettlementUserResponseApi = useGetSettlementUserResponseApi();\r\n// \tconst handlePage = (page: number) => {\r\n// \t\tsetPageRequest({ ...pageRequest, page });\r\n// \t};\r\n// \t// useEffect(() => {\r\n// \t// \twindow.location.reload();\r\n// \t// }, [openUploadDialog]);\r\n// \t//const rows: PaginationResponse<SettlementUserResponse>['transaction_data'] = [];\r\n// \tconst rows = GetSettlementUserResponseApi.data?.data.data.transaction_data ?? [];\r\n// \ttype Row = (typeof rows)[number];\r\n// \tconst columns: ColumnDef<Row>[] = [\r\n// \t\t{\r\n// \t\t\tfield: 'SL No',\r\n// \t\t\trenderHeader: () => `Date`,\r\n// \t\t\trenderCell: ({ row }) => moment(row.Date).utc().format('DD MMM YY'),\r\n// \t\t\ttableCellProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\ttableHeaderProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tfield: 'action',\r\n// \t\t\trenderHeader: () => `Total Amount (â‚¹)`,\r\n// \t\t\trenderCell: ({ row }) => row.Total_amount,\r\n// \t\t\ttableCellProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\ttableHeaderProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\tsortable: true,\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\tfield: 'action',\r\n// \t\t\trenderHeader: () => `Number of users`,\r\n// \t\t\trenderCell: ({ row }) => row.Number_of_user,\r\n// \t\t\ttableCellProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\ttableHeaderProps: {\r\n// \t\t\t\tsx: {\r\n// \t\t\t\t\twidth: 500,\r\n// \t\t\t\t},\r\n// \t\t\t},\r\n// \t\t\tsortable: true,\r\n// \t\t},\r\n// \t];\r\n\r\n// \treturn (\r\n// \t\t<Stack\r\n// \t\t\tgap={2}\r\n// \t\t\tflexGrow={'inherit'}\r\n// \t\t>\r\n// \t\t\t<Stack alignSelf={'flex-end'}>\r\n// \t\t\t\t<Button\r\n// \t\t\t\t\tvariant='contained'\r\n// \t\t\t\t\tonClick={() => setOpenUploadDialog(true)}\r\n// \t\t\t\t\tsx={{ height: 40, width: 144 }}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t<PoppinsTypography variant='caption'>Upload</PoppinsTypography>\r\n// \t\t\t\t</Button>\r\n// \t\t\t</Stack>\r\n\r\n// \t\t\t<Table\r\n// \t\t\t\trows={rows}\r\n// \t\t\t\tcolumns={columns as any}\r\n// \t\t\t\trowId={(row) => row.id as string}\r\n// \t\t\t\ttableProps={{ size: 'small', stickyHeader: false }}\r\n// \t\t\t\ttableRowProps={{ hover: true }}\r\n// \t\t\t\tloading={GetSettlementUserResponseApi.isLoading}\r\n// \t\t\t/>\r\n// \t\t\t{/* <Pagination\r\n// \t\t\t\tpage={pageRequest.page}\r\n// \t\t\t\tsize={(getSettlementUserResponseApi.data?.data.size as number) ?? 0}\r\n// \t\t\t\ttotalPages={(getSettlementUserResponseApi.data?.data.pagesTotal as number) ?? 0}\r\n// \t\t\t\tonPageChange={handlePage}\r\n// \t\t\t/> */}\r\n// \t\t\t<UploadExcelDialog\r\n// \t\t\t\topen={openUploadDialog}\r\n// \t\t\t\thandleClose={() => setOpenUploadDialog(false)}\r\n// \t\t\t/>\r\n// \t\t</Stack>\r\n// \t);\r\n// };\r\n\r\n// export default memo(UserTab);\r\n\r\n// interface UploadExcelDialogProps {\r\n// \topen: boolean;\r\n// \thandleClose?: () => void;\r\n// }\r\n\r\n// const UploadExcelDialog = memo((props: UploadExcelDialogProps) => {\r\n// \tconst theme = useTheme();\r\n// \tconst { showSnackbar, hideSnackbar } = useSnackbar();\r\n// \tconst [file, setFile] = useState<FileList | null>(null);\r\n// \tconst [progress, setProgress] = useState<number>(0);\r\n// \tconst [isSucessful, setIsSucessful] = useState<boolean>(false);\r\n\r\n// \tconst onUploadClick = () => {\r\n// \t\taxios\r\n// \t\t\t.request({\r\n// \t\t\t\t...uploadCustomerDisbusmentExcelApi(file as FileList),\r\n// \t\t\t\tonUploadProgress: (progress: any) => {\r\n// \t\t\t\t\tconst { loaded, total } = progress;\r\n// \t\t\t\t\tconst percentageProgress = Math.floor((loaded / total) * 100);\r\n// \t\t\t\t\tsetProgress(percentageProgress);\r\n// \t\t\t\t},\r\n// \t\t\t})\r\n// \t\t\t.then((response) => {\r\n// \t\t\t\tsetProgress(0);\r\n// \t\t\t\tsetIsSucessful(true);\r\n// \t\t\t\tshowSnackbar({\r\n// \t\t\t\t\ttitle: 'Success!',\r\n// \t\t\t\t\tvariant: 'sucess',\r\n// \t\t\t\t\tcontent: response.data?.message,\r\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\r\n// \t\t\t\t});\r\n// \t\t\t})\r\n// \t\t\t.catch((error) => {\r\n// \t\t\t\tsetIsSucessful(false);\r\n// \t\t\t\tsetProgress(0);\r\n// \t\t\t\tshowSnackbar({\r\n// \t\t\t\t\ttitle: 'Error!',\r\n// \t\t\t\t\tvariant: 'error',\r\n// \t\t\t\t\tcontent: error.response?.data?.message,\r\n// \t\t\t\t\tonCancel: () => hideSnackbar(),\r\n// \t\t\t\t});\r\n// \t\t\t});\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<Dialog\r\n// \t\t\tonClose={props.handleClose}\r\n// \t\t\topen={props.open}\r\n// \t\t\tmaxWidth='md'\r\n// \t\t\tsx={{ '.MuiPaper-root': { minWidth: 507 } }}\r\n// \t\t>\r\n// \t\t\t<DialogTitle sx={{ padding: 4, paddingBottom: 3 }}>\r\n// \t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\tfontSize={20}\r\n// \t\t\t\t\tfontWeight={600}\r\n// \t\t\t\t\ttextAlign={'center'}\r\n// \t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t{isSucessful\r\n// \t\t\t\t\t\t? 'Uploaded Successfully !'\r\n// \t\t\t\t\t\t: progress !== 0 && file !== null\r\n// \t\t\t\t\t\t  ? 'Uploading'\r\n// \t\t\t\t\t\t  : `Upload excel`}\r\n// \t\t\t\t</PoppinsTypography>\r\n// \t\t\t</DialogTitle>\r\n// \t\t\t<DialogContent\r\n// \t\t\t\tsx={{ display: 'flex', flexDirection: 'column', gap: 6, padding: 4, alignItems: 'center' }}\r\n// \t\t\t>\r\n// \t\t\t\t{file !== null && progress !== 0 ? (\r\n// \t\t\t\t\t<Stack\r\n// \t\t\t\t\t\tflexDirection={'row'}\r\n// \t\t\t\t\t\tgap={1}\r\n// \t\t\t\t\t\talignItems={'center'}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\r\n// \t\t\t\t\t\t<PoppinsTypography>{file[0].name}</PoppinsTypography>\r\n// \t\t\t\t\t\t<LinearProgress\r\n// \t\t\t\t\t\t\tvariant='determinate'\r\n// \t\t\t\t\t\t\tvalue={progress}\r\n// \t\t\t\t\t\t\tsx={{\r\n// \t\t\t\t\t\t\t\tminWidth: 200,\r\n// \t\t\t\t\t\t\t\theight: 8,\r\n// \t\t\t\t\t\t\t\tbackgroundColor: '#DFE3ED',\r\n// \t\t\t\t\t\t\t\tborderRadius: `8px`,\r\n// \t\t\t\t\t\t\t\t'.MuiLinearProgress-bar': {\r\n// \t\t\t\t\t\t\t\t\tbackgroundColor: '#5DC5FF',\r\n// \t\t\t\t\t\t\t\t},\r\n// \t\t\t\t\t\t\t}}\r\n// \t\t\t\t\t\t/>\r\n// \t\t\t\t\t</Stack>\r\n// \t\t\t\t) : isSucessful ? (\r\n// \t\t\t\t\t<IconFinder\r\n// \t\t\t\t\t\ticonName='Checked'\r\n// \t\t\t\t\t\ticonProps={{ fill: theme.palette.success.main, height: 40, width: 40 }}\r\n// \t\t\t\t\t/>\r\n// \t\t\t\t) : (\r\n// \t\t\t\t\t<Uploader\r\n// \t\t\t\t\t\tfieldName='drag'\r\n// \t\t\t\t\t\tacceptFiles='.xlsx'\r\n// \t\t\t\t\t\tsx={{\r\n// \t\t\t\t\t\t\tplaceContent: 'flex-end',\r\n// \t\t\t\t\t\t\theight: 138,\r\n// \t\t\t\t\t\t\twidth: 359,\r\n// \t\t\t\t\t\t\tborderWidth: 1,\r\n// \t\t\t\t\t\t\tborderStyle: 'dashed',\r\n// \t\t\t\t\t\t\tborderColor: '#8A92A6',\r\n// \t\t\t\t\t\t\tborderRadius: `12px`,\r\n// \t\t\t\t\t\t\tjustifyContent: 'center',\r\n// \t\t\t\t\t\t\talignItems: 'center',\r\n// \t\t\t\t\t\t\tflexDirection: 'column',\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t\tonChange={(e) => {\r\n// \t\t\t\t\t\t\tsetFile(e.target?.files as FileList);\r\n// \t\t\t\t\t\t}}\r\n// \t\t\t\t\t\tfile={''}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<IconFinder iconName='UploadFile' />\r\n// \t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\tvariant='subtitle2'\r\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, paddingTop: 1 }}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tDrag a file here\r\n// \t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\tvariant='subtitle2'\r\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText, display: 'flex' }}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tor\r\n// \t\t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\t\tvariant='subtitle2'\r\n// \t\t\t\t\t\t\t\tsx={{ color: '#18ACFF', textDecoration: 'underline', paddingX: 0.5 }}\r\n// \t\t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\t\tbrowse\r\n// \t\t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t\t\ta file to upload\r\n// \t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t</Uploader>\r\n// \t\t\t\t)}\r\n// \t\t\t\t<Stack\r\n// \t\t\t\t\tgap={1}\r\n// \t\t\t\t\tflexDirection={'row'}\r\n// \t\t\t\t>\r\n// \t\t\t\t\t<LoadingButton\r\n// \t\t\t\t\t\tvariant='text'\r\n// \t\t\t\t\t\tsize='large'\r\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\r\n// \t\t\t\t\t\tonClick={props.handleClose}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\tvariant='subtitle1'\r\n// \t\t\t\t\t\t\tfontSize={20}\r\n// \t\t\t\t\t\t\tsx={{ color: theme.palette.common.primaryGreyText }}\r\n// \t\t\t\t\t\t>\r\n// \t\t\t\t\t\t\tOk\r\n// \t\t\t\t\t\t</PoppinsTypography>\r\n// \t\t\t\t\t</LoadingButton>\r\n\r\n// \t\t\t\t\t<LoadingButton\r\n// \t\t\t\t\t\tvariant='contained'\r\n// \t\t\t\t\t\tsize='large'\r\n// \t\t\t\t\t\tsx={{ minWidth: 166, height: 46 }}\r\n// \t\t\t\t\t\tonClick={onUploadClick}\r\n// \t\t\t\t\t\tdisabled={file === null || progress !== 0}\r\n// \t\t\t\t\t>\r\n// \t\t\t\t\t\t<PoppinsTypography\r\n// \t\t\t\t\t\t\tvariant='subtitle1'\r\n// \t\t\t\t\t\t\tfontSize={20}\r\n// \t\t\t\t\t\t>{`Upload File`}</PoppinsTypography>\r\n// \t\t\t\t\t</LoadingButton>\r\n// \t\t\t\t</Stack>\r\n// \t\t\t</DialogContent>\r\n// \t\t</Dialog>\r\n// \t);\r\n// });\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}