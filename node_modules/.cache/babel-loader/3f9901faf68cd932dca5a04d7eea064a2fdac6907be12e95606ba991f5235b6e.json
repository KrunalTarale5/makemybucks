{"ast":null,"code":"var _jsxFileName = \"D:\\\\Krunal\\\\makemybucks\\\\src\\\\views\\\\admin\\\\sales-executive\\\\add\\\\AddressDetailsForm.tsx\",\n  _s = $RefreshSig$();\nimport InputField from '@components/InputField';\nimport { PoppinsTypography } from '@components/Typography';\nimport { AddSalesExecutiveContext, AddressDetailsFormFields, useGetStateApi, validateAddressDetailsFields, validateAddressDetailsForm } from '@hooks/admin-add-sales-executive';\nimport { Checkbox, FormControlLabel, Grid, Stack, useTheme } from '@mui/material';\nimport { memo, useContext, useState } from 'react';\nimport NavigateButtons from '../NavigateButtons';\nimport { validateIsNumber } from '@utils/validator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localAddIntialFormData = formData => ({\n  local_flat_no: formData.local_flat_no,\n  local_street_name: formData.local_street_name,\n  local_city: formData.local_city,\n  local_pin_code: formData.local_pin_code,\n  local_state: formData.local_state\n});\nconst localAddIntialFormError = {\n  local_flat_no: '',\n  local_street_name: '',\n  local_city: '',\n  local_pin_code: '',\n  local_state: ''\n};\nconst permanentAddIntialFormData = formData => ({\n  permanent_flat_no: formData.permanent_flat_no,\n  permanent_street_name: formData.local_street_name,\n  permanent_city: formData.permanent_city,\n  permanent_pin_code: formData.permanent_pin_code,\n  permanent_state: formData.permanent_state\n});\nconst permanaentAddIntialFormError = {\n  permanent_flat_no: '',\n  permanent_street_name: '',\n  permanent_city: '',\n  permanent_pin_code: '',\n  permanent_state: ''\n};\nconst AddressDetailsForm = () => {\n  _s();\n  const theme = useTheme();\n  const formContext = useContext(AddSalesExecutiveContext);\n  const GetStateApi = useGetStateApi();\n  const [localAddformData, setLocalAddFormData] = useState(localAddIntialFormData(formContext.formData));\n  const [permanentAddformData, setPermanentAddFormData] = useState(permanentAddIntialFormData(formContext.formData));\n  const [localAddformError, setLocalAddFormError] = useState(localAddIntialFormError);\n  const [permanentAddFormError, setPermanentAddFormError] = useState(permanaentAddIntialFormError);\n  const onLocalAddChange = (fieldName, value, fieldType) => {\n    let _formData = {};\n    if (fieldType === 'number') {\n      const isNumber = validateIsNumber(String(value));\n      _formData = {\n        ...localAddformData,\n        [fieldName]: isNumber ? value : localAddformData[fieldName]\n      };\n    } else {\n      _formData = {\n        ...localAddformData,\n        [fieldName]: value\n      };\n    }\n    setLocalAddFormData(_formData);\n    setLocalAddFormError({\n      ...localAddformError,\n      [fieldName]: validateAddressDetailsFields(fieldName, _formData)\n    });\n  };\n  const onPermanentAddChange = (fieldName, value, fieldType) => {\n    let _formData = {};\n    if (fieldType === 'number') {\n      const isNumber = validateIsNumber(String(value));\n      _formData = {\n        ...permanentAddformData,\n        [fieldName]: isNumber ? value : permanentAddformData[fieldName]\n      };\n    } else {\n      _formData = {\n        ...permanentAddformData,\n        [fieldName]: value\n      };\n    }\n    setPermanentAddFormData(_formData);\n    setPermanentAddFormError({\n      ...permanentAddFormError,\n      [fieldName]: validateAddressDetailsFields(fieldName, _formData)\n    });\n  };\n  const handleNextClick = () => {\n    const validatation = validateAddressDetailsForm({\n      ...localAddformData,\n      ...permanentAddformData\n    });\n    if (validatation.hasError) {\n      setLocalAddFormError(validatation.errors);\n      setPermanentAddFormError(validatation.errors);\n      return;\n    }\n    formContext.setFormData({\n      ...formContext.formData,\n      ...localAddformData,\n      ...permanentAddformData\n    });\n    formContext.setActiveStep(formContext.activeStep + 1);\n  };\n  const handlePreviousClick = () => {\n    formContext.setActiveStep(formContext.activeStep - 1);\n  };\n  const onSameAsClick = e => {\n    const data = {\n      permanent_city: localAddformData.local_city,\n      permanent_flat_no: localAddformData.local_flat_no,\n      permanent_pin_code: localAddformData.local_pin_code,\n      permanent_state: localAddformData.local_state,\n      permanent_street_name: localAddformData.local_street_name\n    };\n    setPermanentAddFormData(e.target.checked ? {\n      permanent_city: localAddformData.local_city,\n      permanent_flat_no: localAddformData.local_flat_no,\n      permanent_pin_code: localAddformData.local_pin_code,\n      permanent_state: localAddformData.local_state,\n      permanent_street_name: localAddformData.local_street_name\n    } : {});\n    if (e.target.checked) {\n      const errors = permanentAddFormError;\n      Object.keys(errors).forEach(fieldName => {\n        errors[fieldName] = validateAddressDetailsFields(fieldName, {\n          ...permanentAddformData,\n          ...data\n        });\n      });\n      setPermanentAddFormError({\n        ...permanentAddFormError,\n        ...errors\n      });\n    }\n  };\n  const getOptions = fieldName => {\n    var _GetStateApi$data;\n    switch (fieldName) {\n      case 'permanent_state':\n      case 'local_state':\n        return (_GetStateApi$data = GetStateApi.data) === null || _GetStateApi$data === void 0 ? void 0 : _GetStateApi$data.data.state_data.map(r => ({\n          label: r.state_name,\n          value: r.id\n        }));\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 6,\n    alignItems: 'flex-start',\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      width: `100%`,\n      flexDirection: 'row',\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        flexBasis: `50%`,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: '466px !important'\n          },\n          gap: 3,\n          children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"body1\",\n            fontWeight: 600,\n            textTransform: 'uppercase',\n            sx: {\n              color: theme.palette.common.secondaryGreyText\n            },\n            children: \"Local Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n            var _ref;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return (fieldName === 'local_flat_no' || fieldName === 'local_street_name') && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref = localAddformData[fieldName]) !== null && _ref !== void 0 ? _ref : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                autoComplete: 'off',\n                error: Boolean(localAddformError[fieldName]),\n                helperText: localAddformError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onLocalAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 10\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              display: 'inline-grid',\n              gridTemplateColumns: `1.5fr 1fr`,\n              rowGap: 3,\n              columnGap: 1,\n              children: Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n                var _ref2;\n                const fieldName = v[0];\n                const fieldProps = v[1];\n                return (fieldName === 'local_city' || fieldName === 'local_pin_code') && /*#__PURE__*/_jsxDEV(InputField, {\n                  fieldName: fieldName,\n                  value: (_ref2 = localAddformData[fieldName]) !== null && _ref2 !== void 0 ? _ref2 : '',\n                  fieldProps: {\n                    ...fieldProps,\n                    color: 'secondary',\n                    fullWidth: true,\n                    sx: {\n                      gap: 0,\n                      '.MuiTypography-subtitle1': {\n                        fontFamily: 'Poppins',\n                        fontSize: `14px`\n                      }\n                    },\n                    autoComplete: 'off',\n                    error: Boolean(localAddformError[fieldName]),\n                    helperText: localAddformError[fieldName]\n                  },\n                  fieldType: fieldProps.fieldType,\n                  onChange: onLocalAddChange\n                }, fieldName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 12\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.localAddress).map(v => {\n            var _ref3;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return fieldName === 'local_state' && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref3 = localAddformData[fieldName]) !== null && _ref3 !== void 0 ? _ref3 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(localAddformError[fieldName]),\n                helperText: localAddformError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onLocalAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 10\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        flexBasis: `50%`,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: '466px !important'\n          },\n          gap: 3,\n          children: [/*#__PURE__*/_jsxDEV(PoppinsTypography, {\n            variant: \"body1\",\n            fontWeight: 600,\n            textTransform: 'uppercase',\n            sx: {\n              color: theme.palette.common.secondaryGreyText\n            },\n            children: \"Permanent Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n            var _ref4;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return (fieldName === 'permanent_flat_no' || fieldName === 'permanent_street_name') && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref4 = permanentAddformData[fieldName]) !== null && _ref4 !== void 0 ? _ref4 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                autoComplete: 'off',\n                error: Boolean(permanentAddFormError[fieldName]),\n                helperText: permanentAddFormError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onPermanentAddChange\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 10\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              display: 'inline-grid',\n              gridTemplateColumns: `1.5fr 1fr`,\n              rowGap: 3,\n              columnGap: 1,\n              children: Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n                var _ref5;\n                const fieldName = v[0];\n                const fieldProps = v[1];\n                return (fieldName === 'permanent_city' || fieldName === 'permanent_pin_code') && /*#__PURE__*/_jsxDEV(InputField, {\n                  fieldName: fieldName,\n                  value: (_ref5 = permanentAddformData[fieldName]) !== null && _ref5 !== void 0 ? _ref5 : '',\n                  fieldProps: {\n                    ...fieldProps,\n                    color: 'secondary',\n                    fullWidth: true,\n                    sx: {\n                      gap: 0,\n                      '.MuiTypography-subtitle1': {\n                        fontFamily: 'Poppins',\n                        fontSize: `14px`\n                      }\n                    },\n                    autoComplete: 'off',\n                    error: Boolean(permanentAddFormError[fieldName]),\n                    helperText: permanentAddFormError[fieldName]\n                  },\n                  fieldType: fieldProps.fieldType,\n                  onChange: onPermanentAddChange\n                }, fieldName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 12\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 7\n          }, this), Object.entries(AddressDetailsFormFields.permanentAddress).map(v => {\n            var _ref6;\n            const fieldName = v[0];\n            const fieldProps = v[1];\n            return fieldName === 'permanent_state' && /*#__PURE__*/_jsxDEV(InputField, {\n              fieldName: fieldName,\n              value: (_ref6 = permanentAddformData[fieldName]) !== null && _ref6 !== void 0 ? _ref6 : '',\n              fieldProps: {\n                ...fieldProps,\n                color: 'secondary',\n                fullWidth: true,\n                sx: {\n                  gap: 0,\n                  '.MuiTypography-subtitle1': {\n                    fontFamily: 'Poppins',\n                    fontSize: `14px`\n                  }\n                },\n                options: getOptions(fieldName),\n                autoComplete: 'off',\n                error: Boolean(permanentAddFormError[fieldName]),\n                helperText: permanentAddFormError[fieldName]\n              },\n              fieldType: fieldProps.fieldType,\n              onChange: onPermanentAddChange,\n              addons: fieldName === 'permanent_state' && /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  color: \"primary\",\n                  size: \"small\",\n                  onChange: onSameAsClick\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 15\n                }, this),\n                label: /*#__PURE__*/_jsxDEV(PoppinsTypography, {\n                  variant: \"subtitle1\",\n                  children: \"Same as Local Address\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 13\n              }, this)\n            }, fieldName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 10\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(NavigateButtons, {\n      onNextClick: handleNextClick,\n      onPreviousClick: handlePreviousClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 3\n  }, this);\n};\n_s(AddressDetailsForm, \"5XeIIUViN3TBWY5ExM4lX7wOpXw=\", false, function () {\n  return [useTheme, useGetStateApi];\n});\n_c = AddressDetailsForm;\nexport default _c2 = /*#__PURE__*/memo(AddressDetailsForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"AddressDetailsForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["InputField","PoppinsTypography","AddSalesExecutiveContext","AddressDetailsFormFields","useGetStateApi","validateAddressDetailsFields","validateAddressDetailsForm","Checkbox","FormControlLabel","Grid","Stack","useTheme","memo","useContext","useState","NavigateButtons","validateIsNumber","jsxDEV","_jsxDEV","localAddIntialFormData","formData","local_flat_no","local_street_name","local_city","local_pin_code","local_state","localAddIntialFormError","permanentAddIntialFormData","permanent_flat_no","permanent_street_name","permanent_city","permanent_pin_code","permanent_state","permanaentAddIntialFormError","AddressDetailsForm","_s","theme","formContext","GetStateApi","localAddformData","setLocalAddFormData","permanentAddformData","setPermanentAddFormData","localAddformError","setLocalAddFormError","permanentAddFormError","setPermanentAddFormError","onLocalAddChange","fieldName","value","fieldType","_formData","isNumber","String","onPermanentAddChange","handleNextClick","validatation","hasError","errors","setFormData","setActiveStep","activeStep","handlePreviousClick","onSameAsClick","e","data","target","checked","Object","keys","forEach","getOptions","_GetStateApi$data","state_data","map","r","label","state_name","id","gap","alignItems","children","width","flexDirection","flexBasis","sx","variant","fontWeight","textTransform","color","palette","common","secondaryGreyText","fileName","_jsxFileName","lineNumber","columnNumber","entries","localAddress","v","_ref","fieldProps","fullWidth","fontFamily","fontSize","autoComplete","error","Boolean","helperText","onChange","container","spacing","item","display","gridTemplateColumns","rowGap","columnGap","_ref2","_ref3","options","permanentAddress","_ref4","_ref5","_ref6","addons","control","size","onNextClick","onPreviousClick","_c","_c2","$RefreshReg$"],"sources":["D:/Krunal/makemybucks/src/views/admin/sales-executive/add/AddressDetailsForm.tsx"],"sourcesContent":["import InputField, { InputFieldProps, InputFieldValue } from '@components/InputField';\r\nimport { PoppinsTypography } from '@components/Typography';\r\nimport {\r\n\tAddSalesExecutiveContext,\r\n\tAddSalesExecutiveRequest,\r\n\tAddressDetailsFormFields,\r\n\tAddressDetailsFormRequest,\r\n\tAddressDetailsFormType,\r\n\tuseGetStateApi,\r\n\tvalidateAddressDetailsFields,\r\n\tvalidateAddressDetailsForm,\r\n} from '@hooks/admin-add-sales-executive';\r\nimport { FormErrorMessage, Option } from '@interfaces/common';\r\nimport { Checkbox, FormControlLabel, Grid, Stack, useTheme } from '@mui/material';\r\nimport { memo, useContext, useState } from 'react';\r\nimport NavigateButtons from '../NavigateButtons';\r\nimport { validateIsNumber } from '@utils/validator';\r\n\r\nconst localAddIntialFormData = (\r\n\tformData: AddSalesExecutiveRequest\r\n): AddressDetailsFormRequest['localAddress'] => ({\r\n\tlocal_flat_no: formData.local_flat_no,\r\n\tlocal_street_name: formData.local_street_name,\r\n\tlocal_city: formData.local_city,\r\n\tlocal_pin_code: formData.local_pin_code,\r\n\tlocal_state: formData.local_state as Option,\r\n});\r\n\r\nconst localAddIntialFormError: FormErrorMessage<AddressDetailsFormRequest['localAddress']> = {\r\n\tlocal_flat_no: '',\r\n\tlocal_street_name: '',\r\n\tlocal_city: '',\r\n\tlocal_pin_code: '',\r\n\tlocal_state: '',\r\n};\r\n\r\nconst permanentAddIntialFormData = (\r\n\tformData: AddSalesExecutiveRequest\r\n): AddressDetailsFormRequest['permanentAddress'] => ({\r\n\tpermanent_flat_no: formData.permanent_flat_no,\r\n\tpermanent_street_name: formData.local_street_name,\r\n\tpermanent_city: formData.permanent_city,\r\n\tpermanent_pin_code: formData.permanent_pin_code,\r\n\tpermanent_state: formData.permanent_state as Option,\r\n});\r\n\r\nconst permanaentAddIntialFormError: FormErrorMessage<\r\n\tAddressDetailsFormRequest['permanentAddress']\r\n> = {\r\n\tpermanent_flat_no: '',\r\n\tpermanent_street_name: '',\r\n\tpermanent_city: '',\r\n\tpermanent_pin_code: '',\r\n\tpermanent_state: '',\r\n};\r\n\r\nconst AddressDetailsForm = () => {\r\n\tconst theme = useTheme();\r\n\tconst formContext = useContext(AddSalesExecutiveContext);\r\n\tconst GetStateApi = useGetStateApi();\r\n\r\n\tconst [localAddformData, setLocalAddFormData] = useState(\r\n\t\tlocalAddIntialFormData(formContext.formData)\r\n\t);\r\n\tconst [permanentAddformData, setPermanentAddFormData] = useState(\r\n\t\tpermanentAddIntialFormData(formContext.formData)\r\n\t);\r\n\tconst [localAddformError, setLocalAddFormError] = useState(localAddIntialFormError);\r\n\tconst [permanentAddFormError, setPermanentAddFormError] = useState(permanaentAddIntialFormError);\r\n\r\n\tconst onLocalAddChange = (\r\n\t\tfieldName: string,\r\n\t\tvalue: InputFieldValue,\r\n\t\tfieldType: InputFieldProps['fieldType']\r\n\t) => {\r\n\t\tlet _formData: AddressDetailsFormRequest['localAddress'] =\r\n\t\t\t{} as AddressDetailsFormRequest['localAddress'];\r\n\t\tif (fieldType === 'number') {\r\n\t\t\tconst isNumber = validateIsNumber(String(value));\r\n\t\t\t_formData = {\r\n\t\t\t\t...localAddformData,\r\n\t\t\t\t[fieldName]: isNumber\r\n\t\t\t\t\t? value\r\n\t\t\t\t\t: localAddformData[fieldName as keyof AddressDetailsFormRequest['localAddress']],\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_formData = { ...localAddformData, [fieldName]: value };\r\n\t\t}\r\n\t\tsetLocalAddFormData(_formData);\r\n\t\tsetLocalAddFormError({\r\n\t\t\t...localAddformError,\r\n\t\t\t[fieldName]: validateAddressDetailsFields(\r\n\t\t\t\tfieldName as keyof AddressDetailsFormType,\r\n\t\t\t\t_formData\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\r\n\tconst onPermanentAddChange = (\r\n\t\tfieldName: string,\r\n\t\tvalue: InputFieldValue,\r\n\t\tfieldType: InputFieldProps['fieldType']\r\n\t) => {\r\n\t\tlet _formData: AddressDetailsFormRequest['permanentAddress'] =\r\n\t\t\t{} as AddressDetailsFormRequest['permanentAddress'];\r\n\t\tif (fieldType === 'number') {\r\n\t\t\tconst isNumber = validateIsNumber(String(value));\r\n\t\t\t_formData = {\r\n\t\t\t\t...permanentAddformData,\r\n\t\t\t\t[fieldName]: isNumber\r\n\t\t\t\t\t? value\r\n\t\t\t\t\t: permanentAddformData[fieldName as keyof AddressDetailsFormRequest['permanentAddress']],\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\t_formData = { ...permanentAddformData, [fieldName]: value };\r\n\t\t}\r\n\t\tsetPermanentAddFormData(_formData);\r\n\t\tsetPermanentAddFormError({\r\n\t\t\t...permanentAddFormError,\r\n\t\t\t[fieldName]: validateAddressDetailsFields(\r\n\t\t\t\tfieldName as keyof AddressDetailsFormType,\r\n\t\t\t\t_formData\r\n\t\t\t),\r\n\t\t});\r\n\t};\r\n\tconst handleNextClick = () => {\r\n\t\tconst validatation = validateAddressDetailsForm({\r\n\t\t\t...localAddformData,\r\n\t\t\t...permanentAddformData,\r\n\t\t});\r\n\t\tif (validatation.hasError) {\r\n\t\t\tsetLocalAddFormError(\r\n\t\t\t\tvalidatation.errors as FormErrorMessage<AddressDetailsFormRequest['localAddress']>\r\n\t\t\t);\r\n\t\t\tsetPermanentAddFormError(\r\n\t\t\t\tvalidatation.errors as FormErrorMessage<AddressDetailsFormRequest['permanentAddress']>\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tformContext.setFormData({\r\n\t\t\t...formContext.formData,\r\n\t\t\t...localAddformData,\r\n\t\t\t...permanentAddformData,\r\n\t\t});\r\n\t\tformContext.setActiveStep(formContext.activeStep + 1);\r\n\t};\r\n\r\n\tconst handlePreviousClick = () => {\r\n\t\tformContext.setActiveStep(formContext.activeStep - 1);\r\n\t};\r\n\r\n\tconst onSameAsClick = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst data = {\r\n\t\t\tpermanent_city: localAddformData.local_city,\r\n\t\t\tpermanent_flat_no: localAddformData.local_flat_no,\r\n\t\t\tpermanent_pin_code: localAddformData.local_pin_code,\r\n\t\t\tpermanent_state: localAddformData.local_state,\r\n\t\t\tpermanent_street_name: localAddformData.local_street_name,\r\n\t\t};\r\n\t\tsetPermanentAddFormData(\r\n\t\t\te.target.checked\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tpermanent_city: localAddformData.local_city,\r\n\t\t\t\t\t\tpermanent_flat_no: localAddformData.local_flat_no,\r\n\t\t\t\t\t\tpermanent_pin_code: localAddformData.local_pin_code,\r\n\t\t\t\t\t\tpermanent_state: localAddformData.local_state,\r\n\t\t\t\t\t\tpermanent_street_name: localAddformData.local_street_name,\r\n\t\t\t\t  }\r\n\t\t\t\t: ({} as AddressDetailsFormRequest['permanentAddress'])\r\n\t\t);\r\n\t\tif (e.target.checked) {\r\n\t\t\tconst errors: FormErrorMessage<AddressDetailsFormRequest['permanentAddress']> =\r\n\t\t\t\tpermanentAddFormError;\r\n\r\n\t\t\tObject.keys(errors).forEach((fieldName) => {\r\n\t\t\t\terrors[fieldName as keyof FormErrorMessage<AddressDetailsFormRequest['permanentAddress']>] =\r\n\t\t\t\t\tvalidateAddressDetailsFields(fieldName as keyof AddressDetailsFormType, {\r\n\t\t\t\t\t\t...permanentAddformData,\r\n\t\t\t\t\t\t...data,\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tsetPermanentAddFormError({\r\n\t\t\t\t...permanentAddFormError,\r\n\t\t\t\t...errors,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst getOptions = (\r\n\t\tfieldName:\r\n\t\t\t| keyof AddressDetailsFormRequest['permanentAddress']\r\n\t\t\t| keyof AddressDetailsFormRequest['localAddress']\r\n\t): Option[] | undefined => {\r\n\t\tswitch (fieldName) {\r\n\t\t\tcase 'permanent_state':\r\n\t\t\tcase 'local_state':\r\n\t\t\t\treturn GetStateApi.data?.data.state_data.map((r) => ({\r\n\t\t\t\t\tlabel: r.state_name,\r\n\t\t\t\t\tvalue: r.id,\r\n\t\t\t\t}));\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Stack\r\n\t\t\tgap={6}\r\n\t\t\talignItems={'flex-start'}\r\n\t\t>\r\n\t\t\t<Stack\r\n\t\t\t\twidth={`100%`}\r\n\t\t\t\tflexDirection={'row'}\r\n\t\t\t>\r\n\t\t\t\t<Stack flexBasis={`50%`}>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tsx={{ width: '466px !important' }}\r\n\t\t\t\t\t\tgap={3}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\ttextTransform={'uppercase'}\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLocal Address\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t(fieldName === 'local_flat_no' || fieldName === 'local_street_name') && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tspacing={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tdisplay={'inline-grid'}\r\n\t\t\t\t\t\t\t\tgridTemplateColumns={`1.5fr 1fr`}\r\n\t\t\t\t\t\t\t\trowGap={3}\r\n\t\t\t\t\t\t\t\tcolumnGap={1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t(fieldName === 'local_city' || fieldName === 'local_pin_code') && (\r\n\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.localAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['localAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['localAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tfieldName === 'local_state' && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(localAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(localAddformError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: localAddformError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onLocalAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t\t<Stack flexBasis={`50%`}>\r\n\t\t\t\t\t<Stack\r\n\t\t\t\t\t\tsx={{ width: '466px !important' }}\r\n\t\t\t\t\t\tgap={3}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<PoppinsTypography\r\n\t\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\ttextTransform={'uppercase'}\r\n\t\t\t\t\t\t\tsx={{ color: theme.palette.common.secondaryGreyText }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tPermanent Address\r\n\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t(fieldName === 'permanent_flat_no' || fieldName === 'permanent_street_name') && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onPermanentAddChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tspacing={4}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\titem\r\n\t\t\t\t\t\t\t\tdisplay={'inline-grid'}\r\n\t\t\t\t\t\t\t\tgridTemplateColumns={`1.5fr 1fr`}\r\n\t\t\t\t\t\t\t\trowGap={3}\r\n\t\t\t\t\t\t\t\tcolumnGap={1}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t(fieldName === 'permanent_city' || fieldName === 'permanent_pin_code') && (\r\n\t\t\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onPermanentAddChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{Object.entries(AddressDetailsFormFields.permanentAddress).map((v) => {\r\n\t\t\t\t\t\t\tconst fieldName: keyof AddressDetailsFormFields['permanentAddress'] =\r\n\t\t\t\t\t\t\t\tv[0] as keyof AddressDetailsFormFields['permanentAddress'];\r\n\t\t\t\t\t\t\tconst fieldProps = v[1];\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\tfieldName === 'permanent_state' && (\r\n\t\t\t\t\t\t\t\t\t<InputField\r\n\t\t\t\t\t\t\t\t\t\tfieldName={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tvalue={(permanentAddformData[fieldName] as InputFieldValue) ?? ''}\r\n\t\t\t\t\t\t\t\t\t\tkey={fieldName}\r\n\t\t\t\t\t\t\t\t\t\tfieldProps={{\r\n\t\t\t\t\t\t\t\t\t\t\t...fieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: 'secondary',\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\t\t\t\tsx: {\r\n\t\t\t\t\t\t\t\t\t\t\t\tgap: 0,\r\n\t\t\t\t\t\t\t\t\t\t\t\t'.MuiTypography-subtitle1': {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontFamily: 'Poppins',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: `14px`,\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\toptions: getOptions(fieldName),\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete: 'off',\r\n\t\t\t\t\t\t\t\t\t\t\terror: Boolean(permanentAddFormError[fieldName]),\r\n\t\t\t\t\t\t\t\t\t\t\thelperText: permanentAddFormError[fieldName],\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\tfieldType={fieldProps.fieldType}\r\n\t\t\t\t\t\t\t\t\t\tonChange={onPermanentAddChange}\r\n\t\t\t\t\t\t\t\t\t\taddons={\r\n\t\t\t\t\t\t\t\t\t\t\tfieldName === 'permanent_state' && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onSameAsClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<PoppinsTypography variant='subtitle1'>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSame as Local Address\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</PoppinsTypography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</Stack>\r\n\t\t\t</Stack>\r\n\r\n\t\t\t<NavigateButtons\r\n\t\t\t\tonNextClick={handleNextClick}\r\n\t\t\t\tonPreviousClick={handlePreviousClick}\r\n\t\t\t/>\r\n\t\t</Stack>\r\n\t);\r\n};\r\n\r\nexport default memo(AddressDetailsForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}