{"ast":null,"code":"import{memo,useState}from'react';import{Divider,Stack,useTheme}from'@mui/material';import IconFinder from'@components/Icon';import InputField from'@components/InputField';import{FiraSansTypography,PoppinsTypography}from'@components/Typography';import{LoginFormFields,useSendOTPApi,validateLoginFields,validateLoginForm,useVerifyOTPApi}from'@hooks/user-app-login';import{useNavigate,useSearchParams}from'react-router-dom';import UserAppWrapper from'@components/UserAppWrapper';import{useAlertDialog}from'@components/AlertDialog';import{validateIsMobileNumber}from'@utils/validator';import{useDispatch}from'react-redux';import{setToken}from'_store/actions/ui-actions';import OTPField from'@components/OTPField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const intialFormData={phone_no:''};const intialFormError={phone_no:''};const OTPFormData={};const Login=()=>{const theme=useTheme();const navigate=useNavigate();const dispatch=useDispatch();const{showAlertDialog,hideAlertDialog}=useAlertDialog();const[searchParams]=useSearchParams();const[formData,setFormData]=useState(intialFormData);const[formError,setFormError]=useState(intialFormError);const[otp,setOtp]=useState(OTPFormData);const[showOtp,setShowOtp]=useState(false);const SendOTPApi=useSendOTPApi();const ResendOTPApi=useSendOTPApi();const VerifyOTPApi=useVerifyOTPApi();const onChange=(fieldName,value,fieldType)=>{let _formData={...formData,[fieldName]:value};if(fieldType==='mobile-number'){const isNumber=validateIsMobileNumber(String(value));_formData={...formData,[fieldName]:isNumber?value:formData[fieldName]};}else{_formData={...formData,[fieldName]:value};}setFormData(_formData);setFormError({...formError,[fieldName]:validateLoginFields(fieldName,_formData)});};const handleSendOTP=()=>{const validatation=validateLoginForm(formData);if(validatation.hasError){setFormError(validatation.errors);return;}void SendOTPApi.mutateAsync({request:formData}).then(response=>{var _response$data;setShowOtp(true);showAlertDialog({title:(_response$data=response.data)===null||_response$data===void 0?void 0:_response$data.message,buttons:[{children:'ok',variant:'outlined',callback:()=>{hideAlertDialog();}}]});}).catch(()=>{setShowOtp(false);setOtp(OTPFormData);showAlertDialog({title:'something went wrong',buttons:[{children:'ok',variant:'outlined',callback:()=>{hideAlertDialog();}}]});});};const handleResendOTP=()=>{void ResendOTPApi.mutateAsync({request:formData}).then(response=>{var _response$data2;showAlertDialog({title:(_response$data2=response.data)===null||_response$data2===void 0?void 0:_response$data2.message,buttons:[{children:'ok',variant:'outlined',callback:()=>{hideAlertDialog();}}]});}).catch(()=>{showAlertDialog({title:'something went wrong',buttons:[{children:'ok',variant:'outlined',callback:()=>{hideAlertDialog();}}]});});};const handleVerifyOTP=()=>{VerifyOTPApi.mutateAsync({request:{otp:Object.values(otp).join(''),phone_no:formData.phone_no}}).then(response=>{dispatch(setToken(response.data.access_token));navigate(\"/payments/pay?key=\".concat(searchParams===null||searchParams===void 0?void 0:searchParams.get('key')));}).catch(error=>{var _error$response,_error$response$data;setShowOtp(false);setOtp(OTPFormData);showAlertDialog({title:error===null||error===void 0?void 0:(_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message,buttons:[{children:'ok',variant:'outlined',callback:()=>{hideAlertDialog();}}]});});};const handleKeyDown=event=>{if(event.key==='Enter'){handleSendOTP();}};return/*#__PURE__*/_jsx(UserAppWrapper,{controlButtonProps:{content:showOtp?\"Verify OTP\":\"Proceed to Verify\",onClick:showOtp?handleVerifyOTP:handleSendOTP,loading:SendOTPApi.isLoading||VerifyOTPApi.isLoading},handleBack:()=>setShowOtp(false),heading:/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"h6\",children:\"Back\"}),children:/*#__PURE__*/_jsx(_Fragment,{children:showOtp?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Stack,{gap:5,children:[/*#__PURE__*/_jsxs(Stack,{children:[/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"h4\",fontWeight:600,sx:{color:theme.palette.common.white},children:\"Verify OTP\"}),/*#__PURE__*/_jsxs(FiraSansTypography,{variant:\"subtitle2\",sx:{color:theme.palette.common.primaryGreyText},display:'flex',gap:1,children:[\"OTP Sent to Number\",/*#__PURE__*/_jsxs(FiraSansTypography,{variant:\"subtitle2\",fontWeight:600,sx:{color:theme.palette.common.white},children:[\"+91 \",formData.phone_no]})]})]}),/*#__PURE__*/_jsx(Stack,{gap:1,flexDirection:'row',alignSelf:'center',children:/*#__PURE__*/_jsx(OTPField,{otp:otp,setOtp:setOtp,onEnter:handleVerifyOTP})})]}),/*#__PURE__*/_jsxs(PoppinsTypography,{variant:\"subtitle2\",display:'inline-flex',gap:1,sx:{color:theme.palette.common.primaryGreyText,paddingTop:\"20px\"},children:[\"Didn\\u2019t receive OTP? \",/*#__PURE__*/_jsx(PoppinsTypography,{variant:\"subtitle2\",sx:{color:theme.palette.primary.main},onClick:handleResendOTP,children:\" Re-Send Agian\"})]})]}):/*#__PURE__*/_jsxs(Stack,{width:\"100%\",justifyContent:'space-between',paddingTop:\"100px\",flexGrow:1,children:[/*#__PURE__*/_jsxs(Stack,{gap:5,children:[/*#__PURE__*/_jsxs(Stack,{gap:1,children:[/*#__PURE__*/_jsx(IconFinder,{iconName:\"UserAppLogo\",iconProps:{width:40,height:40}}),/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"h4\",fontSize:\"32px\",fontWeight:600,sx:{color:theme.palette.common.white},children:\"Login to\"}),/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"h4\",fontSize:\"32px\",fontWeight:600,sx:{color:theme.palette.common.white},children:\"makemybucks\"})]}),/*#__PURE__*/_jsx(Stack,{gap:2,width:\"100%\",children:Object.entries(LoginFormFields).map(v=>{var _ref;const fieldName=v[0];const fieldProps=v[1];return/*#__PURE__*/_jsx(InputField,{fieldName:fieldName,value:(_ref=formData[fieldName])!==null&&_ref!==void 0?_ref:'',fieldProps:{...fieldProps,color:'primary',fullWidth:true,sx:{'.MuiTypography-subtitle1':{color:theme.palette.common.primaryGreyText,fontFamily:'Fira Sans'},'& .MuiOutlinedInput-notchedOutline':{borderRadius:\"12px\"},'& .MuiInputBase-input':{height:51,fontSize:36,fontFamily:'Fira Sans'}},error:Boolean(formError[fieldName]),helperText:formError[fieldName],InputProps:{inputMode:'numeric',startAdornment:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(FiraSansTypography,{fontSize:28,sx:{color:'#9E9E9E'},children:\"+91\"}),/*#__PURE__*/_jsx(Divider,{orientation:\"vertical\",sx:{height:\"48px\",borderColor:'#696969',marginX:\"14px\"}})]})},onKeyDown:handleKeyDown},fieldType:fieldProps.fieldType,onChange:onChange},fieldName);})})]}),/*#__PURE__*/_jsxs(Stack,{children:[/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"subtitle2\",align:\"center\",sx:{color:theme.palette.common.primaryGreyText},children:\"Proceeding ahead you will accept\"}),/*#__PURE__*/_jsx(FiraSansTypography,{variant:\"subtitle2\",align:\"center\",sx:{color:theme.palette.common.white},children:\"Our Terms & Policy\"})]})]})})});};export default/*#__PURE__*/memo(Login);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}