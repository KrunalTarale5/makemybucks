{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-unsafe-return */import{validateForm}from'@utils/validateUtils';import axios from'axios';import{useMutation,useQuery}from'react-query';import{validateAmPm,validateDateMonth,validateHours,validateImage,validateInformationText,validateMenuCategoryName,validateMessageBody,validateMinute,validateSelectBodyType,validateTypeHeading}from'@utils/validator';export const useGetAllNotificationApi=request=>{return useQuery(['get_notification',request],()=>axios({method:'GET',url:\"/get_notification/\",params:request}));};export const useGetAllNotificationByIdApi=id=>{return useQuery(['get_notification_id',String(id)],()=>axios({method:'GET',url:\"/get_notification/\".concat(id,\"/\")}),{enabled:Boolean(id)});};export const useCreateNotificationApi=id=>useMutation(info=>{const formData=new FormData();Object.keys(info.request).forEach(l=>{if(!(l==='message_img')){formData.append(l,info.request[l]);}});if(info.request.message_img)formData.append('message_img',info.request.message_img[0],info.request.message_img[0].name);return axios({method:'POST',url:id?\"/send_notification_api/\".concat(id,\"/\"):\"/send_notification_api/\",data:formData});});export const CreateNotificationFields=(fieldName,formData)=>{var _formData$message_typ,_formData$message_typ2,_formData$message_typ3,_formData$message_typ4;switch(fieldName){case'message_img':return formData.message_body_type.value==='image'?validateImage(formData[fieldName]):'';case'message_title':return validateTypeHeading(formData[fieldName]);case'message_info_text':return validateInformationText(formData[fieldName]);case'message_category':return validateMenuCategoryName(formData[fieldName]);case'message_body_type':return validateSelectBodyType(formData[fieldName]);case'message_body':return formData.message_body_type.value==='text'?validateMessageBody(formData[fieldName]):'';case'message_type':return validateSelectBodyType(formData[fieldName]);case'hr':return((_formData$message_typ=formData.message_type)===null||_formData$message_typ===void 0?void 0:_formData$message_typ.value)==='schedule send'?validateHours(formData[fieldName]):'';case'min':return((_formData$message_typ2=formData.message_type)===null||_formData$message_typ2===void 0?void 0:_formData$message_typ2.value)==='schedule send'?validateMinute(formData[fieldName]):'';case'ampm':return((_formData$message_typ3=formData.message_type)===null||_formData$message_typ3===void 0?void 0:_formData$message_typ3.value)==='schedule send'?validateAmPm(formData[fieldName]):'';case'ddmm':return((_formData$message_typ4=formData.message_type)===null||_formData$message_typ4===void 0?void 0:_formData$message_typ4.value)==='schedule send'?validateDateMonth(formData[fieldName]):'';default:return'';}};export const validateCreateNotificationForm=formData=>validateForm(formData,CreateNotificationFields);export const useGetSelectCategoryListApi=()=>{return useQuery(['get_msg_category'],()=>axios({method:'GET',url:\"/get_msg_category/\"}));};export const useQwickSendApi=()=>{return useMutation(info=>axios({method:'POST',url:\"/quick_notification_api/\".concat(info.id,\"/\"),data:info.request}));};export const useGetNotification_status_Api=()=>{return useQuery(['notification_status_api'],()=>axios({method:'GET',url:\"/notification_status_api/\"}),{refetchInterval:60000});};export const useUpdateNotificationStatusApi=()=>{return useMutation(info=>{const formData=new FormData();Object.keys(info.request).forEach(l=>{formData.append(l,info.request[l]);});return axios({method:'POST',url:\"/update_red_dot_status_api/\",data:formData});});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}